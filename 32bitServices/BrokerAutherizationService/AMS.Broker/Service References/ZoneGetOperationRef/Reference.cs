//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMS.Broker.AutherizationService.ZoneGetOperationRef {
    using System.Runtime.Serialization;
    using System;
        
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ZoneGetOperationRef.IZonesGetOperationService")]
    public interface IZonesGetOperationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetZonesByDeviceId", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetZonesByDeviceIdResponse")]
        AMS.Broker.Contracts.DTO.Zone[] GetZonesByDeviceId(string authToken, long deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetZonesByDeviceId", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetZonesByDeviceIdResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.Zone[]> GetZonesByDeviceIdAsync(string authToken, long deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetZones", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetZonesResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetZones(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetZones", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetZonesResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetZonesAsync(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetSites", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetSitesResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetSites(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetSites", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetSitesResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSitesAsync(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetAllSites", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetAllSitesResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetAllSites(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetAllSites", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetAllSitesResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetAllSitesAsync(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetSitesList", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetSitesListResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetSitesList(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetSitesList", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetSitesListResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSitesListAsync(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetSiteMap", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetSiteMapResponse")]
        byte[] GetSiteMap(string authToken, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZonesGetOperationService/GetSiteMap", ReplyAction="http://tempuri.org/IZonesGetOperationService/GetSiteMapResponse")]
        System.Threading.Tasks.Task<byte[]> GetSiteMapAsync(string authToken, int siteId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZonesGetOperationServiceChannel : AMS.Broker.AutherizationService.ZoneGetOperationRef.IZonesGetOperationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZonesGetOperationServiceClient : System.ServiceModel.ClientBase<AMS.Broker.AutherizationService.ZoneGetOperationRef.IZonesGetOperationService>, AMS.Broker.AutherizationService.ZoneGetOperationRef.IZonesGetOperationService {
        
        public ZonesGetOperationServiceClient() {
        }
        
        public ZonesGetOperationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZonesGetOperationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZonesGetOperationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZonesGetOperationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMS.Broker.Contracts.DTO.Zone[] GetZonesByDeviceId(string authToken, long deviceId) {
            return base.Channel.GetZonesByDeviceId(authToken, deviceId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.Zone[]> GetZonesByDeviceIdAsync(string authToken, long deviceId) {
            return base.Channel.GetZonesByDeviceIdAsync(authToken, deviceId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetZones(string authToken) {
            return base.Channel.GetZones(authToken);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetZonesAsync(string authToken) {
            return base.Channel.GetZonesAsync(authToken);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetSites(string authToken) {
            return base.Channel.GetSites(authToken);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSitesAsync(string authToken) {
            return base.Channel.GetSitesAsync(authToken);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetAllSites(string authToken) {
            return base.Channel.GetAllSites(authToken);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetAllSitesAsync(string authToken) {
            return base.Channel.GetAllSitesAsync(authToken);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetSitesList(string authToken) {
            return base.Channel.GetSitesList(authToken);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSitesListAsync(string authToken) {
            return base.Channel.GetSitesListAsync(authToken);
        }
        
        public byte[] GetSiteMap(string authToken, int siteId) {
            return base.Channel.GetSiteMap(authToken, siteId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetSiteMapAsync(string authToken, int siteId) {
            return base.Channel.GetSiteMapAsync(authToken, siteId);
        }
    }
}
