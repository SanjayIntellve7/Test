<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <appSettings>
    <add key="RhinoSecurity.ConnectionString" value="Server=twtw-sql012.cloudapp.net;Database=CentralDB_Dev;User Id=2020dev;Password=2020Im@ging;" />
  </appSettings>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target xsi:type="ColoredConsole" name="defaultOutput" layout="${date:format=HH\:mm\:ss} : ${message}" />
      <target xsi:type="File" name="logFile" fileName="c:\logs\AMS.Broker.AutherizationService.log" layout="${date:format=s}|${level}|${message}|${exception:format=tostring}" />
    </targets>
    <rules>
      <logger name="*" writeTo="defaultOutput" />
      <logger name="*" writeTo="logFile" />
    </rules>
  </nlog>
 <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!-- Interception is not part of the default Unity configuration schema. -->
    <!-- Before you can configure interception you must add the correct sectionExtension element to your configuration -->
    <!-- section in the configuration file.-->
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <!-- Defines some aliast to easily manipulate the mappings -->
    <alias alias="IVideoAnalyticsManagerService" type="AMS.Broker.Contracts.Services.IVideoAnalyticsManagerService, AMS.Broker.Contracts" />
    <alias alias="VideoAnalyticsManagerServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.VideoAnalyticsManagerServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ISitesService" type="AMS.Broker.Contracts.Services.ISitesService, AMS.Broker.Contracts" />
    <alias alias="SitesServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.SitesServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IUsersService" type="AMS.Broker.Contracts.Services.IUsersService, AMS.Broker.Contracts" />
    <alias alias="UsersServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.UsersServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IAuthService" type="AMS.Broker.Contracts.Services.IAuthService, AMS.Broker.Contracts" />
    <alias alias="AuthServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.AuthServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IStationsService" type="AMS.Broker.Contracts.Services.IStationsService, AMS.Broker.Contracts" />
    <alias alias="StationsServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.StationsServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IAccountsService" type="AMS.Broker.Contracts.Services.IAccountsService, AMS.Broker.Contracts" />
    <alias alias="AccountsServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.AccountsServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ILookupService" type="AMS.Broker.Contracts.Services.ILookupService, AMS.Broker.Contracts" />
    <alias alias="LookupServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.LookupServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ISystemService" type="AMS.Broker.Contracts.Services.ISystemService, AMS.Broker.Contracts" />
    <alias alias="SystemServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.SystemServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IControllerService" type="AMS.Broker.Contracts.Services.IControllerService, AMS.Broker.Contracts" />
    <alias alias="ControllerServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.ControllerServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IDirectoryService" type="AMS.Broker.Contracts.Services.IDirectoryService, AMS.Broker.Contracts" />
    <alias alias="DirectoryServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.DirectoryServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IKronosService" type="AMS.Broker.Contracts.Services.IKronosService, AMS.Broker.Contracts" />
    <alias alias="KronosServiceImpl" type="AMS.Broker.AutherizationService.Services.KronosServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ISecurityService" type="AMS.Broker.Contracts.Services.ISecurityService, AMS.Broker.Contracts" />
    <alias alias="SecurityServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.SecurityServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="TraceBehavior" type="AMS.Broker.AutherizationService.Helpers.TraceBehavior, AMS.Broker.AutherizationService" />
    <alias alias="Logger" type="NLog.Logger, NLog" />
    <!-- Default Container when creating the tree-chain of resolution-->
    <container>
      <!-- Loading the section extension only enables the interception configuration to be given in the configuration file. -->
      <!-- Interception itself will not work unless you also load the interception container extension in your Unity container instance.-->
      <extension type="Interception" />
      <register type="IDirectoryService" mapTo="DirectoryServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IControllerService" mapTo="ControllerServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IVideoAnalyticsManagerService" mapTo="VideoAnalyticsManagerServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ISitesService" mapTo="SitesServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ISystemService" mapTo="SystemServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IUsersService" mapTo="UsersServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IAuthService" mapTo="AuthServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IStationsService" mapTo="StationsServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IAccountsService" mapTo="AccountsServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ILookupService" mapTo="LookupServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ISecurityService" mapTo="SecurityServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IKronosService" mapTo="KronosServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="Logger" mapTo="NLog.Logger,NLog"></register>
    </container>
  </unity>
  <connectionStrings>
      <add name="CentralDBEntities" connectionString="metadata=.\DataStore\CentralDB.csdl|.\DataStore\CentralDB.ssdl|.\DataStore\CentralDB.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=twtw-sql012.cloudapp.net;initial catalog=CentralDB_Dev;persist security info=True;user id=2020dev;password=2020Im@ging;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
</configuration>