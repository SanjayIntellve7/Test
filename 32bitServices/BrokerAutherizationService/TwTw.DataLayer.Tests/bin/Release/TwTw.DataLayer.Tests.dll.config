<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <appSettings>
    <add key="LdapContext" value="ApplicationDirectory" />
    <add key="LdapDomain" value="localhost:50000" />
    <add key="LdapContainer" value="CN=ACL,DC=2020" />
    <add key="LdapUser" value="2020admin" />
    <add key="LdapPassword" value="2o2oImaging" />
    <add key="RolesContainerName" value="CN=Roles;CN=Groups" />
    <add key="ContactMethods" value="email,phone" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <add key="AlarmGeneratorPeriod" value="0" />
    <add key="CacheAspect.DiskPath" value="" />
    <add key="CacheAspect.TimeToLive" value="1000000" />
    <add key="CacheAspect.CacheType" value="InProcessMemoryCache" />
    <add key="RhinoSecurity.ConnectionString" value="Server=twtw-sql012.cloudapp.net;Database=CentralDB;User Id=sa;Password=sa123;" />
  </appSettings>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target xsi:type="ColoredConsole" name="defaultOutput" layout="${date:format=HH\:mm\:ss} : ${message}" />
      <target xsi:type="File" name="logFile" fileName="c:\logs\AMS.Broker.AutherizationService.log" layout="${date:format=s}|${level}|${message}|${exception:format=tostring}" />
      <!--layout="${date:format=HH\:mm\:ss} : ${message}"-->
    </targets>
    <rules>
      <logger level="Info" name="*" writeTo="defaultOutput" />
      <logger level="Info" name="*" writeTo="logFile" />
    </rules>
  </nlog>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!-- Interception is not part of the default Unity configuration schema. -->
    <!-- Before you can configure interception you must add the correct sectionExtension element to your configuration -->
    <!-- section in the configuration file.-->
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <!-- Defines some aliast to easily manipulate the mappings -->
    <alias alias="IVideoAnalyticsManagerService" type="AMS.Broker.Contracts.Services.IVideoAnalyticsManagerService, AMS.Broker.Contracts" />
    <alias alias="VideoAnalyticsManagerServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.VideoAnalyticsManagerServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IGatewayService" type="AMS.Broker.Contracts.Services.IGatewayService, AMS.Broker.Contracts" />
    <alias alias="GatewayServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.GatewayServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ISitesService" type="AMS.Broker.Contracts.Services.ISitesService, AMS.Broker.Contracts" />
    <alias alias="SitesServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.SitesServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IUsersService" type="AMS.Broker.Contracts.Services.IUsersService, AMS.Broker.Contracts" />
    <alias alias="UsersServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.UsersServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IAuthService" type="AMS.Broker.Contracts.Services.IAuthService, AMS.Broker.Contracts" />
    <alias alias="AuthServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.AuthServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IStationsService" type="AMS.Broker.Contracts.Services.IStationsService, AMS.Broker.Contracts" />
    <alias alias="StationsServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.StationsServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IAccountsService" type="AMS.Broker.Contracts.Services.IAccountsService, AMS.Broker.Contracts" />
    <alias alias="AccountsServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.AccountsServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ILookupService" type="AMS.Broker.Contracts.Services.ILookupService, AMS.Broker.Contracts" />
    <alias alias="LookupServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.LookupServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ISystemService" type="AMS.Broker.Contracts.Services.ISystemService, AMS.Broker.Contracts" />
    <alias alias="SystemServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.SystemServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IControllerService" type="AMS.Broker.Contracts.Services.IControllerService, AMS.Broker.Contracts" />
    <alias alias="ControllerServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.ControllerServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IDirectoryService" type="AMS.Broker.Contracts.Services.IDirectoryService, AMS.Broker.Contracts" />
    <alias alias="DirectoryServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.DirectoryServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="IKronosService" type="AMS.Broker.Contracts.Services.IKronosService, AMS.Broker.Contracts" />
    <alias alias="KronosServiceImpl" type="AMS.Broker.AutherizationService.Services.KronosServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="ISecurityService" type="AMS.Broker.Contracts.Services.ISecurityService, AMS.Broker.Contracts" />
    <alias alias="SecurityServiceImpl" type="AMS.Broker.AutherizationService.Services.ServicesImplementations.SecurityServiceImpl, AMS.Broker.AutherizationService" />
    <alias alias="TraceBehavior" type="AMS.Broker.AutherizationService.Helpers.TraceBehavior, AMS.Broker.AutherizationService" />
    <alias alias="Logger" type="NLog.Logger, NLog" />
    <!-- Default Container when creating the tree-chain of resolution-->
    <container>
      <!-- Loading the section extension only enables the interception configuration to be given in the configuration file. -->
      <!-- Interception itself will not work unless you also load the interception container extension in your Unity container instance.-->
      <extension type="Interception" />
      <register type="IDirectoryService" mapTo="DirectoryServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IControllerService" mapTo="ControllerServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IVideoAnalyticsManagerService" mapTo="VideoAnalyticsManagerServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ISitesService" mapTo="SitesServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IGatewayService" mapTo="GatewayServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ISystemService" mapTo="SystemServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IUsersService" mapTo="UsersServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IAuthService" mapTo="AuthServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IStationsService" mapTo="StationsServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IAccountsService" mapTo="AccountsServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ILookupService" mapTo="LookupServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="ISecurityService" mapTo="SecurityServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="IKronosService" mapTo="KronosServiceImpl">
        <lifetime type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="TraceBehavior" />
      </register>
      <register type="Logger" mapTo="NLog.Logger,NLog"></register>
    </container>
  </unity>
  <runtime>
    <system.runtime.caching>
      <memoryCache>
        <namedCaches>
          <add name="Default" physicalMemoryLimitPercentage="20" />
        </namedCaches>
      </memoryCache>
    </system.runtime.caching>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <probing privatePath="bin;Lib;" />
      <dependentAssembly>
        <assemblyIdentity name="PostSharp" publicKeyToken="b13fd38b8f9c99d7" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.28.9" newVersion="3.0.28.9" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.2.0.0" newVersion="3.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Windsor" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.2.0.0" newVersion="3.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Warning" propagateActivity="true">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="myUserTraceSource" switchValue="Warning">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="C:\logs\messages.svclog" />
    </sharedListeners>
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics wmiProviderEnabled="true">
      <messageLogging logMessagesAtTransportLevel="true" logMessagesAtServiceLevel="false" logMalformedMessages="true" logEntireMessage="true" maxSizeOfMessageToLog="65535000" maxMessagesToLog="500" />
    </diagnostics>
    <!--<diagnostics>
			<messageLogging logEntireMessage="true" logMalformedMessages="false" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" maxMessagesToLog="3000" maxSizeOfMessageToLog="10000"/>
		</diagnostics>-->
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <services>
      <service name="AMS.Broker.AutherizationService.Services.TestHarness">
        <endpoint address="http://localhost:4530/Harness" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.ITestHarness" />
        <endpoint address="http://localhost:4530/soap/Harness" binding="wsHttpBinding" bindingConfiguration="" contract="AMS.Broker.Contracts.Services.ITestHarness" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/Harness" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="MyServiceTypeBehaviors" name="AMS.Broker.AutherizationService.Services.ZonesService">
        <endpoint address="http://localhost:4530/Zone" behaviorConfiguration="SecuredWebBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" name="REST" contract="AMS.Broker.Contracts.Services.IZonesService" />
        <endpoint address="http://localhost:4530/soap/Zone" binding="wsHttpBinding" bindingConfiguration="" contract="AMS.Broker.Contracts.Services.IZonesService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/Zone" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="MyServiceTypeBehaviors" name="AMS.Broker.AutherizationService.Services.DirectoryService">
        <endpoint address="http://localhost:4530/Directory" behaviorConfiguration="SecuredWebBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" name="REST" contract="AMS.Broker.Contracts.Services.IDirectoryService" />
        <endpoint address="http://localhost:4530/soap/Directory" binding="wsHttpBinding" bindingConfiguration="" contract="AMS.Broker.Contracts.Services.IDirectoryService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/Directory" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="MyServiceTypeBehaviors" name="AMS.Broker.AutherizationService.Services.ControllerService">
        <endpoint address="http://localhost:4530/Controller" behaviorConfiguration="SecuredWebBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" name="REST" contract="AMS.Broker.Contracts.Services.IControllerService" />
        <endpoint address="http://localhost:4530/soap/Controller" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.IControllerService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/Controller" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.WebStationService">
        <endpoint address="http://localhost:4530/WebStation" behaviorConfiguration="SecuredWebBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IWebStationsService" />
        <endpoint address="http://localhost:4530/soap/WebStation" binding="wsHttpBinding" bindingConfiguration="" contract="AMS.Broker.Contracts.Services.IWebStationsService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/WebStation" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.AlertsService">
        <endpoint address="http://localhost:4530/AlertsService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IAlertsService" />
        <endpoint address="http://localhost:4530/soap/AlertsService" binding="wsHttpBinding" bindingConfiguration="" contract="AMS.Broker.Contracts.Services.IAlertsService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/AlertsService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.AccountsService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/AccountsService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IAccountsService" />
        <endpoint address="http://localhost:4530/soap/AccountsService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.IAccountsService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/AccountsService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.VideoAnalyticsManagerService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/VideoAnalyticsManagerService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IVideoAnalyticsManagerService" />
        <endpoint address="http://localhost:4530/soap/VideoAnalyticsManagerService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.IVideoAnalyticsManagerService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/VideoAnalyticsManagerService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.SitesService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/SitesService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.ISitesService" />
        <endpoint address="http://localhost:4530/soap/SitesService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.ISitesService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/SitesService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.SystemService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/SystemService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.ISystemService" />
        <endpoint address="http://localhost:4530/soap/SystemService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.ISystemService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/SystemService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.LookupService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/LookupService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.ILookupService" />
        <endpoint address="http://localhost:4530/soap/LookupService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.ILookupService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/LookupService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.AuthService">
        <endpoint address="http://localhost:4530/AuthService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IAuthService" />
        <endpoint address="http://localhost:4530/soap/AuthService" binding="wsHttpBinding" bindingConfiguration="" contract="AMS.Broker.Contracts.Services.IAuthService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/AuthService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.UsersService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/UsersService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IUsersService" />
        <endpoint address="http://localhost:4530/soap/UsersService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" bindingNamespace="http://2020.AMS" contract="AMS.Broker.Contracts.Services.IUsersService" />
        <endpoint address="mex" binding="mexHttpBinding" bindingNamespace="http://2020.AMS" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/UsersService" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="DuplexServiceBehaviour" name="AMS.Broker.AutherizationService.Services.StationsService">
        <endpoint address="net.tcp://localhost:4531/StationsService" binding="netTcpBinding" name="HttpBinding" contract="AMS.Broker.Contracts.Services.IStationsService" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/StationsService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.StreamInsightService">
        <endpoint address="http://localhost:4530/StreamInsightService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="Logica.RealTimeDataMgmt.WcfContracts.IWcfOutputAdapterService" />
        <endpoint address="http://localhost:4530/soap/StreamInsightService" binding="wsHttpBinding" bindingConfiguration="" bindingNamespace="http://2020.AMS" contract="Logica.RealTimeDataMgmt.WcfContracts.IWcfOutputAdapterService" />
        <endpoint address="mex" binding="mexHttpBinding" bindingNamespace="http://2020.AMS" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/StreamInsightService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.NvrAlarmConsumerService">
        <endpoint address="http://localhost:4530/NvrAlarmConsumerService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.INvrAlarmConsumerService" />
        <endpoint address="http://localhost:4530/soap/NvrAlarmConsumerService" binding="wsHttpBinding" bindingConfiguration="" bindingNamespace="http://2020.AMS" contract="AMS.Broker.Contracts.Services.INvrAlarmConsumerService" />
        <endpoint address="mex" binding="mexHttpBinding" bindingNamespace="http://2020.AMS" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/NvrAlarmConsumerService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.KronosService">
        <endpoint address="http://localhost:4530/KronosService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IKronosService" />
        <endpoint address="http://localhost:4530/soap/KronosService" binding="wsHttpBinding" bindingConfiguration="" bindingNamespace="http://2020.AMS" contract="AMS.Broker.Contracts.Services.IKronosService" />
        <endpoint address="mex" binding="mexHttpBinding" bindingNamespace="http://2020.AMS" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/KronosService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.SecurityService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/SecurityService" behaviorConfiguration="AlertsBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.ISecurityService" />
        <endpoint address="http://localhost:4530/soap/SecurityService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.ISecurityService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/SecurityService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.WebStation">
        <endpoint address="" binding="wsHttpBinding" contract="AMS.Broker.AutherizationService.IWebStation">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8732/Design_Time_Addresses/AMS.Broker.AutherizationService/WebStation/" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.IncidentReportService">
        <endpoint address="http://localhost:4530/IncidentReportService" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IIncidentReportService" bindingNamespace="http://2020.AMS" contract="AMS.Broker.Contracts.Services.IIncidentReportService">
          <identity>
            <userPrincipalName value="2020Broker@2020IMAGING.local" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/IncidentReportService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.IncidentReportServiceWeb">
        <endpoint address="http://localhost:4530/IncidentReportServiceWeb" behaviorConfiguration="IncidentReportServiceWebBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IIncidentReportServiceWeb" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/IncidentReportServiceWeb" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.ResourceService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint address="http://localhost:4530/ResourcesDataService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" bindingConfiguration="NoSecurityRestBinding" contract="AMS.Broker.Contracts.Services.IResourceService" />
        <endpoint address="http://localhost:4530/soap/ResourcesDataService" binding="wsHttpBinding" bindingConfiguration="LargeDataBinding" contract="AMS.Broker.Contracts.Services.IResourceService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/ResourcesDataService" />
          </baseAddresses>
        </host>
      </service>
      <service name="AMS.Broker.AutherizationService.Services.GatewayService" behaviorConfiguration="GatewayBehaviour">
        <endpoint address="http://localhost:4530/GatewayService" behaviorConfiguration="WebMetadataBehaviour" binding="webHttpBinding" contract="AMS.Broker.Contracts.Services.IGatewayService" />
        <endpoint address="http://localhost:4530/soap/GatewayService" binding="wsHttpBinding" bindingConfiguration="GatewayBindingConfiguration" contract="AMS.Broker.Contracts.Services.IGatewayService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:4530/SOAP/GatewayService" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <extensions>
      <bindingExtensions>
        <add name="pollingDuplexHttpBinding" type="System.ServiceModel.Configuration.PollingDuplexHttpBindingCollectionElement, System.ServiceModel.PollingDuplex,Version=5.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35" />
      </bindingExtensions>
      <!--<behaviorExtensions>
				<add name="silverlightFaults" type="AMS.Broker.AutherizationService.SilverlightFaultBehavior, AMS.Broker.AutherizationService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
			</behaviorExtensions>-->
    </extensions>
    <bindings>
      <netTcpBinding>
        <binding name="HttpBinding" closeTimeout="00:00:10" openTimeout="00:00:10" receiveTimeout="00:00:10" sendTimeout="00:00:10" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288" maxBufferSize="1073741823" maxConnections="10" maxReceivedMessageSize="1073741823" portSharingEnabled="false">
          <readerQuotas maxDepth="200" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:00:10" enabled="false" />
          <security mode="None" />
        </binding>
        <binding closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="10:00:00" sendTimeout="00:10:00" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288" maxBufferSize="1073741823" maxConnections="10" maxReceivedMessageSize="1073741823" portSharingEnabled="false">
          <readerQuotas maxDepth="200" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="10:00:00" enabled="false" />
          <security mode="None" />
        </binding>
      </netTcpBinding>
      <wsDualHttpBinding>
        <binding name="MobileDuplex" clientBaseAddress="http://localhost:4530/WebStation" />
      </wsDualHttpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IIncidentReportService" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="1073741823" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="200" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:00:30" enabled="false" />
          <security mode="None" />
        </binding>
        <binding name="WSHttpBinding_ITwoWayAsyncVoid" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="10:00:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="1073741823" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="200" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:00:30" enabled="true" />
          <security mode="None" />
        </binding>
        <binding name="LargeDataBinding" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="10:00:00" sendTimeout="00:10:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="true" />
          <security mode="Message">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
        <binding name="WSHttpBinding_INvrCamerasService" />
        <binding name="WSHttpBinding_IVideoAnalyticsService">
          <security mode="None" />
        </binding>
        <binding name="GatewayBindingConfiguration">
          <security mode="Message">
            <message clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
      <webHttpBinding>
        <binding name="NoSecurityRestBinding" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="10:00:00" sendTimeout="00:10:00" maxBufferPoolSize="2147483647" crossDomainScriptAccessEnabled="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None" />
        </binding>
      </webHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="CrossDomainServiceBehavior">
          <webHttp />
        </behavior>
        <behavior name="DuplexServiceBehaviour">
          <endpointDiscovery enabled="true" />
        </behavior>
        <behavior name="SecuredWebBehaviour">
          <webHttp helpEnabled="true" defaultBodyStyle="Bare" defaultOutgoingResponseFormat="Json" automaticFormatSelectionEnabled="false" />
          <enableWebScript />
          <endpointDiscovery enabled="true" />
        </behavior>
        <behavior name="WebMetadataBehaviour">
          <webHttp helpEnabled="true" defaultBodyStyle="Bare" defaultOutgoingResponseFormat="Json" automaticFormatSelectionEnabled="false" />
          <enableWebScript />
          <endpointDiscovery enabled="true" />
        </behavior>
        <behavior name="AlertsBehaviour">
          <webHttp helpEnabled="true" defaultBodyStyle="Bare" defaultOutgoingResponseFormat="Json" automaticFormatSelectionEnabled="false" />
          <endpointDiscovery enabled="true" />
        </behavior>
        <behavior name="IncidentReportServiceWebBehaviour">
          <webHttp helpEnabled="true" defaultBodyStyle="Bare" defaultOutgoingResponseFormat="Json" automaticFormatSelectionEnabled="false" />
          <endpointDiscovery enabled="true" />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="DuplexServiceBehaviour">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="WebMetadataBehaviour">
          <serviceMetadata httpGetEnabled="true" />
        </behavior>
        <behavior name="SecuredWebBehaviour" />
        <behavior name="ServiceCredentialsBehavior">
          <serviceCredentials>
            <serviceCertificate findValue="2020imaging.com" x509FindType="FindBySubjectName" />
          </serviceCredentials>
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
        <behavior name="MyServiceTypeBehaviors">
          <serviceMetadata httpGetEnabled="true" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="MembershipProvider" membershipProviderName="SqlMembershipProvider" />
            <serviceCertificate findValue="73bc13e5b1ea84b8443fec62d8655f26" x509FindType="FindBySerialNumber" />
          </serviceCredentials>
          <serviceAuthorization roleProviderName="RihnoRoleProvider" principalPermissionMode="UseAspNetRoles" />
        </behavior>
        <behavior name="GatewayBehaviour">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceCredentials>
            <serviceCertificate findValue="73bc13e5b1ea84b8443fec62d8655f26" x509FindType="FindBySerialNumber" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!--<client>
      <endpoint address="http://localhost:4535/WebStation" binding="wsDualHttpBinding"
        bindingConfiguration="" contract="AMS.Broker.Contracts.Services.IStationsService"
        name="ClientDuplex" />
    </client>-->
    <client>
      <endpoint address="http://2020-biztalk01.2020imaging.local/BizTalkAMSBroker/AlertProcessingService.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ITwoWayAsyncVoid" contract="AlertProcessingServiceReference.AlertProcessingService" name="WSHttpBinding_ITwoWayAsyncVoid">
        <identity>
          <userPrincipalName value="2020Broker@2020IMAGING.local" />
        </identity>
      </endpoint>
      <endpoint address="http://localhost:4532/soap/NvrCamerasService" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_INvrCamerasService" contract="NvrCamerasService.INvrCamerasService" name="WSHttpBinding_INvrCamerasService">
        <identity>
          <userPrincipalName value="2020admin@2020IMAGING.local" />
        </identity>
      </endpoint>
      <endpoint address="http://localhost:4532/soap/VideoAnalyticsService" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IVideoAnalyticsService" contract="NvrVideoAnalytics.IVideoAnalyticsService" name="WSHttpBinding_IVideoAnalyticsService" />
    </client>
  </system.serviceModel>
  <connectionStrings>
    <add name="CentralDBEntities" connectionString="Server=twtw-sql012.cloudapp.net;Database=CentralDB;User Id=sa;Password=sa123;" providerName="System.Data.SqlClient" />
    <add name="CentralDBEntities_BoundedContexts" connectionString="Server=twtw-sql012.cloudapp.net;Database=CentralDB;User Id=sa;Password=sa123;" providerName="System.Data.SqlClient" />
    <add name="CentralDB_ExternalFieldDefinition" connectionString="metadata=res://*/DataStore.ExternalFieldDefinition.csdl|res://*/DataStore.ExternalFieldDefinition.ssdl|res://*/DataStore.ExternalFieldDefinition.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=twtw-sql012.cloudapp.net;initial catalog=CentralDB;persist security info=True;user id=sa;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="CentralDB_DevEntities" connectionString="metadata=res://*/DataStore.CentralDB.csdl|res://*/DataStore.CentralDB.ssdl|res://*/DataStore.CentralDB.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=twtw-sql012.cloudapp.net;initial catalog=CentralDB;persist security info=True;user id=sa;password=sa123;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="SqlMembershipConn" connectionString="Server=twtw-sql012.cloudapp.net;Database=CentralDB;User Id=sa;Password=sa123;" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
  <system.web>
    <httpRuntime maxRequestLength="1073741823" />
    <!-- ToDO: remove security threat - tune for sensible data size -->
    <membership defaultProvider="SqlMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
        <add name="SqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="SqlMembershipConn" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" minRequiredPasswordLength="1" minRequiredNonalphanumericCharacters="0" passwordStrengthRegularExpression="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
        <add name="RihnoRoleProvider" type="AMS.Broker.AutherizationService.RihnoSecurity.Membership.RihnoRoleProvider, AMS.Broker.AutherizationService" />
      </providers>
    </roleManager>
  </system.web>
</configuration>