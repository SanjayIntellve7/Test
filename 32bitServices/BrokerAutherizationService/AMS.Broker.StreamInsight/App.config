<?xml version="1.0"?>
<!-- Logica.RealTimeDataMgmt.ConsoleHost -->
<configuration>
  <configSections>
    <section name="Logica.RealTimeDataMgmt" type="Logica.RealTimeDataMgmt.Common.Configuration.RTDataMgmtConfiguration, Logica.RealTimeDataMgmt"/>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>

  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!--Log levels from MOST verbose to LEAST verbose are: Trace, Debug, Info, Warn, Error, Fatal, Off-->
    <targets>
      <target name="console" xsi:type="ColoredConsole" useDefaultRowHighlightingRules="true" layout="${longdate}^${logger}^${message}"/>
      <target name="eventTrace" xsi:type="ColoredConsole" useDefaultRowHighlightingRules="true" layout="${longdate}^${logger}^${message}"/>
      <target xsi:type="EventLog" name="events" layout="${longdate}${newline}callsite=${callsite}${newline}logger=${logger}${newline}identity=${identity}${newline}processinfo=${processinfo}${newline}message=${message}${newline}${exception:format=Type,Message,Method,StackTrace:separator=\n}"/>

      <target name="NoOutputFile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
        <target xsi:type="File" name="file_NoOutput" layout="${longdate} ${logger} ${message}" fileName="${basedir}/logfile_NoOutput.txt" keepFileOpen="true" encoding="iso-8859-2"/>
      </target>

      <target name="DefaultFile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
        <target xsi:type="File" name="file_default" layout="${longdate} ${logger} ${message}" fileName="C:/logs/logfile_default.txt" keepFileOpen="true" encoding="iso-8859-2"/>
      </target>
      <target name="ErrorFile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
        <target xsi:type="File" name="file_default" layout="${longdate} ${logger} ${message}" fileName="C:/logs/logfile_error.txt" keepFileOpen="true" encoding="iso-8859-2"/>
      </target>
    </targets>

    <rules>
      <!-- calls to Logging.* get sent to default log client, which is named 'Default' -->
      <logger name="EventTracer" minlevel="Trace" writeTo="eventTrace"/>
      <logger name="Default" minlevel="Trace" writeTo="DefaultFile"/>
      <logger name="Sql" minlevel="Trace" writeTo="ErrorFile"/>
      <logger name="NoOutput" minlevel="Error" writeTo="console"/>
      <logger name="console" minlevel="Trace" writeTo="console"/>
      <logger name="consoleInfo" minlevel="Info" writeTo="console"/>
      <logger name="SqlLog" minlevel="Error" writeTo="console"/>
      <logger name="*" minlevel="Error" writeTo="events"/>
      <logger name="*" minlevel="Error" writeTo="console"/>
      <logger name="*" minlevel="Trace" writeTo="DefaultFile"/>
    </rules>
  </nlog>

  <Logica.RealTimeDataMgmt defaultTraceSource="NoOutput">
    <license licensedUser="2020Imaging" licenseKey="89BC-26CA1F5C-F8BE06C3-2800" licenseFile="C:\Program Files\2020Imaging\2020 TouchControl StremInsight\2020Imaging.lic"/>
    <serverHost instance="TwentyTwentyStreamInsightServer" applicationName="2020TouchControl" serviceUrl="http://localhost/TwentyTwentyImaging/TouchControl" logName="console" defaultOutputAdapter="NullOutputAdapter">

      <baseUris>
        <add name="WcfDuplex.SilverlightHttpDuplex" value="http://localhost/Logica/RealTimeDataMgmt"/>
        <add name="WcfDuplex.SilverlightNetTcp" value="net.tcp://localhost:4530/Logica/RealTimeDataMgmt"/>
        <add name="WcfDuplex.NetTcpBinary" value="net.tcp://localhost:8752/Logica/RealTimeDataMgmt"/>
      </baseUris>
      <services>
        <service name="RTDM Management Service" description="Custom management service for RealTime Data Management Services" assemblyName="Logica.RealTimeDataMgmt" logName="NoOutput" typeName="Logica.RealTimeDataMgmt.Services.Administration.AdministrationServiceFactory" serviceUri="http://localhost/Logica/RealTimeDataMgmt/Management">
          <settings>

          </settings>
        </service>
        <service name="RTDM Duplex Registration Service" description="Custservice for dynamic registration of WCF Duplex queries and output adapters" assemblyName="Logica.RealTimeDataMgmt" logName="NoOutput" typeName="Logica.RealTimeDataMgmt.Services.WCFDuplex.WcfDuplexRegistrationServiceFactory" serviceUri="http://localhost/Logica/RealTimeDataMgmt/DuplexRegistration">
          <settings>
          </settings>
        </service>
      </services>
      <queries>
        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmAboveLevelQueryAdapterInt32Query" description="" logName="Default" name="FirstQuery7" autoStart="true">
          <settings>
            <add name="AlaramAboveLevel" value="100"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
            <inputAdapter name="Source" value="OPCInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>
        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmWhenInRangeQueryAdapterInt32Query" description="" logName="Default" name="SecondQuery23" autoStart="true">
          <settings>
            <add name="MaxLevel" value="2"/>
            <add name="MinLevel" value="0"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="Source" value="OPCInputAdapter2"/>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>

        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmWhenInRangeQueryAdapterInt32Query" description="" logName="Default" name="ThirdQuery24" autoStart="true">
          <settings>
            <add name="MaxLevel" value="2000"/>
            <add name="MinLevel" value="1950"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="Source" value="OPCInputAdapter3"/>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>

        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmWhenInRangeQueryAdapterInt32Query" description="" logName="Default" name="Query25" autoStart="true">
          <settings>
            <add name="MaxLevel" value="1000001"/>
            <add name="MinLevel" value="999990"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="Source" value="OPCInputAdapter25"/>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>
        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmWhenInRangeQueryAdapterInt32Query" description="" logName="Default" name="Query26" autoStart="true">
          <settings>
            <add name="MaxLevel" value="20001"/>
            <add name="MinLevel" value="19900"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="Source" value="OPCInputAdapter26"/>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>
        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmWhenInRangeQueryAdapterInt32Query" description="" logName="Default" name="Query27" autoStart="true">
          <settings>
            <add name="MaxLevel" value="10000"/>
            <add name="MinLevel" value="0"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="Source" value="OPCInputAdapter27"/>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>
        <query assemblyName="AMS.Broker.AutherizationService.StreamInsight.Queries" typeName="AMS.Broker.AutherizationService.StreamInsight.Queries.AlarmWhenInRangeQueryAdapterInt32Query" description="" logName="Default" name="Query28" autoStart="true">
          <settings>
            <add name="MaxLevel" value="101"/>
            <add name="MinLevel" value="99"/>
          </settings>
          <inputAdapters>
            <inputAdapter name="Source" value="OPCInputAdapter28"/>
            <inputAdapter name="ReferenceSource" value="SqlReferenceInputAdapter"/>
          </inputAdapters>
          <outputAdapters>
            <!--<outputAdapter name="Output" value="TracerAdapter"/>-->
            <outputAdapter name="Output" value="AMSBrokerWCFAdapter"/>
          </outputAdapters>
        </query>
      </queries>

      <inputAdapters>
        <inputAdapter name="OPCInputAdapter" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>


        <inputAdapter name="OPCInputAdapter2" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet2"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>

        <inputAdapter name="OPCInputAdapter3" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet3"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>

        <inputAdapter name="OPCInputAdapter25" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet4"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>

        <inputAdapter name="OPCInputAdapter26" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet5"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>

        <inputAdapter name="OPCInputAdapter27" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet6"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>

        <inputAdapter name="OPCInputAdapter28" description="Subscribes to an OPC server." assemblyName="Logica.RealTimeDataMgmt.Adapters.OPC" typeName="Logica.RealTimeDataMgmt.Adapters.OPC.OPCx64.Opc64InputFactory" logName="Default">
          <settings>
            <!--The OPC server name defined in the OPC Configuration file Ex.  MatrikonOPCServer, AdvosolOPCServer, etc.-->
            <add name="ServerName" value="MatrikonOPCServer"/>
            <!--The subscription set name for a particular OPC server-->
            <add name="SubscriptionSetName" value="MatrikonSubscriptionSet7"/>
            <!--The name of the OPC Api supported by the framework. Advosol, OPCFoundation and OPCLabs are currently the 3 APIs supported-->
            <add name="OPCPublisherName" value="Advosol"/>
            <!--The relative path to the OPC Configuration data-->
            <add name="DatabaseFilePath" value="ConfigDB\OpcConfiguration.sdf"/>
            <!--(Default ="") Prefix added when selecting the items for a subscription.-->
            <add name="ItemIdPrefix" value=""/>
            <!--(Default=true) Indicates to include CTis in the Input Adapter. Set this property to false when using Advance Time Settings to avoid submitting unnecessary CTIs.-->
            <add name="IncludeCti" value="true"/>
          </settings>
        </inputAdapter>

        <inputAdapter name="SqlReferenceInputAdapter" description="Reads data from Microsoft Sql Server for input" typeName="Logica.RealTimeDataMgmt.Adapters.SqlReference.SqlReferenceInputFactory" assemblyName="Logica.RealTimeDataMgmt" logName="Sql">
          <settings>
            <!-- Database connection string  -->
            <add name="DatabaseConnectionString" value="Data Source=naboo;Initial Catalog=CentralDB;User ID=sa;Password=uicAdmin1977"/>
            <!-- Text, StoredProcedure-->
            <add name="CommandType" value="Text"/>
            <!-- Command text -->
            <add name="CommandText" value="select DeviceId,Type as DeviceType,Lat,Long,Altitude, CAST(Metadata.query('/metadata/stream-insight-id/text()') AS varchar(128))as StreamInsightId,dbo.CombineValues(DeviceId) as ZonesList from Devices;"/>
            <add name="StartTime" value="2010-01-01T11:30:00.1000000"/>
            <!--Determines the event end time, if values is not provided the default value will be DataTime.-->
            <add name="EndTime" value="2099-01-01T11:30:00.1000000"/>
            <!-- Determines how frequently items are refreshed from the database. Set 00:00:00 to prevent refresh. Default is 5 minutes -->
            <add name="RefreshInterval" value="00:00:15"/>
            <add name="EnqueueCTIs" value="false"/>
            <add name="DatabaseKind" value="Sql"/>
            <!-- Last updated parameter name in order to pull latest records only -->
            <!--<add name="LastUpdatedParameterName" value="@lastRecorded"/>-->
          </settings>
        </inputAdapter>
      </inputAdapters>
      <outputAdapters>
        <outputAdapter name="NullOutputAdapter" description="default null output adapter" typeName="Logica.RealTimeDataMgmt.Adapters.Null.NullOutputFactory" assemblyName="Logica.RealTimeDataMgmt" logName="Default">
          <settings>
            <!-- No Settings Required.-->
          </settings>
        </outputAdapter>
        <outputAdapter name="TracerAdapter" description="Outputs to the trace" typeName="Logica.RealTimeDataMgmt.Adapters.Tracer.TracerOutputFactory" assemblyName="Logica.RealTimeDataMgmt" logName="Default">
          <settings>
            <add name="DisplayCtiEvents" value="true"/>
            <add name="TracerKind" value="Console"/>
            <add name="TraceName" value="Values"/>
            <add name="SingleLine" value="false"/>
          </settings>
        </outputAdapter>
        <outputAdapter name="AMSBrokerWCFAdapter" description="A generic WCF adapter" typeName="Logica.RealTimeDataMgmt.Adapters.Wcf.WcfOutputFactory" assemblyName="Logica.RealTimeDataMgmt" logName="Default">
          <settings>
            <!-- Include Cti, Default is false-->
            <add name="IncludeCti" value="true"/>
            <!-- Retry interval in case WCF service is not responding or down. Value shoule be in Timespan format, Default is '00:05:00'-->
            <add name="RetryInterval" value="00:01:00"/>
          </settings>
        </outputAdapter>
      </outputAdapters>

      <metadataProviders>
        <!--<metadataProvider name="TestMetadata" description="" typeName="Logica.RealTimeDataMgmt.Metadata.WitsmlLog.WitsmlLogMetadataProvider" assemblyName="Logica.RealTimeDataMgmt" logName="NoOutput">
					<settings>
						<add name="LogFile" value="ConfigDb\Melange\GenTimeTemplate.xml" />
					</settings>
				</metadataProvider>-->

        <metadataProvider name="DuncanIdahoMetadata" description="" typeName="Logica.RealTimeDataMgmt.Metadata.SqlCe.SqlCeMetadataProvider" assemblyName="Logica.RealTimeDataMgmt" logName="NoOutput">
          <settings>
            <add name="ConnectionString" value="Data Source=ConfigDB\TurbineMetadata.sdf;Persist Security Info=False;"/>
          </settings>
        </metadataProvider>

      </metadataProviders>

      <!--<sources>
				<source name="MySource"
								description="My source description."
								assemblyName="Logica.RealTimeDataMgmt"
								typeName="Logica.RealTimeDataMgmt.Sources.Interval.IntervalSource"
								logName="info">
					<settings>
						<add name="Interval" value="00:00:01" />
					</settings>
				</source>
			</sources>-->
    </serverHost>
    <threadPooling minIocpThreads="4" maxIocpThreads="20" minWorkerThreads="8" maxWorkerThreads="30"/>
  </Logica.RealTimeDataMgmt>
  <system.serviceModel>
    <!-- Register the binding extension from the SDK. -->
    <extensions>
      <bindingExtensions>
        <add name="pollingDuplexHttpBinding" type="System.ServiceModel.Configuration.PollingDuplexHttpBindingCollectionElement,System.ServiceModel.PollingDuplex,Version=4.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35"/>
        <!--<add name="SilverlightHttpDuplexExtension"
						 type="System.ServiceModel.Configuration.PollingDuplexHttpBindingCollectionElement,                    
						 System.ServiceModel.PollingDuplex,                     
						 Version=4.0.0.0,                     
						 Culture=neutral,                     
						 PublicKeyToken=31bf3856ad364e35"/>-->
      </bindingExtensions>
      <bindingElementExtensions>
        <add name="pollingDuplex" type="System.ServiceModel.Configuration.PollingDuplexElement, System.ServiceModel.PollingDuplex"/>
      </bindingElementExtensions>
    </extensions>
    <!-- Create the polling duplex binding. -->
    <bindings>
      <netTcpBinding>
        <binding name="NetTcpBinary" portSharingEnabled="true">
          <security mode="None">
            <transport protectionLevel="None"/>
            <message clientCredentialType="None"/>
          </security>
        </binding>
      </netTcpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_WcfOutputAdapterService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default"/>
          </security>
        </binding>
        <binding name="WSHttpBinding_WcfOutputAdapterService1" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <!-- WCF Duplex Service -->
      <!--<service name="Logica.RealTimeDataMgmt.Adapters.WCFDuplex.WcfDuplexService"
							 behaviorConfiguration="WCFDuplexServer.WcfServiceBehavior.DEV">
				<host>
				</host>
				-->
      <!-- Note: the service name must match the configuration name for the service implementation. -->
      <!--<service name="Logica.RealTimeDataMgmt.Hosting.Services.Metadata.MetadataService" behaviorConfiguration="WCF.MetadataServiceBehavior" >
				<endpoint contract="Logica.RealTimeDataMgmt.Services.Metadata.IMetadataService" binding="pollingDuplexHttpBinding"  address="http://localhost/Logica/RealTimeDataMgmt/Metadata" />
			</service>-->
      <!-- Service Endpoints -->
      <!--
				-->
      <!--<endpoint address="/SilverlightHttpDuplex"
									binding="SilverlightHttpDuplexExtension"
									bindingConfiguration="DuplexChunkedBinary"
									contract="Logica.RealTimeDataMgmt.Services.WcfDuplex.IWcfDuplexService">
				</endpoint>
				<endpoint address="/netTCPDuplex" 
									binding="netTcpBinding" 
									bindingConfiguration="netTCPDuplex"
									contract="Logica.RealTimeDataMgmt.Services.WcfDuplex.IWcfDuplexService" />-->
      <!--
				-->
      <!--

			</service>-->
      <!-- WCF Registration Service-->
      <!--<service name="Logica.RealTimeDataMgmt.Hosting.Services.WcfDuplex.WcfDuplexRegistrationService"
							 behaviorConfiguration="WCFDuplexServer.WcfServiceBehavior.DEV">
				<endpoint 
					address="" 
					binding="wsHttpBinding"
					contract="Logica.RealTimeDataMgmt.Hosting.Services.WcfDuplex.IWcfDuplexRegistration">
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
			</service>-->
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="WCFDuplexServer.WcfServiceBehavior.DEV">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>

          <serviceThrottling maxConcurrentSessions="2147483647"/>
        </behavior>
        <!--<behavior name="WCF.MetadataServiceBehavior" >
					<serviceMetadata httpGetEnabled="true" />
				</behavior>-->
      </serviceBehaviors>
    </behaviors>
    <client>
      <endpoint address="http://localhost:4530/soap/StreamInsightService" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_WcfOutputAdapterService" contract="Logica.RealTimeDataMgmt.WcfContracts.IWcfOutputAdapterService" name="AMSBrokerWCFAdapter:Service1">
        <identity>
          <userPrincipalName value="szymon@uicentric.local"/>
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>
  <system.diagnostics>

    <sources>
      <source name="OSIsoft.ComplexEventProcessing" switchName="defaultSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="consoleListener"/>
          <remove name="Default"/>
        </listeners>
      </source>
    </sources>

    <switches>
      <clear/>
      <add name="defaultSwitch" value="Verbose"/>
      <add name="OSIsoft.ComplexEventProcessing.Adapters.AdapterTrace" value="Verbose"/>
      <add name="OSIsoft.ComplexEventProcessing.Adapters.AdapterStatisticsTrace" value="Verbose"/>
      <add name="OSIsoft.ComplexEventProcessing.Adapters.PINetTrace" value="Verbose"/>
    </switches>

    <sharedListeners>
      <add name="consoleListener" type="System.Diagnostics.ConsoleTraceListener" traceOutputOptions="ProcessId, DateTime"/>
      <!--<add name="fileListener" type="System.Diagnostics.TextWriterTraceListener" traceOutputOptions="ProcessId, DateTime" initializeData="PiAdapters.log" />-->
    </sharedListeners>

  </system.diagnostics>
  <startup useLegacyV2RuntimeActivationPolicy="true">

    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.ComplexEventProcessing" publicKeyToken="89845DCD8080CC91" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-21.0.0.0" newVersion="21.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.ComplexEventProcessing.Adapters" publicKeyToken="89845DCD8080CC91" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-21.0.0.0" newVersion="21.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.ComplexEventProcessing.ManagementService" publicKeyToken="89845DCD8080CC91" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-21.0.0.0" newVersion="21.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
