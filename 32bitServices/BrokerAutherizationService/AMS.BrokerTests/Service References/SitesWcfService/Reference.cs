//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMS.Broker.AutherizationServiceTests.SitesWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SitesWcfService.ISitesService")]
    public interface ISitesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSiteType", ReplyAction="http://tempuri.org/ISitesService/GetSiteTypeResponse")]
        AMS.Broker.Contracts.DTO.SiteTypeDto GetSiteType(int siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSiteType", ReplyAction="http://tempuri.org/ISitesService/GetSiteTypeResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto> GetSiteTypeAsync(int siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSiteTypes", ReplyAction="http://tempuri.org/ISitesService/GetSiteTypesResponse")]
        AMS.Broker.Contracts.DTO.SiteTypeDto[] GetSiteTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSiteTypes", ReplyAction="http://tempuri.org/ISitesService/GetSiteTypesResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto[]> GetSiteTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/AddSiteType", ReplyAction="http://tempuri.org/ISitesService/AddSiteTypeResponse")]
        AMS.Broker.Contracts.DTO.SiteTypeDto AddSiteType(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/AddSiteType", ReplyAction="http://tempuri.org/ISitesService/AddSiteTypeResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto> AddSiteTypeAsync(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/UpdateSiteType", ReplyAction="http://tempuri.org/ISitesService/UpdateSiteTypeResponse")]
        AMS.Broker.Contracts.DTO.SiteTypeDto UpdateSiteType(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/UpdateSiteType", ReplyAction="http://tempuri.org/ISitesService/UpdateSiteTypeResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto> UpdateSiteTypeAsync(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/DeleteSiteType", ReplyAction="http://tempuri.org/ISitesService/DeleteSiteTypeResponse")]
        bool DeleteSiteType(int siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/DeleteSiteType", ReplyAction="http://tempuri.org/ISitesService/DeleteSiteTypeResponse")]
        System.Threading.Tasks.Task<bool> DeleteSiteTypeAsync(int siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/GetBBoxPointResponse")]
        AMS.Broker.Contracts.DTO.BBoxPointDto GetBBoxPoint(int bboxPointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/GetBBoxPointResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto> GetBBoxPointAsync(int bboxPointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetBBoxPointsBySite", ReplyAction="http://tempuri.org/ISitesService/GetBBoxPointsBySiteResponse")]
        AMS.Broker.Contracts.DTO.BBoxPointDto[] GetBBoxPointsBySite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetBBoxPointsBySite", ReplyAction="http://tempuri.org/ISitesService/GetBBoxPointsBySiteResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto[]> GetBBoxPointsBySiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/AddBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/AddBBoxPointResponse")]
        AMS.Broker.Contracts.DTO.BBoxPointDto AddBBoxPoint(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToAdd, AMS.Broker.Contracts.DTO.SiteDto site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/AddBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/AddBBoxPointResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto> AddBBoxPointAsync(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToAdd, AMS.Broker.Contracts.DTO.SiteDto site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/UpdateBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/UpdateBBoxPointResponse")]
        AMS.Broker.Contracts.DTO.BBoxPointDto UpdateBBoxPoint(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/UpdateBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/UpdateBBoxPointResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto> UpdateBBoxPointAsync(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/DeleteBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/DeleteBBoxPointResponse")]
        bool DeleteBBoxPoint(int bboxPointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/DeleteBBoxPoint", ReplyAction="http://tempuri.org/ISitesService/DeleteBBoxPointResponse")]
        System.Threading.Tasks.Task<bool> DeleteBBoxPointAsync(int bboxPointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSite", ReplyAction="http://tempuri.org/ISitesService/GetSiteResponse")]
        AMS.Broker.Contracts.DTO.SiteDto GetSite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSite", ReplyAction="http://tempuri.org/ISitesService/GetSiteResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> GetSiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSites", ReplyAction="http://tempuri.org/ISitesService/GetSitesResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetSites();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSites", ReplyAction="http://tempuri.org/ISitesService/GetSitesResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSitesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSiteForAccount", ReplyAction="http://tempuri.org/ISitesService/GetSiteForAccountResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetSiteForAccount(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetSiteForAccount", ReplyAction="http://tempuri.org/ISitesService/GetSiteForAccountResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSiteForAccountAsync(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetChildSites", ReplyAction="http://tempuri.org/ISitesService/GetChildSitesResponse")]
        AMS.Broker.Contracts.DTO.SiteDto[] GetChildSites(int parentSiteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/GetChildSites", ReplyAction="http://tempuri.org/ISitesService/GetChildSitesResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetChildSitesAsync(int parentSiteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/AddSite", ReplyAction="http://tempuri.org/ISitesService/AddSiteResponse")]
        AMS.Broker.Contracts.DTO.SiteDto AddSite(AMS.Broker.Contracts.DTO.SiteDto siteToAdd, AMS.Broker.Contracts.DTO.SiteTypeDto siteType, AMS.Broker.Contracts.DTO.SiteDto parentSite, AMS.Broker.Contracts.DTO.AddressDto address, AMS.Broker.Contracts.DTO.AccountDto account, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/AddSite", ReplyAction="http://tempuri.org/ISitesService/AddSiteResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> AddSiteAsync(AMS.Broker.Contracts.DTO.SiteDto siteToAdd, AMS.Broker.Contracts.DTO.SiteTypeDto siteType, AMS.Broker.Contracts.DTO.SiteDto parentSite, AMS.Broker.Contracts.DTO.AddressDto address, AMS.Broker.Contracts.DTO.AccountDto account, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/UpdateSite", ReplyAction="http://tempuri.org/ISitesService/UpdateSiteResponse")]
        AMS.Broker.Contracts.DTO.SiteDto UpdateSite(AMS.Broker.Contracts.DTO.SiteDto siteToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/UpdateSite", ReplyAction="http://tempuri.org/ISitesService/UpdateSiteResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> UpdateSiteAsync(AMS.Broker.Contracts.DTO.SiteDto siteToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/DeleteSite", ReplyAction="http://tempuri.org/ISitesService/DeleteSiteResponse")]
        bool DeleteSite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/DeleteSite", ReplyAction="http://tempuri.org/ISitesService/DeleteSiteResponse")]
        System.Threading.Tasks.Task<bool> DeleteSiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/SetSiteBBox", ReplyAction="http://tempuri.org/ISitesService/SetSiteBBoxResponse")]
        AMS.Broker.Contracts.DTO.SiteDto SetSiteBBox(AMS.Broker.Contracts.DTO.SiteDto site, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISitesService/SetSiteBBox", ReplyAction="http://tempuri.org/ISitesService/SetSiteBBoxResponse")]
        System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> SetSiteBBoxAsync(AMS.Broker.Contracts.DTO.SiteDto site, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISitesServiceChannel : AMS.Broker.AutherizationServiceTests.SitesWcfService.ISitesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SitesServiceClient : System.ServiceModel.ClientBase<AMS.Broker.AutherizationServiceTests.SitesWcfService.ISitesService>, AMS.Broker.AutherizationServiceTests.SitesWcfService.ISitesService {
        
        public SitesServiceClient() {
        }
        
        public SitesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SitesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMS.Broker.Contracts.DTO.SiteTypeDto GetSiteType(int siteTypeId) {
            return base.Channel.GetSiteType(siteTypeId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto> GetSiteTypeAsync(int siteTypeId) {
            return base.Channel.GetSiteTypeAsync(siteTypeId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteTypeDto[] GetSiteTypes() {
            return base.Channel.GetSiteTypes();
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto[]> GetSiteTypesAsync() {
            return base.Channel.GetSiteTypesAsync();
        }
        
        public AMS.Broker.Contracts.DTO.SiteTypeDto AddSiteType(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToAdd) {
            return base.Channel.AddSiteType(siteTypeToAdd);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto> AddSiteTypeAsync(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToAdd) {
            return base.Channel.AddSiteTypeAsync(siteTypeToAdd);
        }
        
        public AMS.Broker.Contracts.DTO.SiteTypeDto UpdateSiteType(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToUpdate) {
            return base.Channel.UpdateSiteType(siteTypeToUpdate);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteTypeDto> UpdateSiteTypeAsync(AMS.Broker.Contracts.DTO.SiteTypeDto siteTypeToUpdate) {
            return base.Channel.UpdateSiteTypeAsync(siteTypeToUpdate);
        }
        
        public bool DeleteSiteType(int siteTypeId) {
            return base.Channel.DeleteSiteType(siteTypeId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSiteTypeAsync(int siteTypeId) {
            return base.Channel.DeleteSiteTypeAsync(siteTypeId);
        }
        
        public AMS.Broker.Contracts.DTO.BBoxPointDto GetBBoxPoint(int bboxPointId) {
            return base.Channel.GetBBoxPoint(bboxPointId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto> GetBBoxPointAsync(int bboxPointId) {
            return base.Channel.GetBBoxPointAsync(bboxPointId);
        }
        
        public AMS.Broker.Contracts.DTO.BBoxPointDto[] GetBBoxPointsBySite(int siteId) {
            return base.Channel.GetBBoxPointsBySite(siteId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto[]> GetBBoxPointsBySiteAsync(int siteId) {
            return base.Channel.GetBBoxPointsBySiteAsync(siteId);
        }
        
        public AMS.Broker.Contracts.DTO.BBoxPointDto AddBBoxPoint(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToAdd, AMS.Broker.Contracts.DTO.SiteDto site) {
            return base.Channel.AddBBoxPoint(bboxPointToAdd, site);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto> AddBBoxPointAsync(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToAdd, AMS.Broker.Contracts.DTO.SiteDto site) {
            return base.Channel.AddBBoxPointAsync(bboxPointToAdd, site);
        }
        
        public AMS.Broker.Contracts.DTO.BBoxPointDto UpdateBBoxPoint(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToUpdate) {
            return base.Channel.UpdateBBoxPoint(bboxPointToUpdate);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.BBoxPointDto> UpdateBBoxPointAsync(AMS.Broker.Contracts.DTO.BBoxPointDto bboxPointToUpdate) {
            return base.Channel.UpdateBBoxPointAsync(bboxPointToUpdate);
        }
        
        public bool DeleteBBoxPoint(int bboxPointId) {
            return base.Channel.DeleteBBoxPoint(bboxPointId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBBoxPointAsync(int bboxPointId) {
            return base.Channel.DeleteBBoxPointAsync(bboxPointId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto GetSite(int siteId) {
            return base.Channel.GetSite(siteId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> GetSiteAsync(int siteId) {
            return base.Channel.GetSiteAsync(siteId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetSites() {
            return base.Channel.GetSites();
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSitesAsync() {
            return base.Channel.GetSitesAsync();
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetSiteForAccount(int accountId) {
            return base.Channel.GetSiteForAccount(accountId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetSiteForAccountAsync(int accountId) {
            return base.Channel.GetSiteForAccountAsync(accountId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto[] GetChildSites(int parentSiteId) {
            return base.Channel.GetChildSites(parentSiteId);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto[]> GetChildSitesAsync(int parentSiteId) {
            return base.Channel.GetChildSitesAsync(parentSiteId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto AddSite(AMS.Broker.Contracts.DTO.SiteDto siteToAdd, AMS.Broker.Contracts.DTO.SiteTypeDto siteType, AMS.Broker.Contracts.DTO.SiteDto parentSite, AMS.Broker.Contracts.DTO.AddressDto address, AMS.Broker.Contracts.DTO.AccountDto account, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints) {
            return base.Channel.AddSite(siteToAdd, siteType, parentSite, address, account, bboxPoints);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> AddSiteAsync(AMS.Broker.Contracts.DTO.SiteDto siteToAdd, AMS.Broker.Contracts.DTO.SiteTypeDto siteType, AMS.Broker.Contracts.DTO.SiteDto parentSite, AMS.Broker.Contracts.DTO.AddressDto address, AMS.Broker.Contracts.DTO.AccountDto account, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints) {
            return base.Channel.AddSiteAsync(siteToAdd, siteType, parentSite, address, account, bboxPoints);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto UpdateSite(AMS.Broker.Contracts.DTO.SiteDto siteToUpdate) {
            return base.Channel.UpdateSite(siteToUpdate);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> UpdateSiteAsync(AMS.Broker.Contracts.DTO.SiteDto siteToUpdate) {
            return base.Channel.UpdateSiteAsync(siteToUpdate);
        }
        
        public bool DeleteSite(int siteId) {
            return base.Channel.DeleteSite(siteId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSiteAsync(int siteId) {
            return base.Channel.DeleteSiteAsync(siteId);
        }
        
        public AMS.Broker.Contracts.DTO.SiteDto SetSiteBBox(AMS.Broker.Contracts.DTO.SiteDto site, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints) {
            return base.Channel.SetSiteBBox(site, bboxPoints);
        }
        
        public System.Threading.Tasks.Task<AMS.Broker.Contracts.DTO.SiteDto> SetSiteBBoxAsync(AMS.Broker.Contracts.DTO.SiteDto site, AMS.Broker.Contracts.DTO.BBoxPointDto[] bboxPoints) {
            return base.Channel.SetSiteBBoxAsync(site, bboxPoints);
        }
    }
}
