//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets70B160C363355E3D303CBAAA48FD4C402427E46A1A97BDC6401C6FFAEBEEE721))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets70B160C363355E3D303CBAAA48FD4C402427E46A1A97BDC6401C6FFAEBEEE721 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets70B160C363355E3D303CBAAA48FD4C402427E46A1A97BDC6401C6FFAEBEEE721()
        {
            this.EdmEntityContainerName = "Entities";
            this.StoreEntityContainerName = "CentralDBModelStoreContainer";
            this.HashOverMappingClosure = "be6f081dfc9d85c200674a6069ffd33c0c4cc7101b700f6de7cc6f0e8c425371";
            this.HashOverAllExtentViews = "0f6dd20eb5f5e3c05bbf98ffdc62990735e10f2c7cdd31d202d14a39064d64c1";
            this.ViewCount = 357;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            if ((index == 142))
            {
                return GetView142();
            }
            if ((index == 143))
            {
                return GetView143();
            }
            if ((index == 144))
            {
                return GetView144();
            }
            if ((index == 145))
            {
                return GetView145();
            }
            if ((index == 146))
            {
                return GetView146();
            }
            if ((index == 147))
            {
                return GetView147();
            }
            if ((index == 148))
            {
                return GetView148();
            }
            if ((index == 149))
            {
                return GetView149();
            }
            if ((index == 150))
            {
                return GetView150();
            }
            if ((index == 151))
            {
                return GetView151();
            }
            if ((index == 152))
            {
                return GetView152();
            }
            if ((index == 153))
            {
                return GetView153();
            }
            if ((index == 154))
            {
                return GetView154();
            }
            if ((index == 155))
            {
                return GetView155();
            }
            if ((index == 156))
            {
                return GetView156();
            }
            if ((index == 157))
            {
                return GetView157();
            }
            if ((index == 158))
            {
                return GetView158();
            }
            if ((index == 159))
            {
                return GetView159();
            }
            if ((index == 160))
            {
                return GetView160();
            }
            if ((index == 161))
            {
                return GetView161();
            }
            if ((index == 162))
            {
                return GetView162();
            }
            if ((index == 163))
            {
                return GetView163();
            }
            if ((index == 164))
            {
                return GetView164();
            }
            if ((index == 165))
            {
                return GetView165();
            }
            if ((index == 166))
            {
                return GetView166();
            }
            if ((index == 167))
            {
                return GetView167();
            }
            if ((index == 168))
            {
                return GetView168();
            }
            if ((index == 169))
            {
                return GetView169();
            }
            if ((index == 170))
            {
                return GetView170();
            }
            if ((index == 171))
            {
                return GetView171();
            }
            if ((index == 172))
            {
                return GetView172();
            }
            if ((index == 173))
            {
                return GetView173();
            }
            if ((index == 174))
            {
                return GetView174();
            }
            if ((index == 175))
            {
                return GetView175();
            }
            if ((index == 176))
            {
                return GetView176();
            }
            if ((index == 177))
            {
                return GetView177();
            }
            if ((index == 178))
            {
                return GetView178();
            }
            if ((index == 179))
            {
                return GetView179();
            }
            if ((index == 180))
            {
                return GetView180();
            }
            if ((index == 181))
            {
                return GetView181();
            }
            if ((index == 182))
            {
                return GetView182();
            }
            if ((index == 183))
            {
                return GetView183();
            }
            if ((index == 184))
            {
                return GetView184();
            }
            if ((index == 185))
            {
                return GetView185();
            }
            if ((index == 186))
            {
                return GetView186();
            }
            if ((index == 187))
            {
                return GetView187();
            }
            if ((index == 188))
            {
                return GetView188();
            }
            if ((index == 189))
            {
                return GetView189();
            }
            if ((index == 190))
            {
                return GetView190();
            }
            if ((index == 191))
            {
                return GetView191();
            }
            if ((index == 192))
            {
                return GetView192();
            }
            if ((index == 193))
            {
                return GetView193();
            }
            if ((index == 194))
            {
                return GetView194();
            }
            if ((index == 195))
            {
                return GetView195();
            }
            if ((index == 196))
            {
                return GetView196();
            }
            if ((index == 197))
            {
                return GetView197();
            }
            if ((index == 198))
            {
                return GetView198();
            }
            if ((index == 199))
            {
                return GetView199();
            }
            if ((index == 200))
            {
                return GetView200();
            }
            if ((index == 201))
            {
                return GetView201();
            }
            if ((index == 202))
            {
                return GetView202();
            }
            if ((index == 203))
            {
                return GetView203();
            }
            if ((index == 204))
            {
                return GetView204();
            }
            if ((index == 205))
            {
                return GetView205();
            }
            if ((index == 206))
            {
                return GetView206();
            }
            if ((index == 207))
            {
                return GetView207();
            }
            if ((index == 208))
            {
                return GetView208();
            }
            if ((index == 209))
            {
                return GetView209();
            }
            if ((index == 210))
            {
                return GetView210();
            }
            if ((index == 211))
            {
                return GetView211();
            }
            if ((index == 212))
            {
                return GetView212();
            }
            if ((index == 213))
            {
                return GetView213();
            }
            if ((index == 214))
            {
                return GetView214();
            }
            if ((index == 215))
            {
                return GetView215();
            }
            if ((index == 216))
            {
                return GetView216();
            }
            if ((index == 217))
            {
                return GetView217();
            }
            if ((index == 218))
            {
                return GetView218();
            }
            if ((index == 219))
            {
                return GetView219();
            }
            if ((index == 220))
            {
                return GetView220();
            }
            if ((index == 221))
            {
                return GetView221();
            }
            if ((index == 222))
            {
                return GetView222();
            }
            if ((index == 223))
            {
                return GetView223();
            }
            if ((index == 224))
            {
                return GetView224();
            }
            if ((index == 225))
            {
                return GetView225();
            }
            if ((index == 226))
            {
                return GetView226();
            }
            if ((index == 227))
            {
                return GetView227();
            }
            if ((index == 228))
            {
                return GetView228();
            }
            if ((index == 229))
            {
                return GetView229();
            }
            if ((index == 230))
            {
                return GetView230();
            }
            if ((index == 231))
            {
                return GetView231();
            }
            if ((index == 232))
            {
                return GetView232();
            }
            if ((index == 233))
            {
                return GetView233();
            }
            if ((index == 234))
            {
                return GetView234();
            }
            if ((index == 235))
            {
                return GetView235();
            }
            if ((index == 236))
            {
                return GetView236();
            }
            if ((index == 237))
            {
                return GetView237();
            }
            if ((index == 238))
            {
                return GetView238();
            }
            if ((index == 239))
            {
                return GetView239();
            }
            if ((index == 240))
            {
                return GetView240();
            }
            if ((index == 241))
            {
                return GetView241();
            }
            if ((index == 242))
            {
                return GetView242();
            }
            if ((index == 243))
            {
                return GetView243();
            }
            if ((index == 244))
            {
                return GetView244();
            }
            if ((index == 245))
            {
                return GetView245();
            }
            if ((index == 246))
            {
                return GetView246();
            }
            if ((index == 247))
            {
                return GetView247();
            }
            if ((index == 248))
            {
                return GetView248();
            }
            if ((index == 249))
            {
                return GetView249();
            }
            if ((index == 250))
            {
                return GetView250();
            }
            if ((index == 251))
            {
                return GetView251();
            }
            if ((index == 252))
            {
                return GetView252();
            }
            if ((index == 253))
            {
                return GetView253();
            }
            if ((index == 254))
            {
                return GetView254();
            }
            if ((index == 255))
            {
                return GetView255();
            }
            if ((index == 256))
            {
                return GetView256();
            }
            if ((index == 257))
            {
                return GetView257();
            }
            if ((index == 258))
            {
                return GetView258();
            }
            if ((index == 259))
            {
                return GetView259();
            }
            if ((index == 260))
            {
                return GetView260();
            }
            if ((index == 261))
            {
                return GetView261();
            }
            if ((index == 262))
            {
                return GetView262();
            }
            if ((index == 263))
            {
                return GetView263();
            }
            if ((index == 264))
            {
                return GetView264();
            }
            if ((index == 265))
            {
                return GetView265();
            }
            if ((index == 266))
            {
                return GetView266();
            }
            if ((index == 267))
            {
                return GetView267();
            }
            if ((index == 268))
            {
                return GetView268();
            }
            if ((index == 269))
            {
                return GetView269();
            }
            if ((index == 270))
            {
                return GetView270();
            }
            if ((index == 271))
            {
                return GetView271();
            }
            if ((index == 272))
            {
                return GetView272();
            }
            if ((index == 273))
            {
                return GetView273();
            }
            if ((index == 274))
            {
                return GetView274();
            }
            if ((index == 275))
            {
                return GetView275();
            }
            if ((index == 276))
            {
                return GetView276();
            }
            if ((index == 277))
            {
                return GetView277();
            }
            if ((index == 278))
            {
                return GetView278();
            }
            if ((index == 279))
            {
                return GetView279();
            }
            if ((index == 280))
            {
                return GetView280();
            }
            if ((index == 281))
            {
                return GetView281();
            }
            if ((index == 282))
            {
                return GetView282();
            }
            if ((index == 283))
            {
                return GetView283();
            }
            if ((index == 284))
            {
                return GetView284();
            }
            if ((index == 285))
            {
                return GetView285();
            }
            if ((index == 286))
            {
                return GetView286();
            }
            if ((index == 287))
            {
                return GetView287();
            }
            if ((index == 288))
            {
                return GetView288();
            }
            if ((index == 289))
            {
                return GetView289();
            }
            if ((index == 290))
            {
                return GetView290();
            }
            if ((index == 291))
            {
                return GetView291();
            }
            if ((index == 292))
            {
                return GetView292();
            }
            if ((index == 293))
            {
                return GetView293();
            }
            if ((index == 294))
            {
                return GetView294();
            }
            if ((index == 295))
            {
                return GetView295();
            }
            if ((index == 296))
            {
                return GetView296();
            }
            if ((index == 297))
            {
                return GetView297();
            }
            if ((index == 298))
            {
                return GetView298();
            }
            if ((index == 299))
            {
                return GetView299();
            }
            if ((index == 300))
            {
                return GetView300();
            }
            if ((index == 301))
            {
                return GetView301();
            }
            if ((index == 302))
            {
                return GetView302();
            }
            if ((index == 303))
            {
                return GetView303();
            }
            if ((index == 304))
            {
                return GetView304();
            }
            if ((index == 305))
            {
                return GetView305();
            }
            if ((index == 306))
            {
                return GetView306();
            }
            if ((index == 307))
            {
                return GetView307();
            }
            if ((index == 308))
            {
                return GetView308();
            }
            if ((index == 309))
            {
                return GetView309();
            }
            if ((index == 310))
            {
                return GetView310();
            }
            if ((index == 311))
            {
                return GetView311();
            }
            if ((index == 312))
            {
                return GetView312();
            }
            if ((index == 313))
            {
                return GetView313();
            }
            if ((index == 314))
            {
                return GetView314();
            }
            if ((index == 315))
            {
                return GetView315();
            }
            if ((index == 316))
            {
                return GetView316();
            }
            if ((index == 317))
            {
                return GetView317();
            }
            if ((index == 318))
            {
                return GetView318();
            }
            if ((index == 319))
            {
                return GetView319();
            }
            if ((index == 320))
            {
                return GetView320();
            }
            if ((index == 321))
            {
                return GetView321();
            }
            if ((index == 322))
            {
                return GetView322();
            }
            if ((index == 323))
            {
                return GetView323();
            }
            if ((index == 324))
            {
                return GetView324();
            }
            if ((index == 325))
            {
                return GetView325();
            }
            if ((index == 326))
            {
                return GetView326();
            }
            if ((index == 327))
            {
                return GetView327();
            }
            if ((index == 328))
            {
                return GetView328();
            }
            if ((index == 329))
            {
                return GetView329();
            }
            if ((index == 330))
            {
                return GetView330();
            }
            if ((index == 331))
            {
                return GetView331();
            }
            if ((index == 332))
            {
                return GetView332();
            }
            if ((index == 333))
            {
                return GetView333();
            }
            if ((index == 334))
            {
                return GetView334();
            }
            if ((index == 335))
            {
                return GetView335();
            }
            if ((index == 336))
            {
                return GetView336();
            }
            if ((index == 337))
            {
                return GetView337();
            }
            if ((index == 338))
            {
                return GetView338();
            }
            if ((index == 339))
            {
                return GetView339();
            }
            if ((index == 340))
            {
                return GetView340();
            }
            if ((index == 341))
            {
                return GetView341();
            }
            if ((index == 342))
            {
                return GetView342();
            }
            if ((index == 343))
            {
                return GetView343();
            }
            if ((index == 344))
            {
                return GetView344();
            }
            if ((index == 345))
            {
                return GetView345();
            }
            if ((index == 346))
            {
                return GetView346();
            }
            if ((index == 347))
            {
                return GetView347();
            }
            if ((index == 348))
            {
                return GetView348();
            }
            if ((index == 349))
            {
                return GetView349();
            }
            if ((index == 350))
            {
                return GetView350();
            }
            if ((index == 351))
            {
                return GetView351();
            }
            if ((index == 352))
            {
                return GetView352();
            }
            if ((index == 353))
            {
                return GetView353();
            }
            if ((index == 354))
            {
                return GetView354();
            }
            if ((index == 355))
            {
                return GetView355();
            }
            if ((index == 356))
            {
                return GetView356();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Account", "\r\n    SELECT VALUE -- Constructing Account\r\n        [CentralDBModel.Store.Account" +
                    "](T1.Account_AccountId, T1.Account_AccountTypeId, T1.Account_ParentAccountId, T1" +
                    ".Account_DeletionStateCode, T1.Account_ServicePackageId, T1.Account_PrimaryConta" +
                    "ctId, T1.Account_Name, T1.Account_AccountNumber, T1.Account_Description, T1.Acco" +
                    "unt_WebSiteURL, T1.Account_TimeZoneId, T1.Account_CreatedOn, T1.Account_CreatedB" +
                    "y, T1.Account_ModifiedOn, T1.Account_ModifiedBy, T1.Account_ExternalId, T1.Accou" +
                    "nt_Email, T1.Account_AccountBillingId, T1.Account_AccountLogo, T1.Account_Billin" +
                    "gSameAsAccountAddress)\r\n    FROM (\r\n        SELECT \r\n            T.AccountId AS " +
                    "Account_AccountId, \r\n            T.AccountTypeId AS Account_AccountTypeId, \r\n   " +
                    "         T.ParentAccountId AS Account_ParentAccountId, \r\n            T.DeletionS" +
                    "tateCode AS Account_DeletionStateCode, \r\n            T.ServicePackageId AS Accou" +
                    "nt_ServicePackageId, \r\n            T.PrimaryContactId AS Account_PrimaryContactI" +
                    "d, \r\n            T.Name AS Account_Name, \r\n            T.AccountNumber AS Accoun" +
                    "t_AccountNumber, \r\n            T.Description AS Account_Description, \r\n         " +
                    "   T.WebSiteURL AS Account_WebSiteURL, \r\n            T.TimeZoneId AS Account_Tim" +
                    "eZoneId, \r\n            T.CreatedOn AS Account_CreatedOn, \r\n            T.Created" +
                    "By AS Account_CreatedBy, \r\n            T.ModifiedOn AS Account_ModifiedOn, \r\n   " +
                    "         T.ModifiedBy AS Account_ModifiedBy, \r\n            T.ExternalId AS Accou" +
                    "nt_ExternalId, \r\n            T.Email AS Account_Email, \r\n            T.AccountBi" +
                    "llingId AS Account_AccountBillingId, \r\n            T.AccountLogo AS Account_Acco" +
                    "untLogo, \r\n            T.BillingSameAsAccountAddress AS Account_BillingSameAsAcc" +
                    "ountAddress, \r\n            True AS _from0\r\n        FROM Entities.Account AS T\r\n " +
                    "   ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountInvoice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3495);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AccountInvoice\r\n        [CentralDBModel.Store");
            viewString.Append(".AccountInvoice](T1.AccountInvoice_InvoiceId, T1.AccountInvoice_PriorityCode, T1");
            viewString.Append(".AccountInvoice_DeletionStateCode, T1.AccountInvoice_AccountId, T1.AccountInvoic");
            viewString.Append("e_ContactId, T1.AccountInvoice_InvoiceNumber, T1.AccountInvoice_Name, T1.Account");
            viewString.Append("Invoice_Description, T1.AccountInvoice_DiscountAmount, T1.AccountInvoice_Freight");
            viewString.Append("Amount, T1.AccountInvoice_TotalAmount, T1.AccountInvoice_TotalLineItemAmount, T1");
            viewString.Append(".AccountInvoice_TotalLineItemDiscountAmount, T1.AccountInvoice_TotalAmountLessFr");
            viewString.Append("eight, T1.AccountInvoice_TotalDiscountAmount, T1.AccountInvoice_TotalTax, T1.Acc");
            viewString.Append("ountInvoice_CreatedBy, T1.AccountInvoice_CreatedOn, T1.AccountInvoice_ModifiedBy");
            viewString.Append(", T1.AccountInvoice_ModifiedOn, T1.AccountInvoice_StateCode, T1.[AccountInvoice.");
            viewString.Append("BillTo_Name], T1.[AccountInvoice.BillTo_Line1], T1.[AccountInvoice.BillTo_Line2]");
            viewString.Append(", T1.[AccountInvoice.BillTo_Line3], T1.[AccountInvoice.BillTo_City], T1.[Account");
            viewString.Append("Invoice.BillTo_StateOrProvince], T1.[AccountInvoice.BillTo_Country], T1.[Account");
            viewString.Append("Invoice.BillTo_PostalCode], T1.[AccountInvoice.BillTo_Telephone], T1.[AccountInv");
            viewString.Append("oice.BillTo_Fax], T1.AccountInvoice_DiscountPercentage, T1.AccountInvoice_DueDat");
            viewString.Append("e, T1.AccountInvoice_TimeZoneId)\r\n    FROM (\r\n        SELECT \r\n            T.Inv");
            viewString.Append("oiceId AS AccountInvoice_InvoiceId, \r\n            T.PriorityCode AS AccountInvoi");
            viewString.Append("ce_PriorityCode, \r\n            T.DeletionStateCode AS AccountInvoice_DeletionSta");
            viewString.Append("teCode, \r\n            T.AccountId AS AccountInvoice_AccountId, \r\n            T.C");
            viewString.Append("ontactId AS AccountInvoice_ContactId, \r\n            T.InvoiceNumber AS AccountIn");
            viewString.Append("voice_InvoiceNumber, \r\n            T.Name AS AccountInvoice_Name, \r\n            ");
            viewString.Append("T.Description AS AccountInvoice_Description, \r\n            T.DiscountAmount AS A");
            viewString.Append("ccountInvoice_DiscountAmount, \r\n            T.FreightAmount AS AccountInvoice_Fr");
            viewString.Append("eightAmount, \r\n            T.TotalAmount AS AccountInvoice_TotalAmount, \r\n      ");
            viewString.Append("      T.TotalLineItemAmount AS AccountInvoice_TotalLineItemAmount, \r\n           ");
            viewString.Append(" T.TotalLineItemDiscountAmount AS AccountInvoice_TotalLineItemDiscountAmount, \r\n");
            viewString.Append("            T.TotalAmountLessFreight AS AccountInvoice_TotalAmountLessFreight, \r");
            viewString.Append("\n            T.TotalDiscountAmount AS AccountInvoice_TotalDiscountAmount, \r\n    ");
            viewString.Append("        T.TotalTax AS AccountInvoice_TotalTax, \r\n            T.CreatedBy AS Acco");
            viewString.Append("untInvoice_CreatedBy, \r\n            T.CreatedOn AS AccountInvoice_CreatedOn, \r\n ");
            viewString.Append("           T.ModifiedBy AS AccountInvoice_ModifiedBy, \r\n            T.ModifiedOn");
            viewString.Append(" AS AccountInvoice_ModifiedOn, \r\n            T.StateCode AS AccountInvoice_State");
            viewString.Append("Code, \r\n            T.BillTo_Name AS [AccountInvoice.BillTo_Name], \r\n           ");
            viewString.Append(" T.BillTo_Line1 AS [AccountInvoice.BillTo_Line1], \r\n            T.BillTo_Line2 A");
            viewString.Append("S [AccountInvoice.BillTo_Line2], \r\n            T.BillTo_Line3 AS [AccountInvoice");
            viewString.Append(".BillTo_Line3], \r\n            T.BillTo_City AS [AccountInvoice.BillTo_City], \r\n ");
            viewString.Append("           T.BillTo_StateOrProvince AS [AccountInvoice.BillTo_StateOrProvince], ");
            viewString.Append("\r\n            T.BillTo_Country AS [AccountInvoice.BillTo_Country], \r\n           ");
            viewString.Append(" T.BillTo_PostalCode AS [AccountInvoice.BillTo_PostalCode], \r\n            T.Bill");
            viewString.Append("To_Telephone AS [AccountInvoice.BillTo_Telephone], \r\n            T.BillTo_Fax AS");
            viewString.Append(" [AccountInvoice.BillTo_Fax], \r\n            T.DiscountPercentage AS AccountInvoi");
            viewString.Append("ce_DiscountPercentage, \r\n            T.DueDate AS AccountInvoice_DueDate, \r\n    ");
            viewString.Append("        T.TimeZoneId AS AccountInvoice_TimeZoneId, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM Entities.AccountInvoice AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountInvoice", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Address
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2379);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Address\r\n        [CentralDBModel.Store.Addres");
            viewString.Append("s](T1.Address_AddressId, T1.Address_AccountId, T1.Address_PersonId, T1.Address_S");
            viewString.Append("iteId, T1.Address_DeletionStateCode, T1.Address_AddressNumber, T1.Address_Addres");
            viewString.Append("sTypeCode, T1.Address_Name, T1.Address_Line1, T1.Address_Line2, T1.Address_Line3");
            viewString.Append(", T1.Address_City, T1.Address_StateOrProvince, T1.Address_County, T1.Address_Cou");
            viewString.Append("ntry, T1.Address_PostOfficeBox, T1.Address_PostalCode, T1.Address_UTCOffset, T1.");
            viewString.Append("Address_UPSZone, T1.Address_Latitude, T1.Address_Telephone1, T1.Address_Longitud");
            viewString.Append("e, T1.Address_ShippingMethodCode, T1.Address_Telephone2, T1.Address_Telephone3, ");
            viewString.Append("T1.Address_VersionNumber, T1.Address_Fax, T1.Address_CreatedBy, T1.Address_Creat");
            viewString.Append("edOn, T1.Address_ModifiedBy, T1.Address_ModifiedOn)\r\n    FROM (\r\n        SELECT ");
            viewString.Append("\r\n            T.AddressId AS Address_AddressId, \r\n            T.AccountId AS Add");
            viewString.Append("ress_AccountId, \r\n            T.PersonId AS Address_PersonId, \r\n            T.Si");
            viewString.Append("teId AS Address_SiteId, \r\n            T.DeletionStateCode AS Address_DeletionSta");
            viewString.Append("teCode, \r\n            T.AddressNumber AS Address_AddressNumber, \r\n            T.");
            viewString.Append("AddressTypeCode AS Address_AddressTypeCode, \r\n            T.Name AS Address_Name");
            viewString.Append(", \r\n            T.Line1 AS Address_Line1, \r\n            T.Line2 AS Address_Line2");
            viewString.Append(", \r\n            T.Line3 AS Address_Line3, \r\n            T.City AS Address_City, ");
            viewString.Append("\r\n            T.StateOrProvince AS Address_StateOrProvince, \r\n            T.Coun");
            viewString.Append("ty AS Address_County, \r\n            T.Country AS Address_Country, \r\n            ");
            viewString.Append("T.PostOfficeBox AS Address_PostOfficeBox, \r\n            T.PostalCode AS Address_");
            viewString.Append("PostalCode, \r\n            T.UTCOffset AS Address_UTCOffset, \r\n            T.UPSZ");
            viewString.Append("one AS Address_UPSZone, \r\n            T.Latitude AS Address_Latitude, \r\n        ");
            viewString.Append("    T.Telephone1 AS Address_Telephone1, \r\n            T.Longitude AS Address_Lon");
            viewString.Append("gitude, \r\n            T.ShippingMethodCode AS Address_ShippingMethodCode, \r\n    ");
            viewString.Append("        T.Telephone2 AS Address_Telephone2, \r\n            T.Telephone3 AS Addres");
            viewString.Append("s_Telephone3, \r\n            T.VersionNumber AS Address_VersionNumber, \r\n        ");
            viewString.Append("    T.Fax AS Address_Fax, \r\n            T.CreatedBy AS Address_CreatedBy, \r\n    ");
            viewString.Append("        T.CreatedOn AS Address_CreatedOn, \r\n            T.ModifiedBy AS Address_");
            viewString.Append("ModifiedBy, \r\n            T.ModifiedOn AS Address_ModifiedOn, \r\n            True");
            viewString.Append(" AS _from0\r\n        FROM Entities.Address AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Address", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Alert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Alert", "\r\n    SELECT VALUE -- Constructing Alert\r\n        [CentralDBModel.Store.Alert](T1" +
                    ".Alert_AlertId, T1.Alert_Identifier, T1.Alert_Sender, T1.Alert_Sent, T1.Alert_St" +
                    "atusId, T1.Alert_MessageTypeId, T1.Alert_ScopeId, T1.Alert_Source, T1.Alert_Rest" +
                    "riction, T1.Alert_Addresses, T1.Alert_Code, T1.Alert_Note, T1.Alert_References, " +
                    "T1.Alert_Incidents, T1.Alert_DeviceId, T1.Alert_ReceivedDateTime, T1.Alert_Membe" +
                    "rshipUserId, T1.Alert_AlertOwner, T1.Alert_Alertzone, T1.Alert_EventID, T1.Alert" +
                    "_AlertContext, T1.Alert_AlertAckDateTime, T1.Alert_AlertCloseDateTime, T1.Alert_" +
                    "CloseReasonID, T1.Alert_Comments)\r\n    FROM (\r\n        SELECT \r\n            T.Al" +
                    "ertId AS Alert_AlertId, \r\n            T.Identifier AS Alert_Identifier, \r\n      " +
                    "      T.Sender AS Alert_Sender, \r\n            T.Sent AS Alert_Sent, \r\n          " +
                    "  T.StatusId AS Alert_StatusId, \r\n            T.MessageTypeId AS Alert_MessageTy" +
                    "peId, \r\n            T.ScopeId AS Alert_ScopeId, \r\n            T.Source AS Alert_" +
                    "Source, \r\n            T.Restriction AS Alert_Restriction, \r\n            T.Addres" +
                    "ses AS Alert_Addresses, \r\n            T.Code AS Alert_Code, \r\n            T.Note" +
                    " AS Alert_Note, \r\n            T.References AS Alert_References, \r\n            T." +
                    "Incidents AS Alert_Incidents, \r\n            T.DeviceId AS Alert_DeviceId, \r\n    " +
                    "        T.ReceivedDateTime AS Alert_ReceivedDateTime, \r\n            T.Membership" +
                    "UserId AS Alert_MembershipUserId, \r\n            T.AlertOwner AS Alert_AlertOwner" +
                    ", \r\n            T.Alertzone AS Alert_Alertzone, \r\n            T.EventID AS Alert" +
                    "_EventID, \r\n            T.AlertContext AS Alert_AlertContext, \r\n            T.Al" +
                    "ertAckDateTime AS Alert_AlertAckDateTime, \r\n            T.AlertCloseDateTime AS " +
                    "Alert_AlertCloseDateTime, \r\n            T.CloseReasonID AS Alert_CloseReasonID, " +
                    "\r\n            T.Comments AS Alert_Comments, \r\n            True AS _from0\r\n      " +
                    "  FROM Entities.Alert AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlertHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlertHistory", @"
    SELECT VALUE -- Constructing AlertHistory
        [CentralDBModel.Store.AlertHistory](T1.AlertHistory_AlertHistoryId, T1.AlertHistory_AlertId, T1.AlertHistory_UserName, T1.AlertHistory_MessageTypeId, T1.AlertHistory_ModifiedDate)
    FROM (
        SELECT 
            T.AlertHistoryId AS AlertHistory_AlertHistoryId, 
            T.AlertId AS AlertHistory_AlertId, 
            T.UserName AS AlertHistory_UserName, 
            T.MessageTypeId AS AlertHistory_MessageTypeId, 
            T.ModifiedDate AS AlertHistory_ModifiedDate, 
            True AS _from0
        FROM Entities.AlertHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Area
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Area", @"
    SELECT VALUE -- Constructing Area
        [CentralDBModel.Store.Area](T1.Area_AreaId, T1.Area_SiteId, T1.Area_InfoId, T1.Area_Description, T1.Area_Altitude, T1.Area_Celing, T1.Area_Latitude, T1.Area_Longitude)
    FROM (
        SELECT 
            T.AreaId AS Area_AreaId, 
            T.SiteId AS Area_SiteId, 
            T.InfoId AS Area_InfoId, 
            T.Description AS Area_Description, 
            T.Altitude AS Area_Altitude, 
            T.Celing AS Area_Celing, 
            T.Latitude AS Area_Latitude, 
            T.Longitude AS Area_Longitude, 
            True AS _from0
        FROM Entities.Area AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.BBoxPoint
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.BBoxPoint", @"
    SELECT VALUE -- Constructing BBoxPoint
        [CentralDBModel.Store.BBoxPoint](T1.BBoxPoint_BBoxPointId, T1.BBoxPoint_SiteId, T1.BBoxPoint_Lat, T1.BBoxPoint_Long, T1.BBoxPoint_Alt, T1.BBoxPoint_PLat, T1.BBoxPoint_PLong, T1.BBoxPoint_PAlt)
    FROM (
        SELECT 
            T.BBoxPointId AS BBoxPoint_BBoxPointId, 
            T.SiteId AS BBoxPoint_SiteId, 
            T.Lat AS BBoxPoint_Lat, 
            T.Long AS BBoxPoint_Long, 
            T.Alt AS BBoxPoint_Alt, 
            T.PLat AS BBoxPoint_PLat, 
            T.PLong AS BBoxPoint_PLong, 
            T.PAlt AS BBoxPoint_PAlt, 
            True AS _from0
        FROM Entities.BBoxPoint AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Category
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Category", "\r\n    SELECT VALUE -- Constructing Category\r\n        [CentralDBModel.Store.Catego" +
                    "ry](T1.Category_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Catego" +
                    "ry_Name, \r\n            True AS _from0\r\n        FROM Entities.Category AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Certainty
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Certainty", "\r\n    SELECT VALUE -- Constructing Certainty\r\n        [CentralDBModel.Store.Certa" +
                    "inty](T1.Certainty_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Cer" +
                    "tainty_Name, \r\n            True AS _from0\r\n        FROM Entities.Certainty AS T\r" +
                    "\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Contact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Contact", @"
    SELECT VALUE -- Constructing Contact
        [CentralDBModel.Store.Contact](T1.Contact_ContactId, T1.Contact_PersonId, T1.Contact_CreatedOn, T1.Contact_CreatedBy, T1.Contact_ModifiedOn, T1.Contact_ModifiedBy, T1.Contact_TelephoneNumber, T1.Contact_EmailAddress, T1.Contact_MobileNumber, T1.Contact_LyncName, T1.Contact_FaxNumber)
    FROM (
        SELECT 
            T.ContactId AS Contact_ContactId, 
            T.PersonId AS Contact_PersonId, 
            T.CreatedOn AS Contact_CreatedOn, 
            T.CreatedBy AS Contact_CreatedBy, 
            T.ModifiedOn AS Contact_ModifiedOn, 
            T.ModifiedBy AS Contact_ModifiedBy, 
            T.TelephoneNumber AS Contact_TelephoneNumber, 
            T.EmailAddress AS Contact_EmailAddress, 
            T.MobileNumber AS Contact_MobileNumber, 
            T.LyncName AS Contact_LyncName, 
            T.FaxNumber AS Contact_FaxNumber, 
            True AS _from0
        FROM Entities.Contact AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ContactType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ContactType", @"
    SELECT VALUE -- Constructing ContactType
        [CentralDBModel.Store.ContactType](T1.ContactType_ContactTypeId, T1.ContactType_ContactTypeName)
    FROM (
        SELECT 
            T.ContactTypeId AS ContactType_ContactTypeId, 
            T.ContactTypeName AS ContactType_ContactTypeName, 
            True AS _from0
        FROM Entities.ContactType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Device
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Device", @"
    SELECT VALUE -- Constructing Device
        [CentralDBModel.Store.Device](T1.Device_DeviceId, T1.Device_ExternalId, T1.Device_Description, T1.Device_Metadata, T1.Device_Type, T1.Device_Lat, T1.Device_Long, T1.Device_Altitude, T1.Device_LocationDescription, T1.Device_CameraGuid, T1.Device_NvrId, T1.Device_SiteId, T1.Device_ActiveAlert, T1.Device_HasPvAnalytics, T1.Device_HasSzAnalytics, T1.Device_HasAbAnalytics, T1.Device_InterfaceId, T1.Device_IsMovable, T1.Device_Name)
    FROM (
        SELECT 
            T.DeviceId AS Device_DeviceId, 
            T.ExternalId AS Device_ExternalId, 
            T.Description AS Device_Description, 
            T.Metadata AS Device_Metadata, 
            T.Type AS Device_Type, 
            T.Lat AS Device_Lat, 
            T.Long AS Device_Long, 
            T.Altitude AS Device_Altitude, 
            T.LocationDescription AS Device_LocationDescription, 
            T.CameraGuid AS Device_CameraGuid, 
            T.NvrId AS Device_NvrId, 
            T.SiteId AS Device_SiteId, 
            T.ActiveAlert AS Device_ActiveAlert, 
            T.HasPvAnalytics AS Device_HasPvAnalytics, 
            T.HasSzAnalytics AS Device_HasSzAnalytics, 
            T.HasAbAnalytics AS Device_HasAbAnalytics, 
            T.InterfaceId AS Device_InterfaceId, 
            T.IsMovable AS Device_IsMovable, 
            T.Name AS Device_Name, 
            True AS _from0
        FROM Entities.Device AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.NvrCamera
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4927);
            viewString.Append("\r\n    SELECT VALUE -- Constructing NvrCamera\r\n        [CentralDBModel.Store.NvrC");
            viewString.Append("amera](T1.NvrCamera_CameraId, T1.NvrCamera_FPS, T1.NvrCamera_AnalyticAlgorithmTy");
            viewString.Append("peId, T1.NvrCamera_Version, T1.NvrCamera_MaxBlobSize, T1.NvrCamera_MinBlobSize, ");
            viewString.Append("T1.NvrCamera_AlarmDelay, T1.NvrCamera_UpdateRate, T1.NvrCamera_Width, T1.NvrCame");
            viewString.Append("ra_Height, T1.NvrCamera_ZoneRows, T1.NvrCamera_ZoneColumns, T1.NvrCamera_ZoneDat");
            viewString.Append("a, T1.NvrCamera_AnalyticsEventTemplateId, T1.NvrCamera_IsPtz, T1.NvrCamera_Camer");
            viewString.Append("aIp, T1.NvrCamera_LineStart, T1.NvrCamera_LineEnd, T1.NvrCamera_DirectionFlag, T");
            viewString.Append("1.NvrCamera_CameraUrl, T1.NvrCamera_CameraPort, T1.NvrCamera_CamUser, T1.NvrCame");
            viewString.Append("ra_CamPassword, T1.NvrCamera_MaxBlobWidth, T1.NvrCamera_MaxBlobHeight, T1.NvrCam");
            viewString.Append("era_MinBlobWidth, T1.NvrCamera_MinBlobHeight, T1.NvrCamera_CameraType, T1.NvrCam");
            viewString.Append("era_AnalyticsServerIp, T1.NvrCamera_Lane1, T1.NvrCamera_Lane2, T1.NvrCamera_Lane");
            viewString.Append("3, T1.NvrCamera_NoOfLens, T1.NvrCamera_ChanelNo, T1.NvrCamera_IsEdgeAnalytics, T");
            viewString.Append("1.NvrCamera_Mediaurl, T1.NvrCamera_MediaType, T1.NvrCamera_WOWZAURL, T1.NvrCamer");
            viewString.Append("a_RTSPCameraUrl, T1.NvrCamera_ObjectTrackingTime, T1.NvrCamera_PeopleCrowdThreas");
            viewString.Append("hold)\r\n    FROM (\r\n        SELECT \r\n            T.DeviceId AS NvrCamera_CameraId");
            viewString.Append(", \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).FPS AS NvrCamera_FPS, \r\n ");
            viewString.Append("           TREAT(T AS [CentralDBModel.NvrCamera]).AnalyticAlgorithmTypeId AS Nvr");
            viewString.Append("Camera_AnalyticAlgorithmTypeId, \r\n            TREAT(T AS [CentralDBModel.NvrCame");
            viewString.Append("ra]).Version AS NvrCamera_Version, \r\n            TREAT(T AS [CentralDBModel.NvrC");
            viewString.Append("amera]).MaxBlobSize AS NvrCamera_MaxBlobSize, \r\n            TREAT(T AS [CentralD");
            viewString.Append("BModel.NvrCamera]).MinBlobSize AS NvrCamera_MinBlobSize, \r\n            TREAT(T A");
            viewString.Append("S [CentralDBModel.NvrCamera]).AlarmDelay AS NvrCamera_AlarmDelay, \r\n            ");
            viewString.Append("TREAT(T AS [CentralDBModel.NvrCamera]).UpdateRate AS NvrCamera_UpdateRate, \r\n   ");
            viewString.Append("         TREAT(T AS [CentralDBModel.NvrCamera]).Width AS NvrCamera_Width, \r\n    ");
            viewString.Append("        TREAT(T AS [CentralDBModel.NvrCamera]).Height AS NvrCamera_Height, \r\n   ");
            viewString.Append("         TREAT(T AS [CentralDBModel.NvrCamera]).ZoneRows AS NvrCamera_ZoneRows, ");
            viewString.Append("\r\n            TREAT(T AS [CentralDBModel.NvrCamera]).ZoneColumns AS NvrCamera_Zo");
            viewString.Append("neColumns, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).ZoneData AS NvrC");
            viewString.Append("amera_ZoneData, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).AnalyticsEv");
            viewString.Append("entTemplateId AS NvrCamera_AnalyticsEventTemplateId, \r\n            TREAT(T AS [C");
            viewString.Append("entralDBModel.NvrCamera]).IsPtz AS NvrCamera_IsPtz, \r\n            TREAT(T AS [Ce");
            viewString.Append("ntralDBModel.NvrCamera]).CameraIp AS NvrCamera_CameraIp, \r\n            TREAT(T A");
            viewString.Append("S [CentralDBModel.NvrCamera]).LineStart AS NvrCamera_LineStart, \r\n            TR");
            viewString.Append("EAT(T AS [CentralDBModel.NvrCamera]).LineEnd AS NvrCamera_LineEnd, \r\n           ");
            viewString.Append(" TREAT(T AS [CentralDBModel.NvrCamera]).DirectionFlag AS NvrCamera_DirectionFlag");
            viewString.Append(", \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).CameraUrl AS NvrCamera_Ca");
            viewString.Append("meraUrl, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).CameraPort AS NvrC");
            viewString.Append("amera_CameraPort, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).CamUser A");
            viewString.Append("S NvrCamera_CamUser, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).CamPas");
            viewString.Append("sword AS NvrCamera_CamPassword, \r\n            TREAT(T AS [CentralDBModel.NvrCame");
            viewString.Append("ra]).MaxBlobWidth AS NvrCamera_MaxBlobWidth, \r\n            TREAT(T AS [CentralDB");
            viewString.Append("Model.NvrCamera]).MaxBlobHeight AS NvrCamera_MaxBlobHeight, \r\n            TREAT(");
            viewString.Append("T AS [CentralDBModel.NvrCamera]).MinBlobWidth AS NvrCamera_MinBlobWidth, \r\n     ");
            viewString.Append("       TREAT(T AS [CentralDBModel.NvrCamera]).MinBlobHeight AS NvrCamera_MinBlob");
            viewString.Append("Height, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).CameraType AS NvrCa");
            viewString.Append("mera_CameraType, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).AnalyticsS");
            viewString.Append("erverIp AS NvrCamera_AnalyticsServerIp, \r\n            TREAT(T AS [CentralDBModel");
            viewString.Append(".NvrCamera]).Lane1 AS NvrCamera_Lane1, \r\n            TREAT(T AS [CentralDBModel.");
            viewString.Append("NvrCamera]).Lane2 AS NvrCamera_Lane2, \r\n            TREAT(T AS [CentralDBModel.N");
            viewString.Append("vrCamera]).Lane3 AS NvrCamera_Lane3, \r\n            TREAT(T AS [CentralDBModel.Nv");
            viewString.Append("rCamera]).NoOfLens AS NvrCamera_NoOfLens, \r\n            TREAT(T AS [CentralDBMod");
            viewString.Append("el.NvrCamera]).ChanelNo AS NvrCamera_ChanelNo, \r\n            TREAT(T AS [Central");
            viewString.Append("DBModel.NvrCamera]).IsEdgeAnalytics AS NvrCamera_IsEdgeAnalytics, \r\n            ");
            viewString.Append("TREAT(T AS [CentralDBModel.NvrCamera]).Mediaurl AS NvrCamera_Mediaurl, \r\n       ");
            viewString.Append("     TREAT(T AS [CentralDBModel.NvrCamera]).MediaType AS NvrCamera_MediaType, \r\n");
            viewString.Append("            TREAT(T AS [CentralDBModel.NvrCamera]).WOWZAURL AS NvrCamera_WOWZAUR");
            viewString.Append("L, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).RTSPCameraUrl AS NvrCame");
            viewString.Append("ra_RTSPCameraUrl, \r\n            TREAT(T AS [CentralDBModel.NvrCamera]).ObjectTra");
            viewString.Append("ckingTime AS NvrCamera_ObjectTrackingTime, \r\n            TREAT(T AS [CentralDBMo");
            viewString.Append("del.NvrCamera]).PeopleCrowdThreashold AS NvrCamera_PeopleCrowdThreashold, \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM Entities.Device AS T\r\n        WHERE T IS OF");
            viewString.Append(" (ONLY [CentralDBModel.NvrCamera])\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.NvrCamera", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DevicesInZone
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DevicesInZone", @"
    SELECT VALUE -- Constructing DevicesInZone
        [CentralDBModel.Store.DevicesInZone](T1.DevicesInZone_Id, T1.DevicesInZone_ZoneId, T1.DevicesInZone_DeviceId)
    FROM (
        SELECT 
            T.Id AS DevicesInZone_Id, 
            T.ZoneId AS DevicesInZone_ZoneId, 
            T.DeviceId AS DevicesInZone_DeviceId, 
            True AS _from0
        FROM Entities.DevicesInZone AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DeviceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DeviceType", @"
    SELECT VALUE -- Constructing DeviceType
        [CentralDBModel.Store.DeviceType](T1.DeviceType_Description)
    FROM (
        SELECT 
            T.Description AS DeviceType_Description, 
            True AS _from0
        FROM Entities.DeviceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Event
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Event", @"
    SELECT VALUE -- Constructing Event
        [CentralDBModel.Store.Event](T1.Event_EventId, T1.Event_DeviceId, T1.Event_PanelAccountId, T1.Event_EventCode, T1.Event_TimeSent, T1.Event_ExternalMessage, T1.Event_AreaId, T1.Event_AlertId, T1.Event_FrameTypeCode, T1.Event_FrameId, T1.Event_Qualifier, T1.Event_ZoneCode, T1.Event_LineCode, T1.Event_DriverName, T1.Event_DriverPortNumber, T1.Event_EventDevID, T1.Event_ZoneSubsystem)
    FROM (
        SELECT 
            T.EventId AS Event_EventId, 
            T.DeviceId AS Event_DeviceId, 
            T.PanelAccountId AS Event_PanelAccountId, 
            T.EventCode AS Event_EventCode, 
            T.TimeSent AS Event_TimeSent, 
            T.ExternalMessage AS Event_ExternalMessage, 
            T.AreaId AS Event_AreaId, 
            T.AlertId AS Event_AlertId, 
            T.FrameTypeCode AS Event_FrameTypeCode, 
            T.FrameId AS Event_FrameId, 
            T.Qualifier AS Event_Qualifier, 
            T.ZoneCode AS Event_ZoneCode, 
            T.LineCode AS Event_LineCode, 
            T.DriverName AS Event_DriverName, 
            T.DriverPortNumber AS Event_DriverPortNumber, 
            T.EventDevID AS Event_EventDevID, 
            T.ZoneSubsystem AS Event_ZoneSubsystem, 
            True AS _from0
        FROM Entities.Event AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Gender
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Gender", @"
    SELECT VALUE -- Constructing Gender
        [CentralDBModel.Store.Gender](T1.Gender_GenderId, T1.Gender_GenderName)
    FROM (
        SELECT 
            T.GenderId AS Gender_GenderId, 
            T.GenderName AS Gender_GenderName, 
            True AS _from0
        FROM Entities.Gender AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.GeoBox
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.GeoBox", @"
    SELECT VALUE -- Constructing GeoBox
        [CentralDBModel.Store.GeoBox](T1.GeoBox_objectId, T1.GeoBox_objectTypeId, T1.GeoBox_Lat, T1.GeoBox_Long, T1.GeoBox_Alt)
    FROM (
        SELECT 
            T.objectId AS GeoBox_objectId, 
            T.objectTypeId AS GeoBox_objectTypeId, 
            T.Lat AS GeoBox_Lat, 
            T.Long AS GeoBox_Long, 
            T.Alt AS GeoBox_Alt, 
            True AS _from0
        FROM Entities.GeoBox AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.IncidentReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.IncidentReport", @"
    SELECT VALUE -- Constructing IncidentReport
        [CentralDBModel.Store.IncidentReport](T1.IncidentReport_IncidentReportId, T1.IncidentReport_CreateDate, T1.IncidentReport_Owner, T1.IncidentReport_Title, T1.IncidentReport_Comments)
    FROM (
        SELECT 
            T.IncidentReportId AS IncidentReport_IncidentReportId, 
            T.CreateDate AS IncidentReport_CreateDate, 
            T.Owner AS IncidentReport_Owner, 
            T.Title AS IncidentReport_Title, 
            T.Comments AS IncidentReport_Comments, 
            True AS _from0
        FROM Entities.IncidentReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.IncidentReportAlert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.IncidentReportAlert", @"
    SELECT VALUE -- Constructing IncidentReportAlert
        [CentralDBModel.Store.IncidentReportAlert](T1.IncidentReportAlert_IncidentReportAlertsId, T1.IncidentReportAlert_IncidentReportId, T1.IncidentReportAlert_AlertId, T1.IncidentReportAlert_Sequence, T1.IncidentReportAlert_IncidentReportEvidence, T1.IncidentReportAlert_AttachedDateTime)
    FROM (
        SELECT 
            T.IncidentReportAlertsId AS IncidentReportAlert_IncidentReportAlertsId, 
            T.IncidentReportId AS IncidentReportAlert_IncidentReportId, 
            T.AlertId AS IncidentReportAlert_AlertId, 
            T.Sequence AS IncidentReportAlert_Sequence, 
            T.IncidentReportEvidence AS IncidentReportAlert_IncidentReportEvidence, 
            T.AttachedDateTime AS IncidentReportAlert_AttachedDateTime, 
            True AS _from0
        FROM Entities.IncidentReportAlert AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.IncidentReportCamera
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.IncidentReportCamera", @"
    SELECT VALUE -- Constructing IncidentReportCamera
        [CentralDBModel.Store.IncidentReportCamera](T1.IncidentReportCamera_IncidentReportCamerasId, T1.IncidentReportCamera_IncidentReportId, T1.IncidentReportCamera_CameraId, T1.IncidentReportCamera_Sequence, T1.IncidentReportCamera_PlyDateTime, T1.IncidentReportCamera_AttachedDatime)
    FROM (
        SELECT 
            T.IncidentReportCamerasId AS IncidentReportCamera_IncidentReportCamerasId, 
            T.IncidentReportId AS IncidentReportCamera_IncidentReportId, 
            T.CameraId AS IncidentReportCamera_CameraId, 
            T.Sequence AS IncidentReportCamera_Sequence, 
            T.PlyDateTime AS IncidentReportCamera_PlyDateTime, 
            T.AttachedDatime AS IncidentReportCamera_AttachedDatime, 
            True AS _from0
        FROM Entities.IncidentReportCamera AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.IncidentReportResource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.IncidentReportResource", @"
    SELECT VALUE -- Constructing IncidentReportResource
        [CentralDBModel.Store.IncidentReportResource](T1.IncidentReportResource_IncidentReportResourceId, T1.IncidentReportResource_IncidentReportId, T1.IncidentReportResource_ResourceId, T1.IncidentReportResource_Appended)
    FROM (
        SELECT 
            T.IncidentReportResourceId AS IncidentReportResource_IncidentReportResourceId, 
            T.IncidentReportId AS IncidentReportResource_IncidentReportId, 
            T.ResourceId AS IncidentReportResource_ResourceId, 
            T.Appended AS IncidentReportResource_Appended, 
            True AS _from0
        FROM Entities.IncidentReportResource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.IncidentReportStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.IncidentReportStatus", @"
    SELECT VALUE -- Constructing IncidentReportStatus
        [CentralDBModel.Store.IncidentReportStatus](T1.IncidentReportStatus_IncidentReportStatusId, T1.IncidentReportStatus_IncidentReportId, T1.IncidentReportStatus_ChangeDate, T1.IncidentReportStatus_Status, T1.IncidentReportStatus_Notes, T1.IncidentReportStatus_UpdatedBy, T1.IncidentReportStatus_AuthToken)
    FROM (
        SELECT 
            T.IncidentReportStatusId AS IncidentReportStatus_IncidentReportStatusId, 
            T.IncidentReportId AS IncidentReportStatus_IncidentReportId, 
            T.ChangeDate AS IncidentReportStatus_ChangeDate, 
            T.Status AS IncidentReportStatus_Status, 
            T.Notes AS IncidentReportStatus_Notes, 
            T.UpdatedBy AS IncidentReportStatus_UpdatedBy, 
            T.AuthToken AS IncidentReportStatus_AuthToken, 
            True AS _from0
        FROM Entities.IncidentReportStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Info
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Info", @"
    SELECT VALUE -- Constructing Info
        [CentralDBModel.Store.Info](T1.Info_InfoId, T1.Info_AlertId, T1.Info_UrgencyId, T1.Info_Event, T1.Info_SeverityId, T1.Info_CertaintyId, T1.Info_Language, T1.Info_OnSet, T1.Info_Expires, T1.Info_Effective, T1.Info_Audience, T1.Info_SenderName, T1.Info_Headline, T1.Info_Description, T1.Info_Instruction, T1.Info_Web, T1.Info_Contact, T1.Info_EventCode, T1.Info_CloseAllContext)
    FROM (
        SELECT 
            T.InfoId AS Info_InfoId, 
            T.AlertId AS Info_AlertId, 
            T.UrgencyId AS Info_UrgencyId, 
            T.Event AS Info_Event, 
            T.SeverityId AS Info_SeverityId, 
            T.CertaintyId AS Info_CertaintyId, 
            T.Language AS Info_Language, 
            T.OnSet AS Info_OnSet, 
            T.Expires AS Info_Expires, 
            T.Effective AS Info_Effective, 
            T.Audience AS Info_Audience, 
            T.SenderName AS Info_SenderName, 
            T.Headline AS Info_Headline, 
            T.Description AS Info_Description, 
            T.Instruction AS Info_Instruction, 
            T.Web AS Info_Web, 
            T.Contact AS Info_Contact, 
            T.EventCode AS Info_EventCode, 
            T.CloseAllContext AS Info_CloseAllContext, 
            True AS _from0
        FROM Entities.Info AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.InfoesCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.InfoesCategory", @"
    SELECT VALUE -- Constructing InfoesCategory
        [CentralDBModel.Store.InfoesCategory](T1.InfoesCategory_Id, T1.InfoesCategory_InfoId, T1.InfoesCategory_CategoryId)
    FROM (
        SELECT 
            T.Id AS InfoesCategory_Id, 
            T.InfoId AS InfoesCategory_InfoId, 
            T.CategoryId AS InfoesCategory_CategoryId, 
            True AS _from0
        FROM Entities.InfoesCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.InfoesResponseType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.InfoesResponseType", @"
    SELECT VALUE -- Constructing InfoesResponseType
        [CentralDBModel.Store.InfoesResponseType](T1.InfoesResponseType_InfoId, T1.InfoesResponseType_ResponseType, T1.InfoesResponseType_Id)
    FROM (
        SELECT 
            T.InfoId AS InfoesResponseType_InfoId, 
            T.ResponseType AS InfoesResponseType_ResponseType, 
            T.Id AS InfoesResponseType_Id, 
            True AS _from0
        FROM Entities.InfoesResponseType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Interface
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Interface", @"
    SELECT VALUE -- Constructing Interface
        [CentralDBModel.Store.Interface](T3.Interface_InterfaceId, T3.Interface_AccountId, T3.Interface_InterfaceTypeId, T3.Interface_Name, T3.Interface_Description, T3.Interface_SiteId)
    FROM (
        SELECT T1.Interface_InterfaceId, T2.Interface_AccountId, T2.Interface_InterfaceTypeId, T2.Interface_Name, T2.Interface_Description, T1.Interface_SiteId, T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.Interface).InterfaceId AS Interface_InterfaceId, 
                Key(T.Site).SiteId AS Interface_SiteId, 
                True AS _from1
            FROM Entities.FK_Interface_Site AS T) AS T1
            INNER JOIN (
            SELECT 
                T.InterfaceId AS Interface_InterfaceId, 
                T.AccountId AS Interface_AccountId, 
                T.InterfaceTypeId AS Interface_InterfaceTypeId, 
                T.Name AS Interface_Name, 
                T.Description AS Interface_Description, 
                True AS _from0
            FROM Entities.Interface AS T) AS T2
            ON T1.Interface_InterfaceId = T2.Interface_InterfaceId
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlarmPanel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlarmPanel", @"
    SELECT VALUE -- Constructing AlarmPanel
        [CentralDBModel.Store.AlarmPanel](T1.AlarmPanel_AlarmPanelId, T1.AlarmPanel_EventTypeTemplateId, T1.AlarmPanel_InterfaceDeviceIP, T1.AlarmPanel_InterfaceDevicePort, T1.AlarmPanel_AlarmPanelTypeId)
    FROM (
        SELECT 
            T.InterfaceId AS AlarmPanel_AlarmPanelId, 
            TREAT(T AS [CentralDBModel.AlarmPanel]).EventTypeTemplateId AS AlarmPanel_EventTypeTemplateId, 
            TREAT(T AS [CentralDBModel.AlarmPanel]).InterfaceDeviceIP AS AlarmPanel_InterfaceDeviceIP, 
            TREAT(T AS [CentralDBModel.AlarmPanel]).InterfaceDevicePort AS AlarmPanel_InterfaceDevicePort, 
            TREAT(T AS [CentralDBModel.AlarmPanel]).AlarmPanelTypeId AS AlarmPanel_AlarmPanelTypeId, 
            True AS _from0
        FROM Entities.Interface AS T
        WHERE T IS OF (ONLY [CentralDBModel.AlarmPanel])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.InterfaceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.InterfaceType", @"
    SELECT VALUE -- Constructing InterfaceType
        [CentralDBModel.Store.InterfaceType](T1.InterfaceType_InterfaceTypeId, T1.InterfaceType_Name)
    FROM (
        SELECT 
            T.InterfaceTypeId AS InterfaceType_InterfaceTypeId, 
            T.Name AS InterfaceType_Name, 
            True AS _from0
        FROM Entities.InterfaceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.MessageType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.MessageType", @"
    SELECT VALUE -- Constructing MessageType
        [CentralDBModel.Store.MessageType](T1.MessageType_Name)
    FROM (
        SELECT 
            T.Name AS MessageType_Name, 
            True AS _from0
        FROM Entities.MessageType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Parameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Parameter", @"
    SELECT VALUE -- Constructing Parameter
        [CentralDBModel.Store.Parameter](T1.Parameter_ParameterId, T1.Parameter_Name, T1.Parameter_Value, T1.Parameter_InfoId)
    FROM (
        SELECT 
            T.ParameterId AS Parameter_ParameterId, 
            T.Name AS Parameter_Name, 
            T.[Value] AS Parameter_Value, 
            T.InfoId AS Parameter_InfoId, 
            True AS _from0
        FROM Entities.Parameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Person
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Person", "\r\n    SELECT VALUE -- Constructing Person\r\n        [CentralDBModel.Store.Person](" +
                    "T1.Person_PersonId, T1.Person_Title, T1.Person_FirstName, T1.Person_NickName, T1" +
                    ".Person_MiddleName, T1.Person_LastName, T1.Person_Suffix, T1.Person_FullName, T1" +
                    ".Person_BirthDate, T1.Person_AgeRange, T1.Person_Ethnicity, T1.Person_Descriptio" +
                    "n, T1.Person_GenderCode, T1.Person_EducationCode, T1.Person_ExternalIdentifier, " +
                    "T1.Person_Portrait, T1.Person_CreatedOn, T1.Person_CreatedBy, T1.Person_Modified" +
                    "On, T1.Person_ModifiedBy, T1.Person_AccountId, T1.Person_JobTitle, T1.Person_Pas" +
                    "sword, T1.Person_PrimaryAccountAdministratorPassword)\r\n    FROM (\r\n        SELEC" +
                    "T \r\n            T.PersonId AS Person_PersonId, \r\n            T.Title AS Person_T" +
                    "itle, \r\n            T.FirstName AS Person_FirstName, \r\n            T.NickName AS" +
                    " Person_NickName, \r\n            T.MiddleName AS Person_MiddleName, \r\n           " +
                    " T.LastName AS Person_LastName, \r\n            T.Suffix AS Person_Suffix, \r\n     " +
                    "       T.FullName AS Person_FullName, \r\n            T.BirthDate AS Person_BirthD" +
                    "ate, \r\n            T.AgeRange AS Person_AgeRange, \r\n            T.Ethnicity AS P" +
                    "erson_Ethnicity, \r\n            T.Description AS Person_Description, \r\n          " +
                    "  T.GenderCode AS Person_GenderCode, \r\n            T.EducationCode AS Person_Edu" +
                    "cationCode, \r\n            T.ExternalIdentifier AS Person_ExternalIdentifier, \r\n " +
                    "           T.Portrait AS Person_Portrait, \r\n            T.CreatedOn AS Person_Cr" +
                    "eatedOn, \r\n            T.CreatedBy AS Person_CreatedBy, \r\n            T.Modified" +
                    "On AS Person_ModifiedOn, \r\n            T.ModifiedBy AS Person_ModifiedBy, \r\n    " +
                    "        T.AccountId AS Person_AccountId, \r\n            T.JobTitle AS Person_JobT" +
                    "itle, \r\n            T.Password AS Person_Password, \r\n            T.PrimaryAccoun" +
                    "tAdministratorPassword AS Person_PrimaryAccountAdministratorPassword, \r\n        " +
                    "    True AS _from0\r\n        FROM Entities.Person AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Resource", @"
    SELECT VALUE -- Constructing Resource
        [CentralDBModel.Store.Resource](T1.Resource_ResourceId, T1.Resource_Description, T1.Resource_MimeType, T1.Resource_Size, T1.Resource_Uri, T1.Resource_DerefUri, T1.Resource_Digest, T1.Resource_InfoId)
    FROM (
        SELECT 
            T.ResourceId AS Resource_ResourceId, 
            T.Description AS Resource_Description, 
            T.MimeType AS Resource_MimeType, 
            T.Size AS Resource_Size, 
            T.Uri AS Resource_Uri, 
            T.DerefUri AS Resource_DerefUri, 
            T.Digest AS Resource_Digest, 
            T.InfoId AS Resource_InfoId, 
            True AS _from0
        FROM Entities.Resource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ResourcesData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ResourcesData", @"
    SELECT VALUE -- Constructing ResourcesData
        [CentralDBModel.Store.ResourcesData](T1.ResourcesData_Id, T1.ResourcesData_Data, T1.ResourcesData_EvidenceType, T1.ResourcesData_FileName)
    FROM (
        SELECT 
            T.Id AS ResourcesData_Id, 
            T.Data AS ResourcesData_Data, 
            T.EvidenceType AS ResourcesData_EvidenceType, 
            T.FileName AS ResourcesData_FileName, 
            True AS _from0
        FROM Entities.ResourcesData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ResponseType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ResponseType", @"
    SELECT VALUE -- Constructing ResponseType
        [CentralDBModel.Store.ResponseType](T1.ResponseType_Name)
    FROM (
        SELECT 
            T.Name AS ResponseType_Name, 
            True AS _from0
        FROM Entities.ResponseType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Scope
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Scope", "\r\n    SELECT VALUE -- Constructing Scope\r\n        [CentralDBModel.Store.Scope](T1" +
                    ".Scope_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Scope_Name, \r\n " +
                    "           True AS _from0\r\n        FROM Entities.Scope AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ServicePackage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ServicePackage", @"
    SELECT VALUE -- Constructing ServicePackage
        [CentralDBModel.Store.ServicePackage](T1.ServicePackage_ServicePackageId, T1.ServicePackage_Name, T1.ServicePackage_PackagePrice)
    FROM (
        SELECT 
            T.ServicePackageId AS ServicePackage_ServicePackageId, 
            T.Name AS ServicePackage_Name, 
            T.PackagePrice AS ServicePackage_PackagePrice, 
            True AS _from0
        FROM Entities.ServicePackage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Severity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Severity", "\r\n    SELECT VALUE -- Constructing Severity\r\n        [CentralDBModel.Store.Severi" +
                    "ty](T1.Severity_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Severi" +
                    "ty_Name, \r\n            True AS _from0\r\n        FROM Entities.Severity AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Site
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Site", @"
    SELECT VALUE -- Constructing Site
        [CentralDBModel.Store.Site](T1.Site_SiteId, T1.Site_ParentId, T1.Site_AccountId, T1.Site_Name, T1.Site_Description, T1.Site_Lat, T1.Site_Long, T1.Site_Alt, T1.Site_Map, T1.Site_Pin, T1.Site_MapUrl, T1.Site_PinUrl, T1.Site_siteTypeId, T1.Site_Icon, T1.Site_AddressId, T1.Site_ExternalIdentifier, T1.Site_BBox, T1.Site_PLat, T1.Site_PLong, T1.Site_PAlt, T1.Site_ZoomLevel, T1.Site_IsBingMap)
    FROM (
        SELECT 
            T.SiteId AS Site_SiteId, 
            T.ParentId AS Site_ParentId, 
            T.AccountId AS Site_AccountId, 
            T.Name AS Site_Name, 
            T.Description AS Site_Description, 
            T.Lat AS Site_Lat, 
            T.Long AS Site_Long, 
            T.Alt AS Site_Alt, 
            T.Map AS Site_Map, 
            T.Pin AS Site_Pin, 
            T.MapUrl AS Site_MapUrl, 
            T.PinUrl AS Site_PinUrl, 
            T.siteTypeId AS Site_siteTypeId, 
            T.Icon AS Site_Icon, 
            T.AddressId AS Site_AddressId, 
            T.ExternalIdentifier AS Site_ExternalIdentifier, 
            T.BBox AS Site_BBox, 
            T.PLat AS Site_PLat, 
            T.PLong AS Site_PLong, 
            T.PAlt AS Site_PAlt, 
            T.ZoomLevel AS Site_ZoomLevel, 
            T.IsBingMap AS Site_IsBingMap, 
            True AS _from0
        FROM Entities.Site AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.SiteType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.SiteType", @"
    SELECT VALUE -- Constructing SiteType
        [CentralDBModel.Store.SiteType](T1.SiteType_siteTypeId, T1.SiteType_siteTypeName, T1.SiteType_Description, T1.SiteType_Icon, T1.SiteType_HierarchyLevel)
    FROM (
        SELECT 
            T.siteTypeId AS SiteType_siteTypeId, 
            T.siteTypeName AS SiteType_siteTypeName, 
            T.Description AS SiteType_Description, 
            T.Icon AS SiteType_Icon, 
            T.HierarchyLevel AS SiteType_HierarchyLevel, 
            True AS _from0
        FROM Entities.SiteType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Status", "\r\n    SELECT VALUE -- Constructing Status\r\n        [CentralDBModel.Store.Status](" +
                    "T1.Status_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Status_Name," +
                    " \r\n            True AS _from0\r\n        FROM Entities.Status AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Urgency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Urgency", "\r\n    SELECT VALUE -- Constructing Urgency\r\n        [CentralDBModel.Store.Urgency" +
                    "](T1.Urgency_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Urgency_N" +
                    "ame, \r\n            True AS _from0\r\n        FROM Entities.Urgency AS T\r\n    ) AS " +
                    "T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.User", @"
    SELECT VALUE -- Constructing User
        [CentralDBModel.Store.User](T1.User_UserSid, T1.User_UserTypeId, T1.User_PersonId, T1.User_StatusCode, T1.User_UserId, T1.User_MembershipUserId)
    FROM (
        SELECT 
            T.UserSid AS User_UserSid, 
            T.UserTypeId AS User_UserTypeId, 
            T.PersonId AS User_PersonId, 
            T.StatusCode AS User_StatusCode, 
            T.UserId AS User_UserId, 
            T.MembershipUserId AS User_MembershipUserId, 
            True AS _from0
        FROM Entities.User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.UserType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.UserType", @"
    SELECT VALUE -- Constructing UserType
        [CentralDBModel.Store.UserType](T1.UserType_UserTypeId, T1.UserType_UserTypeName)
    FROM (
        SELECT 
            T.UserTypeId AS UserType_UserTypeId, 
            T.UserTypeName AS UserType_UserTypeName, 
            True AS _from0
        FROM Entities.UserType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Zone
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Zone", @"
    SELECT VALUE -- Constructing Zone
        [CentralDBModel.Store.Zone](T1.Zone_ZoneId, T1.Zone_Name, T1.Zone_Description, T1.Zone_Metadata)
    FROM (
        SELECT 
            T.ZoneId AS Zone_ZoneId, 
            T.Name AS Zone_Name, 
            T.Description AS Zone_Description, 
            T.Metadata AS Zone_Metadata, 
            True AS _from0
        FROM Entities.Zone AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ZoneGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ZoneGroup", @"
    SELECT VALUE -- Constructing ZoneGroup
        [CentralDBModel.Store.ZoneGroup](T1.ZoneGroup_ZoneGroupId, T1.ZoneGroup_ParenZoneId, T1.ZoneGroup_ZoneId)
    FROM (
        SELECT 
            T.ZoneGroupId AS ZoneGroup_ZoneGroupId, 
            T.ParenZoneId AS ZoneGroup_ParenZoneId, 
            T.ZoneId AS ZoneGroup_ZoneId, 
            True AS _from0
        FROM Entities.ZoneGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ZoneLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ZoneLocation", @"
    SELECT VALUE -- Constructing ZoneLocation
        [CentralDBModel.Store.ZoneLocation](T1.ZoneLocation_LocationId, T1.ZoneLocation_ZoneId, T1.ZoneLocation_Lat, T1.ZoneLocation_Long)
    FROM (
        SELECT 
            T.LocationId AS ZoneLocation_LocationId, 
            T.ZoneId AS ZoneLocation_ZoneId, 
            T.Lat AS ZoneLocation_Lat, 
            T.Long AS ZoneLocation_Long, 
            True AS _from0
        FROM Entities.ZoneLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ZoneUser
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ZoneUser", @"
    SELECT VALUE -- Constructing ZoneUser
        [CentralDBModel.Store.ZoneUser](T1.ZoneUser_ZoneUserId, T1.ZoneUser_ZoneId, T1.ZoneUser_Username)
    FROM (
        SELECT 
            T.ZoneUserId AS ZoneUser_ZoneUserId, 
            T.ZoneId AS ZoneUser_ZoneId, 
            T.Username AS ZoneUser_Username, 
            True AS _from0
        FROM Entities.ZoneUser AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventCode", @"
    SELECT VALUE -- Constructing EventCode
        [CentralDBModel.Store.EventCode](T1.EventCode_EventCode, T1.EventCode_EventAssociated, T1.EventCode_EventGroupId)
    FROM (
        SELECT 
            T.EventCode1 AS EventCode_EventCode, 
            T.EventAssociated AS EventCode_EventAssociated, 
            T.EventGroupId AS EventCode_EventGroupId, 
            True AS _from0
        FROM Entities.EventCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventGroup", @"
    SELECT VALUE -- Constructing EventGroup
        [CentralDBModel.Store.EventGroup](T1.EventGroup_EventGroupId, T1.EventGroup_EventCodeMin, T1.EventGroup_EventCodeMax, T1.EventGroup_EventCodeGroupDescription)
    FROM (
        SELECT 
            T.EventGroupId AS EventGroup_EventGroupId, 
            T.EventCodeMin AS EventGroup_EventCodeMin, 
            T.EventCodeMax AS EventGroup_EventCodeMax, 
            T.EventCodeGroupDescription AS EventGroup_EventCodeGroupDescription, 
            True AS _from0
        FROM Entities.EventGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventQualifier
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventQualifier", @"
    SELECT VALUE -- Constructing EventQualifier
        [CentralDBModel.Store.EventQualifier](T1.EventQualifier_EventQualifierId, T1.EventQualifier_EventQualifierDescription)
    FROM (
        SELECT 
            T.EventQualifierId AS EventQualifier_EventQualifierId, 
            T.EventQualifierDescription AS EventQualifier_EventQualifierDescription, 
            True AS _from0
        FROM Entities.EventQualifier AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventTypeTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventTypeTemplate", @"
    SELECT VALUE -- Constructing EventTypeTemplate
        [CentralDBModel.Store.EventTypeTemplate](T1.EventTypeTemplate_EventTypeTemplateId, T1.EventTypeTemplate_EventTemplateName, T1.EventTypeTemplate_ExternalId, T1.EventTypeTemplate_Discriminator)
    FROM (
        SELECT 
            T.EventTypeTemplateId AS EventTypeTemplate_EventTypeTemplateId, 
            T.EventTemplateName AS EventTypeTemplate_EventTemplateName, 
            T.ExternalId AS EventTypeTemplate_ExternalId, 
            T.Discriminator AS EventTypeTemplate_Discriminator, 
            True AS _from0
        FROM Entities.EventTypeTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventTemplate", "\r\n    SELECT VALUE -- Constructing EventTemplate\r\n        [CentralDBModel.Store.E" +
                    "ventTemplate](T1.EventTemplate_EventTemplateId, T1.EventTemplate_EventTypeTeplat" +
                    "eId, T1.EventTemplate_EventCodeId, T1.EventTemplate_EventQualifierId, T1.EventTe" +
                    "mplate_Headline, T1.EventTemplate_EventType, T1.EventTemplate_MessageType, T1.Ev" +
                    "entTemplate_Status, T1.EventTemplate_Category, T1.EventTemplate_Urgency, T1.Even" +
                    "tTemplate_Severity, T1.EventTemplate_Certainty, T1.EventTemplate_ResponseType, T" +
                    "1.EventTemplate_Description, T1.EventTemplate_Instruction, T1.EventTemplate_Scop" +
                    "e)\r\n    FROM (\r\n        SELECT \r\n            T.EventTemplateId AS EventTemplate_" +
                    "EventTemplateId, \r\n            T.EventTypeTeplateId AS EventTemplate_EventTypeTe" +
                    "plateId, \r\n            T.EventCodeId AS EventTemplate_EventCodeId, \r\n           " +
                    " T.EventQualifierId AS EventTemplate_EventQualifierId, \r\n            T.Headline " +
                    "AS EventTemplate_Headline, \r\n            T.EventType AS EventTemplate_EventType," +
                    " \r\n            T.MessageType AS EventTemplate_MessageType, \r\n            T.Statu" +
                    "s AS EventTemplate_Status, \r\n            T.Category AS EventTemplate_Category, \r" +
                    "\n            T.Urgency AS EventTemplate_Urgency, \r\n            T.Severity AS Eve" +
                    "ntTemplate_Severity, \r\n            T.Certainty AS EventTemplate_Certainty, \r\n   " +
                    "         T.ResponseType AS EventTemplate_ResponseType, \r\n            T.Descripti" +
                    "on AS EventTemplate_Description, \r\n            T.Instruction AS EventTemplate_In" +
                    "struction, \r\n            T.Scope AS EventTemplate_Scope, \r\n            True AS _" +
                    "from0\r\n        FROM Entities.EventTemplate AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventFieldDefinition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventFieldDefinition", "\r\n    SELECT VALUE -- Constructing EventFieldDefinition\r\n        [CentralDBModel." +
                    "Store.EventFieldDefinition](T4.EventFieldDefinition_EventFieldId, T4.EventFieldD" +
                    "efinition_EventTypeId, T4.EventFieldDefinition_FieldName, T4.EventFieldDefinitio" +
                    "n_StartByte, T4.EventFieldDefinition_NumberOfBytes, T4.EventFieldDefinition_Fiel" +
                    "dTypeId)\r\n    FROM (\r\n        SELECT T1.EventFieldDefinition_EventFieldId, T2.Ev" +
                    "entFieldDefinition_EventTypeId, T3.EventFieldDefinition_FieldName, T3.EventField" +
                    "Definition_StartByte, T3.EventFieldDefinition_NumberOfBytes, T1.EventFieldDefini" +
                    "tion_FieldTypeId, T3._from0, T2._from1, T1._from2\r\n        FROM  (\r\n            " +
                    "SELECT \r\n                Key(T.EventFieldDefinition).EventFieldId AS EventFieldD" +
                    "efinition_EventFieldId, \r\n                Key(T.EventFieldType).FieldTypeId AS E" +
                    "ventFieldDefinition_FieldTypeId, \r\n                True AS _from2\r\n            F" +
                    "ROM Entities.FK_EventFieldDefinition_FieldType AS T) AS T1\r\n            INNER JO" +
                    "IN (\r\n            SELECT \r\n                Key(T.EventFieldDefinition).EventFiel" +
                    "dId AS EventFieldDefinition_EventFieldId, \r\n                Key(T.EventTypeTempl" +
                    "ate).EventTypeTemplateId AS EventFieldDefinition_EventTypeId, \r\n                " +
                    "True AS _from1\r\n            FROM Entities.FK_EventFieldDefinition_EventTypeTempl" +
                    "ate AS T) AS T2\r\n            ON T1.EventFieldDefinition_EventFieldId = T2.EventF" +
                    "ieldDefinition_EventFieldId\r\n            INNER JOIN (\r\n            SELECT \r\n    " +
                    "            T.EventFieldId AS EventFieldDefinition_EventFieldId, \r\n             " +
                    "   T.FieldName AS EventFieldDefinition_FieldName, \r\n                T.StartByte " +
                    "AS EventFieldDefinition_StartByte, \r\n                T.NumberOfBytes AS EventFie" +
                    "ldDefinition_NumberOfBytes, \r\n                True AS _from0\r\n            FROM E" +
                    "ntities.EventFieldDefinition AS T) AS T3\r\n            ON T1.EventFieldDefinition" +
                    "_EventFieldId = T3.EventFieldDefinition_EventFieldId\r\n    ) AS T4");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.EventFieldType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.EventFieldType", @"
    SELECT VALUE -- Constructing EventFieldType
        [CentralDBModel.Store.EventFieldType](T1.EventFieldType_FieldTypeId, T1.EventFieldType_Name, T1.EventFieldType_Format)
    FROM (
        SELECT 
            T.FieldTypeId AS EventFieldType_FieldTypeId, 
            T.Name AS EventFieldType_Name, 
            T.Format AS EventFieldType_Format, 
            True AS _from0
        FROM Entities.EventFieldType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlertType", @"
    SELECT VALUE -- Constructing AlertType
        [CentralDBModel.Store.AlertType](T1.AlertType_AlertTypeId, T1.AlertType_Name, T1.AlertType_Description)
    FROM (
        SELECT 
            T.AlertTypeId AS AlertType_AlertTypeId, 
            T.Name AS AlertType_Name, 
            T.Description AS AlertType_Description, 
            True AS _from0
        FROM Entities.AlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DeviceExternalIdDefinition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DeviceExternalIdDefinition", @"
    SELECT VALUE -- Constructing DeviceExternalIdDefinition
        [CentralDBModel.Store.DeviceExternalIdDefinition](T1.DeviceExternalIdDefinition_InterfaceId, T1.DeviceExternalIdDefinition_EventFieldId, T1.DeviceExternalIdDefinition_order)
    FROM (
        SELECT 
            T.InterfaceId AS DeviceExternalIdDefinition_InterfaceId, 
            T.EventFieldId AS DeviceExternalIdDefinition_EventFieldId, 
            T.[order] AS DeviceExternalIdDefinition_order, 
            True AS _from0
        FROM Entities.DeviceExternalIdDefinition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AnalyticAlgorithmType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AnalyticAlgorithmType", @"
    SELECT VALUE -- Constructing AnalyticAlgorithmType
        [CentralDBModel.Store.AnalyticAlgorithmType](T1.AnalyticAlgorithmType_AnalyticAlgorithmId, T1.AnalyticAlgorithmType_Name)
    FROM (
        SELECT 
            T.AnalyticAlgorithmId AS AnalyticAlgorithmType_AnalyticAlgorithmId, 
            T.Name AS AnalyticAlgorithmType_Name, 
            True AS _from0
        FROM Entities.AnalyticAlgorithmType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountBilling
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountBilling", @"
    SELECT VALUE -- Constructing AccountBilling
        [CentralDBModel.Store.AccountBilling](T1.AccountBilling_AccountBillingId, T1.AccountBilling_PaymentMethodId, T1.AccountBilling_AddressId)
    FROM (
        SELECT 
            T.AccountBillingId AS AccountBilling_AccountBillingId, 
            T.PaymentMethodId AS AccountBilling_PaymentMethodId, 
            T.AddressId AS AccountBilling_AddressId, 
            True AS _from0
        FROM Entities.AccountBilling AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ContactMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ContactMethod", @"
    SELECT VALUE -- Constructing ContactMethod
        [CentralDBModel.Store.ContactMethod](T1.ContactMethod_ContactMethodId, T1.ContactMethod_Name)
    FROM (
        SELECT 
            T.ContactMethodId AS ContactMethod_ContactMethodId, 
            T.Name AS ContactMethod_Name, 
            True AS _from0
        FROM Entities.ContactMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.PaymentMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.PaymentMethod", @"
    SELECT VALUE -- Constructing PaymentMethod
        [CentralDBModel.Store.PaymentMethod](T1.PaymentMethod_PaymentMethodId, T1.PaymentMethod_Name)
    FROM (
        SELECT 
            T.PaymentMethodId AS PaymentMethod_PaymentMethodId, 
            T.Name AS PaymentMethod_Name, 
            True AS _from0
        FROM Entities.PaymentMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.PersonContactType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.PersonContactType", @"
    SELECT VALUE -- Constructing PersonContactType
        [CentralDBModel.Store.PersonContactType](T1.PersonContactType_PersonContactTypeId, T1.PersonContactType_PersonId, T1.PersonContactType_ContactTypeId)
    FROM (
        SELECT 
            T.PersonContactTypeId AS PersonContactType_PersonContactTypeId, 
            T.PersonId AS PersonContactType_PersonId, 
            T.ContactTypeId AS PersonContactType_ContactTypeId, 
            True AS _from0
        FROM Entities.PersonContactType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.PreferedContatMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.PreferedContatMethod", @"
    SELECT VALUE -- Constructing PreferedContatMethod
        [CentralDBModel.Store.PreferedContatMethod](T1.PreferedContatMethod_PreferedContacMethodtId, T1.PreferedContatMethod_ContactId, T1.PreferedContatMethod_ContactMethodId)
    FROM (
        SELECT 
            T.PreferedContacMethodtId AS PreferedContatMethod_PreferedContacMethodtId, 
            T.ContactId AS PreferedContatMethod_ContactId, 
            T.ContactMethodId AS PreferedContatMethod_ContactMethodId, 
            True AS _from0
        FROM Entities.PreferedContatMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountAlarmPanel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountAlarmPanel", @"
    SELECT VALUE -- Constructing AccountAlarmPanel
        [CentralDBModel.Store.AccountAlarmPanel](T1.AccountAlarmPanel_AccountAlarmPanelId, T1.AccountAlarmPanel_AccountId, T1.AccountAlarmPanel_EventGroupId)
    FROM (
        SELECT 
            T.AccountAlarmPanelId AS AccountAlarmPanel_AccountAlarmPanelId, 
            T.AccountId AS AccountAlarmPanel_AccountId, 
            T.EventGroupId AS AccountAlarmPanel_EventGroupId, 
            True AS _from0
        FROM Entities.AccountAlarmPanel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountAnalyticsAlgorithmType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountAnalyticsAlgorithmType", @"
    SELECT VALUE -- Constructing AccountAnalyticsAlgorithmType
        [CentralDBModel.Store.AccountAnalyticsAlgorithmType](T1.AccountAnalyticsAlgorithmType_AccountAnalyticsAlgorithmTypeId, T1.AccountAnalyticsAlgorithmType_AccountId, T1.AccountAnalyticsAlgorithmType_AnalyticsAlgorithTypeId)
    FROM (
        SELECT 
            T.AccountAnalyticsAlgorithmTypeId AS AccountAnalyticsAlgorithmType_AccountAnalyticsAlgorithmTypeId, 
            T.AccountId AS AccountAnalyticsAlgorithmType_AccountId, 
            T.AnalyticsAlgorithTypeId AS AccountAnalyticsAlgorithmType_AnalyticsAlgorithTypeId, 
            True AS _from0
        FROM Entities.AccountAnalyticsAlgorithmType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountNvrAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountNvrAlertType", @"
    SELECT VALUE -- Constructing AccountNvrAlertType
        [CentralDBModel.Store.AccountNvrAlertType](T1.AccountNvrAlertType_AccountNvrAlertTypeId, T1.AccountNvrAlertType_AccountId, T1.AccountNvrAlertType_NvrAlertTypeId)
    FROM (
        SELECT 
            T.AccountNvrAlertTypeId AS AccountNvrAlertType_AccountNvrAlertTypeId, 
            T.AccountId AS AccountNvrAlertType_AccountId, 
            T.NvrAlertTypeId AS AccountNvrAlertType_NvrAlertTypeId, 
            True AS _from0
        FROM Entities.AccountNvrAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.NvrAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.NvrAlertType", @"
    SELECT VALUE -- Constructing NvrAlertType
        [CentralDBModel.Store.NvrAlertType](T1.NvrAlertType_NvrAlertTypeId, T1.NvrAlertType_Name)
    FROM (
        SELECT 
            T.NvrAlertTypeId AS NvrAlertType_NvrAlertTypeId, 
            T.Name AS NvrAlertType_Name, 
            True AS _from0
        FROM Entities.NvrAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AnalyticsEventTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AnalyticsEventTemplate", "\r\n    SELECT VALUE -- Constructing AnalyticsEventTemplate\r\n        [CentralDBMode" +
                    "l.Store.AnalyticsEventTemplate](T1.AnalyticsEventTemplate_AnalyticsEventTemplate" +
                    "Id, T1.AnalyticsEventTemplate_EventTypeTeplateId, T1.AnalyticsEventTemplate_Name" +
                    ", T1.AnalyticsEventTemplate_Headline, T1.AnalyticsEventTemplate_EventType, T1.An" +
                    "alyticsEventTemplate_MessageType, T1.AnalyticsEventTemplate_Status, T1.Analytics" +
                    "EventTemplate_Category, T1.AnalyticsEventTemplate_Urgency, T1.AnalyticsEventTemp" +
                    "late_Severity, T1.AnalyticsEventTemplate_Certainty, T1.AnalyticsEventTemplate_Re" +
                    "sponseType, T1.AnalyticsEventTemplate_Description, T1.AnalyticsEventTemplate_Ins" +
                    "truction, T1.AnalyticsEventTemplate_Scope, T1.AnalyticsEventTemplate_AnalyticAlg" +
                    "orithmTypeId)\r\n    FROM (\r\n        SELECT \r\n            T.AnalyticsEventTemplate" +
                    "Id AS AnalyticsEventTemplate_AnalyticsEventTemplateId, \r\n            T.EventType" +
                    "TeplateId AS AnalyticsEventTemplate_EventTypeTeplateId, \r\n            T.Name AS " +
                    "AnalyticsEventTemplate_Name, \r\n            T.Headline AS AnalyticsEventTemplate_" +
                    "Headline, \r\n            T.EventType AS AnalyticsEventTemplate_EventType, \r\n     " +
                    "       T.MessageType AS AnalyticsEventTemplate_MessageType, \r\n            T.Stat" +
                    "us AS AnalyticsEventTemplate_Status, \r\n            T.Category AS AnalyticsEventT" +
                    "emplate_Category, \r\n            T.Urgency AS AnalyticsEventTemplate_Urgency, \r\n " +
                    "           T.Severity AS AnalyticsEventTemplate_Severity, \r\n            T.Certai" +
                    "nty AS AnalyticsEventTemplate_Certainty, \r\n            T.ResponseType AS Analyti" +
                    "csEventTemplate_ResponseType, \r\n            T.Description AS AnalyticsEventTempl" +
                    "ate_Description, \r\n            T.Instruction AS AnalyticsEventTemplate_Instructi" +
                    "on, \r\n            T.Scope AS AnalyticsEventTemplate_Scope, \r\n            T.Analy" +
                    "ticAlgorithmTypeId AS AnalyticsEventTemplate_AnalyticAlgorithmTypeId, \r\n        " +
                    "    True AS _from0\r\n        FROM Entities.AnalyticsEventTemplate AS T\r\n    ) AS " +
                    "T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.VideoAanalyticsEvent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.VideoAanalyticsEvent", @"
    SELECT VALUE -- Constructing VideoAanalyticsEvent
        [CentralDBModel.Store.VideoAanalyticsEvent](T1.VideoAanalyticsEvent_VideoAanalyticsEventId, T1.VideoAanalyticsEvent_CameraGuid, T1.VideoAanalyticsEvent_ObjectId, T1.VideoAanalyticsEvent_Height, T1.VideoAanalyticsEvent_Width, T1.VideoAanalyticsEvent_CenterX, T1.VideoAanalyticsEvent_CenterY, T1.VideoAanalyticsEvent_SentTime, T1.VideoAanalyticsEvent_IsInZone, T1.VideoAanalyticsEvent_AlarmLevel, T1.VideoAanalyticsEvent_AlgorithmName, T1.VideoAanalyticsEvent_AlertId)
    FROM (
        SELECT 
            T.VideoAanalyticsEventId AS VideoAanalyticsEvent_VideoAanalyticsEventId, 
            T.CameraGuid AS VideoAanalyticsEvent_CameraGuid, 
            T.ObjectId AS VideoAanalyticsEvent_ObjectId, 
            T.Height AS VideoAanalyticsEvent_Height, 
            T.Width AS VideoAanalyticsEvent_Width, 
            T.CenterX AS VideoAanalyticsEvent_CenterX, 
            T.CenterY AS VideoAanalyticsEvent_CenterY, 
            T.SentTime AS VideoAanalyticsEvent_SentTime, 
            T.IsInZone AS VideoAanalyticsEvent_IsInZone, 
            T.AlarmLevel AS VideoAanalyticsEvent_AlarmLevel, 
            T.AlgorithmName AS VideoAanalyticsEvent_AlgorithmName, 
            T.AlertId AS VideoAanalyticsEvent_AlertId, 
            True AS _from0
        FROM Entities.VideoAanalyticsEvent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.IncidentReportReference
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.IncidentReportReference", @"
    SELECT VALUE -- Constructing IncidentReportReference
        [CentralDBModel.Store.IncidentReportReference](T1.IncidentReportReference_IncidentReportReportsId, T1.IncidentReportReference_IncidentReportId, T1.IncidentReportReference_IncidentReportReferenceId, T1.IncidentReportReference_Sequence, T1.IncidentReportReference_AttachDateTime)
    FROM (
        SELECT 
            T.IncidentReportReportsId AS IncidentReportReference_IncidentReportReportsId, 
            T.IncidentReportId AS IncidentReportReference_IncidentReportId, 
            T.IncidentReportReferenceId AS IncidentReportReference_IncidentReportReferenceId, 
            T.Sequence AS IncidentReportReference_Sequence, 
            T.AttachDateTime AS IncidentReportReference_AttachDateTime, 
            True AS _from0
        FROM Entities.IncidentReportReference AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.security_UsersGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.security_UsersGroups", @"
    SELECT VALUE -- Constructing security_UsersGroups
        [CentralDBModel.Store.security_UsersGroups](T1.[security_UsersGroups.Id], T1.[security_UsersGroups.Name], T1.[security_UsersGroups.Parent])
    FROM (
        SELECT 
            T.Id AS [security_UsersGroups.Id], 
            T.Name AS [security_UsersGroups.Name], 
            T.Parent AS [security_UsersGroups.Parent], 
            True AS _from0
        FROM Entities.UsersGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.aspnet_Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.aspnet_Users", @"
    SELECT VALUE -- Constructing aspnet_Users
        [CentralDBModel.Store.aspnet_Users](T1.[aspnet_Users.ApplicationId], T1.[aspnet_Users.UserId], T1.[aspnet_Users.UserName], T1.[aspnet_Users.LoweredUserName], T1.[aspnet_Users.MobileAlias], T1.[aspnet_Users.IsAnonymous], T1.[aspnet_Users.LastActivityDate])
    FROM (
        SELECT 
            T.ApplicationId AS [aspnet_Users.ApplicationId], 
            T.UserId AS [aspnet_Users.UserId], 
            T.UserName AS [aspnet_Users.UserName], 
            T.LoweredUserName AS [aspnet_Users.LoweredUserName], 
            T.MobileAlias AS [aspnet_Users.MobileAlias], 
            T.IsAnonymous AS [aspnet_Users.IsAnonymous], 
            T.LastActivityDate AS [aspnet_Users.LastActivityDate], 
            True AS _from0
        FROM Entities.MembershipUser AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tbpeoplecounter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tbpeoplecounter", @"
    SELECT VALUE -- Constructing tbpeoplecounter
        [CentralDBModel.Store.tbpeoplecounter](T1.tbpeoplecounter_ID, T1.tbpeoplecounter_DeviceID, T1.tbpeoplecounter_EventDate, T1.tbpeoplecounter_EventCount)
    FROM (
        SELECT 
            T.ID AS tbpeoplecounter_ID, 
            T.DeviceID AS tbpeoplecounter_DeviceID, 
            T.EventDate AS tbpeoplecounter_EventDate, 
            T.EventCount AS tbpeoplecounter_EventCount, 
            True AS _from0
        FROM Entities.tbpeoplecounter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.BioAlerts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.BioAlerts", @"
    SELECT VALUE -- Constructing BioAlerts
        [CentralDBModel.Store.BioAlerts](T1.BioAlerts_BioAlertID, T1.BioAlerts_Type, T1.BioAlerts_TimeStamp, T1.BioAlerts_CameraId, T1.BioAlerts_Quality, T1.BioAlerts_Score, T1.BioAlerts_FrameImage, T1.BioAlerts_FrameIndex, T1.BioAlerts_FaceSize, T1.BioAlerts_FacePosition, T1.BioAlerts_SubjectFaceImage, T1.BioAlerts_SubjectModelImage, T1.BioAlerts_SubjectId, T1.BioAlerts_SubjectCode, T1.BioAlerts_SubjectName, T1.BioAlerts_SubjectLastName, T1.BioAlerts_alertID)
    FROM (
        SELECT 
            T.BioAlertID AS BioAlerts_BioAlertID, 
            T.Type AS BioAlerts_Type, 
            T.TimeStamp AS BioAlerts_TimeStamp, 
            T.CameraId AS BioAlerts_CameraId, 
            T.Quality AS BioAlerts_Quality, 
            T.Score AS BioAlerts_Score, 
            T.FrameImage AS BioAlerts_FrameImage, 
            T.FrameIndex AS BioAlerts_FrameIndex, 
            T.FaceSize AS BioAlerts_FaceSize, 
            T.FacePosition AS BioAlerts_FacePosition, 
            T.SubjectFaceImage AS BioAlerts_SubjectFaceImage, 
            T.SubjectModelImage AS BioAlerts_SubjectModelImage, 
            T.SubjectId AS BioAlerts_SubjectId, 
            T.SubjectCode AS BioAlerts_SubjectCode, 
            T.SubjectName AS BioAlerts_SubjectName, 
            T.SubjectLastName AS BioAlerts_SubjectLastName, 
            T.alertID AS BioAlerts_alertID, 
            True AS _from0
        FROM Entities.BioAlerts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.SubMember
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.SubMember", @"
    SELECT VALUE -- Constructing SubMember
        [CentralDBModel.Store.SubMember](T1.SubMember_MemID, T1.SubMember_AccountNumber, T1.SubMember_Name, T1.SubMember_Mobile, T1.SubMember_Photo, T1.SubMember_DeviceID)
    FROM (
        SELECT 
            T.MemID AS SubMember_MemID, 
            T.AccountNumber AS SubMember_AccountNumber, 
            T.Name AS SubMember_Name, 
            T.Mobile AS SubMember_Mobile, 
            T.Photo AS SubMember_Photo, 
            T.DeviceID AS SubMember_DeviceID, 
            True AS _from0
        FROM Entities.SubMember AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DvrNvrTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DvrNvrTypeMaster", @"
    SELECT VALUE -- Constructing DvrNvrTypeMaster
        [CentralDBModel.Store.DvrNvrTypeMaster](T1.DvrNvrTypeMaster_DvrNvrTypeId, T1.DvrNvrTypeMaster_Name, T1.DvrNvrTypeMaster_Description)
    FROM (
        SELECT 
            T.DvrNvrTypeId AS DvrNvrTypeMaster_DvrNvrTypeId, 
            T.Name AS DvrNvrTypeMaster_Name, 
            T.Description AS DvrNvrTypeMaster_Description, 
            True AS _from0
        FROM Entities.DvrNvrTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.NVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.NVR", @"
    SELECT VALUE -- Constructing NVR
        [CentralDBModel.Store.NVR](T1.NVR_NvrId, T1.NVR_NvrUrl, T1.NVR_IPAddress, T1.NVR_Port, T1.NVR_Description, T1.NVR_Username, T1.NVR_Password, T1.NVR_InterfaceId, T1.NVR_DvrNvrTypeId, T1.NVR_CameraStream)
    FROM (
        SELECT 
            T.NvrId AS NVR_NvrId, 
            T.NvrUrl AS NVR_NvrUrl, 
            T.IPAddress AS NVR_IPAddress, 
            T.Port AS NVR_Port, 
            T.Description AS NVR_Description, 
            T.Username AS NVR_Username, 
            T.Password AS NVR_Password, 
            T.InterfaceId AS NVR_InterfaceId, 
            T.DvrNvrTypeId AS NVR_DvrNvrTypeId, 
            T.CameraStream AS NVR_CameraStream, 
            True AS _from0
        FROM Entities.NVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblExternalContactDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblExternalContactDetails", @"
    SELECT VALUE -- Constructing tblExternalContactDetails
        [CentralDBModel.Store.tblExternalContactDetails](T1.tblExternalContactDetails_ID, T1.tblExternalContactDetails_InterfaceID, T1.tblExternalContactDetails_ContactName, T1.tblExternalContactDetails_ContactEmail, T1.tblExternalContactDetails_ContactNumber, T1.tblExternalContactDetails_MaintenanceType)
    FROM (
        SELECT 
            T.ID AS tblExternalContactDetails_ID, 
            T.InterfaceID AS tblExternalContactDetails_InterfaceID, 
            T.ContactName AS tblExternalContactDetails_ContactName, 
            T.ContactEmail AS tblExternalContactDetails_ContactEmail, 
            T.ContactNumber AS tblExternalContactDetails_ContactNumber, 
            T.MaintenanceType AS tblExternalContactDetails_MaintenanceType, 
            True AS _from0
        FROM Entities.tblExternalContactDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblInternalContactDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblInternalContactDetails", @"
    SELECT VALUE -- Constructing tblInternalContactDetails
        [CentralDBModel.Store.tblInternalContactDetails](T1.tblInternalContactDetails_ID, T1.tblInternalContactDetails_InterfaceID, T1.tblInternalContactDetails_ContactName, T1.tblInternalContactDetails_ContactEmail, T1.tblInternalContactDetails_ContactNumber, T1.tblInternalContactDetails_MaintenanceType)
    FROM (
        SELECT 
            T.ID AS tblInternalContactDetails_ID, 
            T.InterfaceID AS tblInternalContactDetails_InterfaceID, 
            T.ContactName AS tblInternalContactDetails_ContactName, 
            T.ContactEmail AS tblInternalContactDetails_ContactEmail, 
            T.ContactNumber AS tblInternalContactDetails_ContactNumber, 
            T.MaintenanceType AS tblInternalContactDetails_MaintenanceType, 
            True AS _from0
        FROM Entities.tblInternalContactDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountAlert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountAlert", @"
    SELECT VALUE -- Constructing AccountAlert
        [CentralDBModel.Store.AccountAlert](T1.AccountAlert_AccountId, T1.AccountAlert_AlertTypeId)
    FROM (
        SELECT 
            Key(T.Account).AccountId AS AccountAlert_AccountId, 
            Key(T.AlertType).AlertTypeId AS AccountAlert_AlertTypeId, 
            True AS _from0
        FROM Entities.AccountAlert AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.InterfaceTypeAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.InterfaceTypeAlertType", @"
    SELECT VALUE -- Constructing InterfaceTypeAlertType
        [CentralDBModel.Store.InterfaceTypeAlertType](T1.InterfaceTypeAlertType_InterfaceTypeId, T1.InterfaceTypeAlertType_AlertTypeId)
    FROM (
        SELECT 
            Key(T.InterfaceType).InterfaceTypeId AS InterfaceTypeAlertType_InterfaceTypeId, 
            Key(T.AlertType).AlertTypeId AS InterfaceTypeAlertType_AlertTypeId, 
            True AS _from0
        FROM Entities.InterfaceTypeAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.security_UsersToUsersGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.security_UsersToUsersGroups", @"
    SELECT VALUE -- Constructing security_UsersToUsersGroups
        [CentralDBModel.Store.security_UsersToUsersGroups](T1.[security_UsersToUsersGroups.GroupId], T1.[security_UsersToUsersGroups.UserId])
    FROM (
        SELECT 
            Key(T.security_UsersGroups).Id AS [security_UsersToUsersGroups.GroupId], 
            Key(T.User).UserId AS [security_UsersToUsersGroups.UserId], 
            True AS _from0
        FROM Entities.security_UsersToUsersGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Account", "\r\n    SELECT VALUE -- Constructing Account\r\n        [CentralDBModel.Account](T1.A" +
                    "ccount_AccountId, T1.Account_AccountTypeId, T1.Account_ParentAccountId, T1.Accou" +
                    "nt_DeletionStateCode, T1.Account_ServicePackageId, T1.Account_PrimaryContactId, " +
                    "T1.Account_Name, T1.Account_AccountNumber, T1.Account_Description, T1.Account_We" +
                    "bSiteURL, T1.Account_TimeZoneId, T1.Account_CreatedOn, T1.Account_CreatedBy, T1." +
                    "Account_ModifiedOn, T1.Account_ModifiedBy, T1.Account_ExternalId, T1.Account_Ema" +
                    "il, T1.Account_AccountBillingId, T1.Account_AccountLogo, T1.Account_BillingSameA" +
                    "sAccountAddress)\r\n    FROM (\r\n        SELECT \r\n            T.AccountId AS Accoun" +
                    "t_AccountId, \r\n            T.AccountTypeId AS Account_AccountTypeId, \r\n         " +
                    "   T.ParentAccountId AS Account_ParentAccountId, \r\n            T.DeletionStateCo" +
                    "de AS Account_DeletionStateCode, \r\n            T.ServicePackageId AS Account_Ser" +
                    "vicePackageId, \r\n            T.PrimaryContactId AS Account_PrimaryContactId, \r\n " +
                    "           T.Name AS Account_Name, \r\n            T.AccountNumber AS Account_Acco" +
                    "untNumber, \r\n            T.Description AS Account_Description, \r\n            T.W" +
                    "ebSiteURL AS Account_WebSiteURL, \r\n            T.TimeZoneId AS Account_TimeZoneI" +
                    "d, \r\n            T.CreatedOn AS Account_CreatedOn, \r\n            T.CreatedBy AS " +
                    "Account_CreatedBy, \r\n            T.ModifiedOn AS Account_ModifiedOn, \r\n         " +
                    "   T.ModifiedBy AS Account_ModifiedBy, \r\n            T.ExternalId AS Account_Ext" +
                    "ernalId, \r\n            T.Email AS Account_Email, \r\n            T.AccountBillingI" +
                    "d AS Account_AccountBillingId, \r\n            T.AccountLogo AS Account_AccountLog" +
                    "o, \r\n            T.BillingSameAsAccountAddress AS Account_BillingSameAsAccountAd" +
                    "dress, \r\n            True AS _from0\r\n        FROM CentralDBModelStoreContainer.A" +
                    "ccount AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountInvoice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3509);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AccountInvoice\r\n        [CentralDBModel.Accou");
            viewString.Append("ntInvoice](T1.AccountInvoice_InvoiceId, T1.AccountInvoice_PriorityCode, T1.Accou");
            viewString.Append("ntInvoice_DeletionStateCode, T1.AccountInvoice_AccountId, T1.AccountInvoice_Cont");
            viewString.Append("actId, T1.AccountInvoice_InvoiceNumber, T1.AccountInvoice_Name, T1.AccountInvoic");
            viewString.Append("e_Description, T1.AccountInvoice_DiscountAmount, T1.AccountInvoice_FreightAmount");
            viewString.Append(", T1.AccountInvoice_TotalAmount, T1.AccountInvoice_TotalLineItemAmount, T1.Accou");
            viewString.Append("ntInvoice_TotalLineItemDiscountAmount, T1.AccountInvoice_TotalAmountLessFreight,");
            viewString.Append(" T1.AccountInvoice_TotalDiscountAmount, T1.AccountInvoice_TotalTax, T1.AccountIn");
            viewString.Append("voice_CreatedBy, T1.AccountInvoice_CreatedOn, T1.AccountInvoice_ModifiedBy, T1.A");
            viewString.Append("ccountInvoice_ModifiedOn, T1.AccountInvoice_StateCode, T1.[AccountInvoice.BillTo");
            viewString.Append("_Name], T1.[AccountInvoice.BillTo_Line1], T1.[AccountInvoice.BillTo_Line2], T1.[");
            viewString.Append("AccountInvoice.BillTo_Line3], T1.[AccountInvoice.BillTo_City], T1.[AccountInvoic");
            viewString.Append("e.BillTo_StateOrProvince], T1.[AccountInvoice.BillTo_Country], T1.[AccountInvoic");
            viewString.Append("e.BillTo_PostalCode], T1.[AccountInvoice.BillTo_Telephone], T1.[AccountInvoice.B");
            viewString.Append("illTo_Fax], T1.AccountInvoice_DiscountPercentage, T1.AccountInvoice_DueDate, T1.");
            viewString.Append("AccountInvoice_TimeZoneId)\r\n    FROM (\r\n        SELECT \r\n            T.InvoiceId");
            viewString.Append(" AS AccountInvoice_InvoiceId, \r\n            T.PriorityCode AS AccountInvoice_Pri");
            viewString.Append("orityCode, \r\n            T.DeletionStateCode AS AccountInvoice_DeletionStateCode");
            viewString.Append(", \r\n            T.AccountId AS AccountInvoice_AccountId, \r\n            T.Contact");
            viewString.Append("Id AS AccountInvoice_ContactId, \r\n            T.InvoiceNumber AS AccountInvoice_");
            viewString.Append("InvoiceNumber, \r\n            T.Name AS AccountInvoice_Name, \r\n            T.Desc");
            viewString.Append("ription AS AccountInvoice_Description, \r\n            T.DiscountAmount AS Account");
            viewString.Append("Invoice_DiscountAmount, \r\n            T.FreightAmount AS AccountInvoice_FreightA");
            viewString.Append("mount, \r\n            T.TotalAmount AS AccountInvoice_TotalAmount, \r\n            ");
            viewString.Append("T.TotalLineItemAmount AS AccountInvoice_TotalLineItemAmount, \r\n            T.Tot");
            viewString.Append("alLineItemDiscountAmount AS AccountInvoice_TotalLineItemDiscountAmount, \r\n      ");
            viewString.Append("      T.TotalAmountLessFreight AS AccountInvoice_TotalAmountLessFreight, \r\n     ");
            viewString.Append("       T.TotalDiscountAmount AS AccountInvoice_TotalDiscountAmount, \r\n          ");
            viewString.Append("  T.TotalTax AS AccountInvoice_TotalTax, \r\n            T.CreatedBy AS AccountInv");
            viewString.Append("oice_CreatedBy, \r\n            T.CreatedOn AS AccountInvoice_CreatedOn, \r\n       ");
            viewString.Append("     T.ModifiedBy AS AccountInvoice_ModifiedBy, \r\n            T.ModifiedOn AS Ac");
            viewString.Append("countInvoice_ModifiedOn, \r\n            T.StateCode AS AccountInvoice_StateCode, ");
            viewString.Append("\r\n            T.BillTo_Name AS [AccountInvoice.BillTo_Name], \r\n            T.Bil");
            viewString.Append("lTo_Line1 AS [AccountInvoice.BillTo_Line1], \r\n            T.BillTo_Line2 AS [Acc");
            viewString.Append("ountInvoice.BillTo_Line2], \r\n            T.BillTo_Line3 AS [AccountInvoice.BillT");
            viewString.Append("o_Line3], \r\n            T.BillTo_City AS [AccountInvoice.BillTo_City], \r\n       ");
            viewString.Append("     T.BillTo_StateOrProvince AS [AccountInvoice.BillTo_StateOrProvince], \r\n    ");
            viewString.Append("        T.BillTo_Country AS [AccountInvoice.BillTo_Country], \r\n            T.Bil");
            viewString.Append("lTo_PostalCode AS [AccountInvoice.BillTo_PostalCode], \r\n            T.BillTo_Tel");
            viewString.Append("ephone AS [AccountInvoice.BillTo_Telephone], \r\n            T.BillTo_Fax AS [Acco");
            viewString.Append("untInvoice.BillTo_Fax], \r\n            T.DiscountPercentage AS AccountInvoice_Dis");
            viewString.Append("countPercentage, \r\n            T.DueDate AS AccountInvoice_DueDate, \r\n          ");
            viewString.Append("  T.TimeZoneId AS AccountInvoice_TimeZoneId, \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM CentralDBModelStoreContainer.AccountInvoice AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountInvoice", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.Address
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2393);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Address\r\n        [CentralDBModel.Address](T1.");
            viewString.Append("Address_AddressId, T1.Address_AccountId, T1.Address_PersonId, T1.Address_SiteId,");
            viewString.Append(" T1.Address_DeletionStateCode, T1.Address_AddressNumber, T1.Address_AddressTypeC");
            viewString.Append("ode, T1.Address_Name, T1.Address_Line1, T1.Address_Line2, T1.Address_Line3, T1.A");
            viewString.Append("ddress_City, T1.Address_StateOrProvince, T1.Address_County, T1.Address_Country, ");
            viewString.Append("T1.Address_PostOfficeBox, T1.Address_PostalCode, T1.Address_UTCOffset, T1.Addres");
            viewString.Append("s_UPSZone, T1.Address_Latitude, T1.Address_Telephone1, T1.Address_Longitude, T1.");
            viewString.Append("Address_ShippingMethodCode, T1.Address_Telephone2, T1.Address_Telephone3, T1.Add");
            viewString.Append("ress_VersionNumber, T1.Address_Fax, T1.Address_CreatedBy, T1.Address_CreatedOn, ");
            viewString.Append("T1.Address_ModifiedBy, T1.Address_ModifiedOn)\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.AddressId AS Address_AddressId, \r\n            T.AccountId AS Address_A");
            viewString.Append("ccountId, \r\n            T.PersonId AS Address_PersonId, \r\n            T.SiteId A");
            viewString.Append("S Address_SiteId, \r\n            T.DeletionStateCode AS Address_DeletionStateCode");
            viewString.Append(", \r\n            T.AddressNumber AS Address_AddressNumber, \r\n            T.Addres");
            viewString.Append("sTypeCode AS Address_AddressTypeCode, \r\n            T.Name AS Address_Name, \r\n  ");
            viewString.Append("          T.Line1 AS Address_Line1, \r\n            T.Line2 AS Address_Line2, \r\n  ");
            viewString.Append("          T.Line3 AS Address_Line3, \r\n            T.City AS Address_City, \r\n    ");
            viewString.Append("        T.StateOrProvince AS Address_StateOrProvince, \r\n            T.County AS ");
            viewString.Append("Address_County, \r\n            T.Country AS Address_Country, \r\n            T.Post");
            viewString.Append("OfficeBox AS Address_PostOfficeBox, \r\n            T.PostalCode AS Address_Postal");
            viewString.Append("Code, \r\n            T.UTCOffset AS Address_UTCOffset, \r\n            T.UPSZone AS");
            viewString.Append(" Address_UPSZone, \r\n            T.Latitude AS Address_Latitude, \r\n            T.");
            viewString.Append("Telephone1 AS Address_Telephone1, \r\n            T.Longitude AS Address_Longitude");
            viewString.Append(", \r\n            T.ShippingMethodCode AS Address_ShippingMethodCode, \r\n          ");
            viewString.Append("  T.Telephone2 AS Address_Telephone2, \r\n            T.Telephone3 AS Address_Tele");
            viewString.Append("phone3, \r\n            T.VersionNumber AS Address_VersionNumber, \r\n            T.");
            viewString.Append("Fax AS Address_Fax, \r\n            T.CreatedBy AS Address_CreatedBy, \r\n          ");
            viewString.Append("  T.CreatedOn AS Address_CreatedOn, \r\n            T.ModifiedBy AS Address_Modifi");
            viewString.Append("edBy, \r\n            T.ModifiedOn AS Address_ModifiedOn, \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM CentralDBModelStoreContainer.Address AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Address", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.Alert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Alert", "\r\n    SELECT VALUE -- Constructing Alert\r\n        [CentralDBModel.Alert](T1.Alert" +
                    "_AlertId, T1.Alert_Identifier, T1.Alert_Sender, T1.Alert_Sent, T1.Alert_StatusId" +
                    ", T1.Alert_MessageTypeId, T1.Alert_ScopeId, T1.Alert_Source, T1.Alert_Restrictio" +
                    "n, T1.Alert_Addresses, T1.Alert_Code, T1.Alert_Note, T1.Alert_References, T1.Ale" +
                    "rt_Incidents, T1.Alert_DeviceId, T1.Alert_ReceivedDateTime, T1.Alert_MembershipU" +
                    "serId, T1.Alert_AlertOwner, T1.Alert_Alertzone, T1.Alert_EventID, T1.Alert_Alert" +
                    "Context, T1.Alert_AlertAckDateTime, T1.Alert_AlertCloseDateTime, T1.Alert_CloseR" +
                    "easonID, T1.Alert_Comments)\r\n    FROM (\r\n        SELECT \r\n            T.AlertId " +
                    "AS Alert_AlertId, \r\n            T.Identifier AS Alert_Identifier, \r\n            " +
                    "T.Sender AS Alert_Sender, \r\n            T.Sent AS Alert_Sent, \r\n            T.St" +
                    "atusId AS Alert_StatusId, \r\n            T.MessageTypeId AS Alert_MessageTypeId, " +
                    "\r\n            T.ScopeId AS Alert_ScopeId, \r\n            T.Source AS Alert_Source" +
                    ", \r\n            T.Restriction AS Alert_Restriction, \r\n            T.Addresses AS" +
                    " Alert_Addresses, \r\n            T.Code AS Alert_Code, \r\n            T.Note AS Al" +
                    "ert_Note, \r\n            T.References AS Alert_References, \r\n            T.Incide" +
                    "nts AS Alert_Incidents, \r\n            T.DeviceId AS Alert_DeviceId, \r\n          " +
                    "  T.ReceivedDateTime AS Alert_ReceivedDateTime, \r\n            T.MembershipUserId" +
                    " AS Alert_MembershipUserId, \r\n            T.AlertOwner AS Alert_AlertOwner, \r\n  " +
                    "          T.Alertzone AS Alert_Alertzone, \r\n            T.EventID AS Alert_Event" +
                    "ID, \r\n            T.AlertContext AS Alert_AlertContext, \r\n            T.AlertAck" +
                    "DateTime AS Alert_AlertAckDateTime, \r\n            T.AlertCloseDateTime AS Alert_" +
                    "AlertCloseDateTime, \r\n            T.CloseReasonID AS Alert_CloseReasonID, \r\n    " +
                    "        T.Comments AS Alert_Comments, \r\n            True AS _from0\r\n        FROM" +
                    " CentralDBModelStoreContainer.Alert AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AlertHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AlertHistory", @"
    SELECT VALUE -- Constructing AlertHistory
        [CentralDBModel.AlertHistory](T1.AlertHistory_AlertHistoryId, T1.AlertHistory_AlertId, T1.AlertHistory_UserName, T1.AlertHistory_MessageTypeId, T1.AlertHistory_ModifiedDate)
    FROM (
        SELECT 
            T.AlertHistoryId AS AlertHistory_AlertHistoryId, 
            T.AlertId AS AlertHistory_AlertId, 
            T.UserName AS AlertHistory_UserName, 
            T.MessageTypeId AS AlertHistory_MessageTypeId, 
            T.ModifiedDate AS AlertHistory_ModifiedDate, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AlertHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Area
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Area", @"
    SELECT VALUE -- Constructing Area
        [CentralDBModel.Area](T1.Area_AreaId, T1.Area_SiteId, T1.Area_InfoId, T1.Area_Description, T1.Area_Altitude, T1.Area_Celing, T1.Area_Latitude, T1.Area_Longitude)
    FROM (
        SELECT 
            T.AreaId AS Area_AreaId, 
            T.SiteId AS Area_SiteId, 
            T.InfoId AS Area_InfoId, 
            T.Description AS Area_Description, 
            T.Altitude AS Area_Altitude, 
            T.Celing AS Area_Celing, 
            T.Latitude AS Area_Latitude, 
            T.Longitude AS Area_Longitude, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Area AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.BBoxPoint
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.BBoxPoint", @"
    SELECT VALUE -- Constructing BBoxPoint
        [CentralDBModel.BBoxPoint](T1.BBoxPoint_BBoxPointId, T1.BBoxPoint_SiteId, T1.BBoxPoint_Lat, T1.BBoxPoint_Long, T1.BBoxPoint_Alt, T1.BBoxPoint_PLat, T1.BBoxPoint_PLong, T1.BBoxPoint_PAlt)
    FROM (
        SELECT 
            T.BBoxPointId AS BBoxPoint_BBoxPointId, 
            T.SiteId AS BBoxPoint_SiteId, 
            T.Lat AS BBoxPoint_Lat, 
            T.Long AS BBoxPoint_Long, 
            T.Alt AS BBoxPoint_Alt, 
            T.PLat AS BBoxPoint_PLat, 
            T.PLong AS BBoxPoint_PLong, 
            T.PAlt AS BBoxPoint_PAlt, 
            True AS _from0
        FROM CentralDBModelStoreContainer.BBoxPoint AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Category
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Category", @"
    SELECT VALUE -- Constructing Category
        [CentralDBModel.Category](T1.Category_Name)
    FROM (
        SELECT 
            T.Name AS Category_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Category AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Certainty
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Certainty", @"
    SELECT VALUE -- Constructing Certainty
        [CentralDBModel.Certainty](T1.Certainty_Name)
    FROM (
        SELECT 
            T.Name AS Certainty_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Certainty AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Contact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Contact", @"
    SELECT VALUE -- Constructing Contact
        [CentralDBModel.Contact](T1.Contact_ContactId, T1.Contact_PersonId, T1.Contact_CreatedOn, T1.Contact_CreatedBy, T1.Contact_ModifiedOn, T1.Contact_ModifiedBy, T1.Contact_TelephoneNumber, T1.Contact_EmailAddress, T1.Contact_MobileNumber, T1.Contact_LyncName, T1.Contact_FaxNumber)
    FROM (
        SELECT 
            T.ContactId AS Contact_ContactId, 
            T.PersonId AS Contact_PersonId, 
            T.CreatedOn AS Contact_CreatedOn, 
            T.CreatedBy AS Contact_CreatedBy, 
            T.ModifiedOn AS Contact_ModifiedOn, 
            T.ModifiedBy AS Contact_ModifiedBy, 
            T.TelephoneNumber AS Contact_TelephoneNumber, 
            T.EmailAddress AS Contact_EmailAddress, 
            T.MobileNumber AS Contact_MobileNumber, 
            T.LyncName AS Contact_LyncName, 
            T.FaxNumber AS Contact_FaxNumber, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Contact AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ContactType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ContactType", @"
    SELECT VALUE -- Constructing ContactType
        [CentralDBModel.ContactType](T1.ContactType_ContactTypeId, T1.ContactType_ContactTypeName)
    FROM (
        SELECT 
            T.ContactTypeId AS ContactType_ContactTypeId, 
            T.ContactTypeName AS ContactType_ContactTypeName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ContactType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Device
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(7149);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Device\r\n        CASE\r\n            WHEN NOT(T3");
            viewString.Append("._from0) THEN [CentralDBModel.Device](T3.Device_DeviceId, T3.Device_ExternalId, ");
            viewString.Append("T3.Device_Description, T3.Device_Metadata, T3.Device_Type, T3.Device_Lat, T3.Dev");
            viewString.Append("ice_Long, T3.Device_Altitude, T3.Device_LocationDescription, T3.Device_CameraGui");
            viewString.Append("d, T3.Device_NvrId, T3.Device_SiteId, T3.Device_ActiveAlert, T3.Device_HasPvAnal");
            viewString.Append("ytics, T3.Device_HasSzAnalytics, T3.Device_HasAbAnalytics, T3.Device_InterfaceId");
            viewString.Append(", T3.Device_IsMovable, T3.Device_Name)\r\n            ELSE [CentralDBModel.NvrCame");
            viewString.Append("ra](T3.Device_DeviceId, T3.Device_ExternalId, T3.Device_Description, T3.Device_M");
            viewString.Append("etadata, T3.Device_Type, T3.Device_Lat, T3.Device_Long, T3.Device_Altitude, T3.D");
            viewString.Append("evice_LocationDescription, T3.Device_CameraGuid, T3.Device_NvrId, T3.Device_Site");
            viewString.Append("Id, T3.Device_ActiveAlert, T3.Device_HasPvAnalytics, T3.Device_HasSzAnalytics, T");
            viewString.Append("3.Device_HasAbAnalytics, T3.Device_InterfaceId, T3.Device_IsMovable, T3.Device_N");
            viewString.Append("ame, T3.NvrCamera_FPS, T3.NvrCamera_AnalyticAlgorithmTypeId, T3.NvrCamera_Versio");
            viewString.Append("n, T3.NvrCamera_MaxBlobSize, T3.NvrCamera_MinBlobSize, T3.NvrCamera_AlarmDelay, ");
            viewString.Append("T3.NvrCamera_UpdateRate, T3.NvrCamera_Width, T3.NvrCamera_Height, T3.NvrCamera_Z");
            viewString.Append("oneRows, T3.NvrCamera_ZoneColumns, T3.NvrCamera_ZoneData, T3.NvrCamera_Analytics");
            viewString.Append("EventTemplateId, T3.NvrCamera_IsPtz, T3.NvrCamera_CameraIp, T3.NvrCamera_LineSta");
            viewString.Append("rt, T3.NvrCamera_LineEnd, T3.NvrCamera_DirectionFlag, T3.NvrCamera_CameraUrl, T3");
            viewString.Append(".NvrCamera_CameraPort, T3.NvrCamera_CamUser, T3.NvrCamera_CamPassword, T3.NvrCam");
            viewString.Append("era_MaxBlobWidth, T3.NvrCamera_MaxBlobHeight, T3.NvrCamera_MinBlobWidth, T3.NvrC");
            viewString.Append("amera_MinBlobHeight, T3.NvrCamera_CameraType, T3.NvrCamera_AnalyticsServerIp, T3");
            viewString.Append(".NvrCamera_Lane1, T3.NvrCamera_Lane2, T3.NvrCamera_Lane3, T3.NvrCamera_NoOfLens,");
            viewString.Append(" T3.NvrCamera_ChanelNo, T3.NvrCamera_IsEdgeAnalytics, T3.NvrCamera_Mediaurl, T3.");
            viewString.Append("NvrCamera_MediaType, T3.NvrCamera_WOWZAURL, T3.NvrCamera_RTSPCameraUrl, T3.NvrCa");
            viewString.Append("mera_ObjectTrackingTime, T3.NvrCamera_PeopleCrowdThreashold)\r\n        END\r\n    F");
            viewString.Append("ROM (\r\n        SELECT T1.Device_DeviceId, T1.Device_ExternalId, T1.Device_Descri");
            viewString.Append("ption, T1.Device_Metadata, T1.Device_Type, T1.Device_Lat, T1.Device_Long, T1.Dev");
            viewString.Append("ice_Altitude, T1.Device_LocationDescription, T1.Device_CameraGuid, T1.Device_Nvr");
            viewString.Append("Id, T1.Device_SiteId, T1.Device_ActiveAlert, T1.Device_HasPvAnalytics, T1.Device");
            viewString.Append("_HasSzAnalytics, T1.Device_HasAbAnalytics, T1.Device_InterfaceId, T1.Device_IsMo");
            viewString.Append("vable, T1.Device_Name, T2.NvrCamera_FPS, T2.NvrCamera_AnalyticAlgorithmTypeId, T");
            viewString.Append("2.NvrCamera_Version, T2.NvrCamera_MaxBlobSize, T2.NvrCamera_MinBlobSize, T2.NvrC");
            viewString.Append("amera_AlarmDelay, T2.NvrCamera_UpdateRate, T2.NvrCamera_Width, T2.NvrCamera_Heig");
            viewString.Append("ht, T2.NvrCamera_ZoneRows, T2.NvrCamera_ZoneColumns, T2.NvrCamera_ZoneData, T2.N");
            viewString.Append("vrCamera_AnalyticsEventTemplateId, T2.NvrCamera_IsPtz, T2.NvrCamera_CameraIp, T2");
            viewString.Append(".NvrCamera_LineStart, T2.NvrCamera_LineEnd, T2.NvrCamera_DirectionFlag, T2.NvrCa");
            viewString.Append("mera_CameraUrl, T2.NvrCamera_CameraPort, T2.NvrCamera_CamUser, T2.NvrCamera_CamP");
            viewString.Append("assword, T2.NvrCamera_MaxBlobWidth, T2.NvrCamera_MaxBlobHeight, T2.NvrCamera_Min");
            viewString.Append("BlobWidth, T2.NvrCamera_MinBlobHeight, T2.NvrCamera_CameraType, T2.NvrCamera_Ana");
            viewString.Append("lyticsServerIp, T2.NvrCamera_Lane1, T2.NvrCamera_Lane2, T2.NvrCamera_Lane3, T2.N");
            viewString.Append("vrCamera_NoOfLens, T2.NvrCamera_ChanelNo, T2.NvrCamera_IsEdgeAnalytics, T2.NvrCa");
            viewString.Append("mera_Mediaurl, T2.NvrCamera_MediaType, T2.NvrCamera_WOWZAURL, T2.NvrCamera_RTSPC");
            viewString.Append("ameraUrl, T2.NvrCamera_ObjectTrackingTime, T2.NvrCamera_PeopleCrowdThreashold, (");
            viewString.Append("T2._from0 AND T2._from0 IS NOT NULL) AS _from0, T1._from1\r\n        FROM  (\r\n    ");
            viewString.Append("        SELECT \r\n                T.DeviceId AS Device_DeviceId, \r\n              ");
            viewString.Append("  T.ExternalId AS Device_ExternalId, \r\n                T.Description AS Device_D");
            viewString.Append("escription, \r\n                T.Metadata AS Device_Metadata, \r\n                T");
            viewString.Append(".Type AS Device_Type, \r\n                T.Lat AS Device_Lat, \r\n                T");
            viewString.Append(".Long AS Device_Long, \r\n                T.Altitude AS Device_Altitude, \r\n       ");
            viewString.Append("         T.LocationDescription AS Device_LocationDescription, \r\n                ");
            viewString.Append("T.CameraGuid AS Device_CameraGuid, \r\n                T.NvrId AS Device_NvrId, \r\n");
            viewString.Append("                T.SiteId AS Device_SiteId, \r\n                T.ActiveAlert AS De");
            viewString.Append("vice_ActiveAlert, \r\n                T.HasPvAnalytics AS Device_HasPvAnalytics, \r");
            viewString.Append("\n                T.HasSzAnalytics AS Device_HasSzAnalytics, \r\n                T.");
            viewString.Append("HasAbAnalytics AS Device_HasAbAnalytics, \r\n                T.InterfaceId AS Devi");
            viewString.Append("ce_InterfaceId, \r\n                T.IsMovable AS Device_IsMovable, \r\n           ");
            viewString.Append("     T.Name AS Device_Name, \r\n                True AS _from1\r\n            FROM C");
            viewString.Append("entralDBModelStoreContainer.Device AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n ");
            viewString.Append("           SELECT \r\n                T.CameraId AS Device_DeviceId, \r\n           ");
            viewString.Append("     T.FPS AS NvrCamera_FPS, \r\n                T.AnalyticAlgorithmTypeId AS NvrC");
            viewString.Append("amera_AnalyticAlgorithmTypeId, \r\n                T.Version AS NvrCamera_Version,");
            viewString.Append(" \r\n                T.MaxBlobSize AS NvrCamera_MaxBlobSize, \r\n                T.M");
            viewString.Append("inBlobSize AS NvrCamera_MinBlobSize, \r\n                T.AlarmDelay AS NvrCamera");
            viewString.Append("_AlarmDelay, \r\n                T.UpdateRate AS NvrCamera_UpdateRate, \r\n         ");
            viewString.Append("       T.Width AS NvrCamera_Width, \r\n                T.Height AS NvrCamera_Heigh");
            viewString.Append("t, \r\n                T.ZoneRows AS NvrCamera_ZoneRows, \r\n                T.ZoneC");
            viewString.Append("olumns AS NvrCamera_ZoneColumns, \r\n                T.ZoneData AS NvrCamera_ZoneD");
            viewString.Append("ata, \r\n                T.AnalyticsEventTemplateId AS NvrCamera_AnalyticsEventTem");
            viewString.Append("plateId, \r\n                T.IsPtz AS NvrCamera_IsPtz, \r\n                T.Camer");
            viewString.Append("aIp AS NvrCamera_CameraIp, \r\n                T.LineStart AS NvrCamera_LineStart,");
            viewString.Append(" \r\n                T.LineEnd AS NvrCamera_LineEnd, \r\n                T.Direction");
            viewString.Append("Flag AS NvrCamera_DirectionFlag, \r\n                T.CameraUrl AS NvrCamera_Came");
            viewString.Append("raUrl, \r\n                T.CameraPort AS NvrCamera_CameraPort, \r\n               ");
            viewString.Append(" T.CamUser AS NvrCamera_CamUser, \r\n                T.CamPassword AS NvrCamera_Ca");
            viewString.Append("mPassword, \r\n                T.MaxBlobWidth AS NvrCamera_MaxBlobWidth, \r\n       ");
            viewString.Append("         T.MaxBlobHeight AS NvrCamera_MaxBlobHeight, \r\n                T.MinBlob");
            viewString.Append("Width AS NvrCamera_MinBlobWidth, \r\n                T.MinBlobHeight AS NvrCamera_");
            viewString.Append("MinBlobHeight, \r\n                T.CameraType AS NvrCamera_CameraType, \r\n       ");
            viewString.Append("         T.AnalyticsServerIp AS NvrCamera_AnalyticsServerIp, \r\n                T");
            viewString.Append(".Lane1 AS NvrCamera_Lane1, \r\n                T.Lane2 AS NvrCamera_Lane2, \r\n     ");
            viewString.Append("           T.Lane3 AS NvrCamera_Lane3, \r\n                T.NoOfLens AS NvrCamera");
            viewString.Append("_NoOfLens, \r\n                T.ChanelNo AS NvrCamera_ChanelNo, \r\n               ");
            viewString.Append(" T.IsEdgeAnalytics AS NvrCamera_IsEdgeAnalytics, \r\n                T.Mediaurl AS");
            viewString.Append(" NvrCamera_Mediaurl, \r\n                T.MediaType AS NvrCamera_MediaType, \r\n   ");
            viewString.Append("             T.WOWZAURL AS NvrCamera_WOWZAURL, \r\n                T.RTSPCameraUrl");
            viewString.Append(" AS NvrCamera_RTSPCameraUrl, \r\n                T.ObjectTrackingTime AS NvrCamera");
            viewString.Append("_ObjectTrackingTime, \r\n                T.PeopleCrowdThreashold AS NvrCamera_Peop");
            viewString.Append("leCrowdThreashold, \r\n                True AS _from0\r\n            FROM CentralDBM");
            viewString.Append("odelStoreContainer.NvrCamera AS T) AS T2\r\n            ON T1.Device_DeviceId = T2");
            viewString.Append(".Device_DeviceId\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Device", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.DevicesInZone
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DevicesInZone", @"
    SELECT VALUE -- Constructing DevicesInZone
        [CentralDBModel.DevicesInZone](T1.DevicesInZone_Id, T1.DevicesInZone_ZoneId, T1.DevicesInZone_DeviceId)
    FROM (
        SELECT 
            T.Id AS DevicesInZone_Id, 
            T.ZoneId AS DevicesInZone_ZoneId, 
            T.DeviceId AS DevicesInZone_DeviceId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DevicesInZone AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.DeviceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DeviceType", @"
    SELECT VALUE -- Constructing DeviceType
        [CentralDBModel.DeviceType](T1.DeviceType_Description)
    FROM (
        SELECT 
            T.Description AS DeviceType_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DeviceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Event
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Event", @"
    SELECT VALUE -- Constructing Event
        [CentralDBModel.Event](T1.Event_EventId, T1.Event_DeviceId, T1.Event_PanelAccountId, T1.Event_EventCode, T1.Event_TimeSent, T1.Event_ExternalMessage, T1.Event_AreaId, T1.Event_AlertId, T1.Event_FrameTypeCode, T1.Event_FrameId, T1.Event_Qualifier, T1.Event_ZoneCode, T1.Event_LineCode, T1.Event_DriverName, T1.Event_DriverPortNumber, T1.Event_EventDevID, T1.Event_ZoneSubsystem)
    FROM (
        SELECT 
            T.EventId AS Event_EventId, 
            T.DeviceId AS Event_DeviceId, 
            T.PanelAccountId AS Event_PanelAccountId, 
            T.EventCode AS Event_EventCode, 
            T.TimeSent AS Event_TimeSent, 
            T.ExternalMessage AS Event_ExternalMessage, 
            T.AreaId AS Event_AreaId, 
            T.AlertId AS Event_AlertId, 
            T.FrameTypeCode AS Event_FrameTypeCode, 
            T.FrameId AS Event_FrameId, 
            T.Qualifier AS Event_Qualifier, 
            T.ZoneCode AS Event_ZoneCode, 
            T.LineCode AS Event_LineCode, 
            T.DriverName AS Event_DriverName, 
            T.DriverPortNumber AS Event_DriverPortNumber, 
            T.EventDevID AS Event_EventDevID, 
            T.ZoneSubsystem AS Event_ZoneSubsystem, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Event AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Gender
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Gender", @"
    SELECT VALUE -- Constructing Gender
        [CentralDBModel.Gender](T1.Gender_GenderId, T1.Gender_GenderName)
    FROM (
        SELECT 
            T.GenderId AS Gender_GenderId, 
            T.GenderName AS Gender_GenderName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Gender AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.GeoBox
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.GeoBox", @"
    SELECT VALUE -- Constructing GeoBox
        [CentralDBModel.GeoBox](T1.GeoBox_objectId, T1.GeoBox_objectTypeId, T1.GeoBox_Lat, T1.GeoBox_Long, T1.GeoBox_Alt)
    FROM (
        SELECT 
            T.objectId AS GeoBox_objectId, 
            T.objectTypeId AS GeoBox_objectTypeId, 
            T.Lat AS GeoBox_Lat, 
            T.Long AS GeoBox_Long, 
            T.Alt AS GeoBox_Alt, 
            True AS _from0
        FROM CentralDBModelStoreContainer.GeoBox AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.IncidentReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.IncidentReport", @"
    SELECT VALUE -- Constructing IncidentReport
        [CentralDBModel.IncidentReport](T1.IncidentReport_IncidentReportId, T1.IncidentReport_CreateDate, T1.IncidentReport_Owner, T1.IncidentReport_Title, T1.IncidentReport_Comments)
    FROM (
        SELECT 
            T.IncidentReportId AS IncidentReport_IncidentReportId, 
            T.CreateDate AS IncidentReport_CreateDate, 
            T.Owner AS IncidentReport_Owner, 
            T.Title AS IncidentReport_Title, 
            T.Comments AS IncidentReport_Comments, 
            True AS _from0
        FROM CentralDBModelStoreContainer.IncidentReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.IncidentReportAlert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.IncidentReportAlert", @"
    SELECT VALUE -- Constructing IncidentReportAlert
        [CentralDBModel.IncidentReportAlert](T1.IncidentReportAlert_IncidentReportAlertsId, T1.IncidentReportAlert_IncidentReportId, T1.IncidentReportAlert_AlertId, T1.IncidentReportAlert_Sequence, T1.IncidentReportAlert_IncidentReportEvidence, T1.IncidentReportAlert_AttachedDateTime)
    FROM (
        SELECT 
            T.IncidentReportAlertsId AS IncidentReportAlert_IncidentReportAlertsId, 
            T.IncidentReportId AS IncidentReportAlert_IncidentReportId, 
            T.AlertId AS IncidentReportAlert_AlertId, 
            T.Sequence AS IncidentReportAlert_Sequence, 
            T.IncidentReportEvidence AS IncidentReportAlert_IncidentReportEvidence, 
            T.AttachedDateTime AS IncidentReportAlert_AttachedDateTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.IncidentReportAlert AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.IncidentReportCamera
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.IncidentReportCamera", @"
    SELECT VALUE -- Constructing IncidentReportCamera
        [CentralDBModel.IncidentReportCamera](T1.IncidentReportCamera_IncidentReportCamerasId, T1.IncidentReportCamera_IncidentReportId, T1.IncidentReportCamera_CameraId, T1.IncidentReportCamera_Sequence, T1.IncidentReportCamera_PlyDateTime, T1.IncidentReportCamera_AttachedDatime)
    FROM (
        SELECT 
            T.IncidentReportCamerasId AS IncidentReportCamera_IncidentReportCamerasId, 
            T.IncidentReportId AS IncidentReportCamera_IncidentReportId, 
            T.CameraId AS IncidentReportCamera_CameraId, 
            T.Sequence AS IncidentReportCamera_Sequence, 
            T.PlyDateTime AS IncidentReportCamera_PlyDateTime, 
            T.AttachedDatime AS IncidentReportCamera_AttachedDatime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.IncidentReportCamera AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.IncidentReportResource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.IncidentReportResource", @"
    SELECT VALUE -- Constructing IncidentReportResource
        [CentralDBModel.IncidentReportResource](T1.IncidentReportResource_IncidentReportResourceId, T1.IncidentReportResource_IncidentReportId, T1.IncidentReportResource_ResourceId, T1.IncidentReportResource_Appended)
    FROM (
        SELECT 
            T.IncidentReportResourceId AS IncidentReportResource_IncidentReportResourceId, 
            T.IncidentReportId AS IncidentReportResource_IncidentReportId, 
            T.ResourceId AS IncidentReportResource_ResourceId, 
            T.Appended AS IncidentReportResource_Appended, 
            True AS _from0
        FROM CentralDBModelStoreContainer.IncidentReportResource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.IncidentReportStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.IncidentReportStatus", @"
    SELECT VALUE -- Constructing IncidentReportStatus
        [CentralDBModel.IncidentReportStatus](T1.IncidentReportStatus_IncidentReportStatusId, T1.IncidentReportStatus_IncidentReportId, T1.IncidentReportStatus_ChangeDate, T1.IncidentReportStatus_Status, T1.IncidentReportStatus_Notes, T1.IncidentReportStatus_UpdatedBy, T1.IncidentReportStatus_AuthToken)
    FROM (
        SELECT 
            T.IncidentReportStatusId AS IncidentReportStatus_IncidentReportStatusId, 
            T.IncidentReportId AS IncidentReportStatus_IncidentReportId, 
            T.ChangeDate AS IncidentReportStatus_ChangeDate, 
            T.Status AS IncidentReportStatus_Status, 
            T.Notes AS IncidentReportStatus_Notes, 
            T.UpdatedBy AS IncidentReportStatus_UpdatedBy, 
            T.AuthToken AS IncidentReportStatus_AuthToken, 
            True AS _from0
        FROM CentralDBModelStoreContainer.IncidentReportStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Info
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Info", @"
    SELECT VALUE -- Constructing Info
        [CentralDBModel.Info](T1.Info_InfoId, T1.Info_AlertId, T1.Info_UrgencyId, T1.Info_Event, T1.Info_SeverityId, T1.Info_CertaintyId, T1.Info_Language, T1.Info_OnSet, T1.Info_Expires, T1.Info_Effective, T1.Info_Audience, T1.Info_SenderName, T1.Info_Headline, T1.Info_Description, T1.Info_Instruction, T1.Info_Web, T1.Info_Contact, T1.Info_EventCode, T1.Info_CloseAllContext)
    FROM (
        SELECT 
            T.InfoId AS Info_InfoId, 
            T.AlertId AS Info_AlertId, 
            T.UrgencyId AS Info_UrgencyId, 
            T.Event AS Info_Event, 
            T.SeverityId AS Info_SeverityId, 
            T.CertaintyId AS Info_CertaintyId, 
            T.Language AS Info_Language, 
            T.OnSet AS Info_OnSet, 
            T.Expires AS Info_Expires, 
            T.Effective AS Info_Effective, 
            T.Audience AS Info_Audience, 
            T.SenderName AS Info_SenderName, 
            T.Headline AS Info_Headline, 
            T.Description AS Info_Description, 
            T.Instruction AS Info_Instruction, 
            T.Web AS Info_Web, 
            T.Contact AS Info_Contact, 
            T.EventCode AS Info_EventCode, 
            T.CloseAllContext AS Info_CloseAllContext, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Info AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.InfoesCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.InfoesCategory", @"
    SELECT VALUE -- Constructing InfoesCategory
        [CentralDBModel.InfoesCategory](T1.InfoesCategory_Id, T1.InfoesCategory_InfoId, T1.InfoesCategory_CategoryId)
    FROM (
        SELECT 
            T.Id AS InfoesCategory_Id, 
            T.InfoId AS InfoesCategory_InfoId, 
            T.CategoryId AS InfoesCategory_CategoryId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.InfoesCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.InfoesResponseType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.InfoesResponseType", @"
    SELECT VALUE -- Constructing InfoesResponseType
        [CentralDBModel.InfoesResponseType](T1.InfoesResponseType_InfoId, T1.InfoesResponseType_ResponseType, T1.InfoesResponseType_Id)
    FROM (
        SELECT 
            T.InfoId AS InfoesResponseType_InfoId, 
            T.ResponseType AS InfoesResponseType_ResponseType, 
            T.Id AS InfoesResponseType_Id, 
            True AS _from0
        FROM CentralDBModelStoreContainer.InfoesResponseType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Interface
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2368);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Interface\r\n        CASE\r\n            WHEN NOT");
            viewString.Append("(T3._from1) THEN [CentralDBModel.Interface](T3.Interface_InterfaceId, T3.Interfa");
            viewString.Append("ce_AccountId, T3.Interface_InterfaceTypeId, T3.Interface_Name, T3.Interface_Desc");
            viewString.Append("ription) WITH \r\n                RELATIONSHIP(CREATEREF(Entities.Site, ROW(T3.[FK");
            viewString.Append("_Interface_Site.Site.SiteId]),[CentralDBModel.Site]),[CentralDBModel.FK_Interfac");
            viewString.Append("e_Site],Interface,Site) \r\n            ELSE [CentralDBModel.AlarmPanel](T3.Interf");
            viewString.Append("ace_InterfaceId, T3.Interface_AccountId, T3.Interface_InterfaceTypeId, T3.Interf");
            viewString.Append("ace_Name, T3.Interface_Description, T3.AlarmPanel_EventTypeTemplateId, T3.AlarmP");
            viewString.Append("anel_AlarmPanelTypeId, T3.AlarmPanel_InterfaceDeviceIP, T3.AlarmPanel_InterfaceD");
            viewString.Append("evicePort) WITH \r\n                RELATIONSHIP(CREATEREF(Entities.Site, ROW(T3.[");
            viewString.Append("FK_Interface_Site.Site.SiteId]),[CentralDBModel.Site]),[CentralDBModel.FK_Interf");
            viewString.Append("ace_Site],Interface,Site) \r\n        END\r\n    FROM (\r\n        SELECT T1.Interface");
            viewString.Append("_InterfaceId, T1.Interface_AccountId, T1.Interface_InterfaceTypeId, T1.Interface");
            viewString.Append("_Name, T1.Interface_Description, T2.AlarmPanel_EventTypeTemplateId, T2.AlarmPane");
            viewString.Append("l_AlarmPanelTypeId, T2.AlarmPanel_InterfaceDeviceIP, T2.AlarmPanel_InterfaceDevi");
            viewString.Append("cePort, T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, T1.[FK_Inter");
            viewString.Append("face_Site.Site.SiteId]\r\n        FROM  (\r\n            SELECT \r\n                T.");
            viewString.Append("InterfaceId AS Interface_InterfaceId, \r\n                T.AccountId AS Interface");
            viewString.Append("_AccountId, \r\n                T.InterfaceTypeId AS Interface_InterfaceTypeId, \r\n");
            viewString.Append("                T.Name AS Interface_Name, \r\n                T.Description AS Int");
            viewString.Append("erface_Description, \r\n                True AS _from0, \r\n                T.SiteId");
            viewString.Append(" AS [FK_Interface_Site.Site.SiteId]\r\n            FROM CentralDBModelStoreContain");
            viewString.Append("er.Interface AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n  ");
            viewString.Append("              T.AlarmPanelId AS Interface_InterfaceId, \r\n                T.Event");
            viewString.Append("TypeTemplateId AS AlarmPanel_EventTypeTemplateId, \r\n                T.AlarmPanel");
            viewString.Append("TypeId AS AlarmPanel_AlarmPanelTypeId, \r\n                T.InterfaceDeviceIP AS ");
            viewString.Append("AlarmPanel_InterfaceDeviceIP, \r\n                T.InterfaceDevicePort AS AlarmPa");
            viewString.Append("nel_InterfaceDevicePort, \r\n                True AS _from1\r\n            FROM Cent");
            viewString.Append("ralDBModelStoreContainer.AlarmPanel AS T) AS T2\r\n            ON T1.Interface_Int");
            viewString.Append("erfaceId = T2.Interface_InterfaceId\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Interface", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.InterfaceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.InterfaceType", @"
    SELECT VALUE -- Constructing InterfaceType
        [CentralDBModel.InterfaceType](T1.InterfaceType_InterfaceTypeId, T1.InterfaceType_Name)
    FROM (
        SELECT 
            T.InterfaceTypeId AS InterfaceType_InterfaceTypeId, 
            T.Name AS InterfaceType_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.InterfaceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.MessageType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.MessageType", @"
    SELECT VALUE -- Constructing MessageType
        [CentralDBModel.MessageType](T1.MessageType_Name)
    FROM (
        SELECT 
            T.Name AS MessageType_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.MessageType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Parameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Parameter", @"
    SELECT VALUE -- Constructing Parameter
        [CentralDBModel.Parameter](T1.Parameter_ParameterId, T1.Parameter_Name, T1.Parameter_Value, T1.Parameter_InfoId)
    FROM (
        SELECT 
            T.ParameterId AS Parameter_ParameterId, 
            T.Name AS Parameter_Name, 
            T.[Value] AS Parameter_Value, 
            T.InfoId AS Parameter_InfoId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Parameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Person
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Person", "\r\n    SELECT VALUE -- Constructing Person\r\n        [CentralDBModel.Person](T1.Per" +
                    "son_PersonId, T1.Person_Title, T1.Person_FirstName, T1.Person_NickName, T1.Perso" +
                    "n_MiddleName, T1.Person_LastName, T1.Person_Suffix, T1.Person_FullName, T1.Perso" +
                    "n_BirthDate, T1.Person_AgeRange, T1.Person_Ethnicity, T1.Person_Description, T1." +
                    "Person_GenderCode, T1.Person_EducationCode, T1.Person_ExternalIdentifier, T1.Per" +
                    "son_Portrait, T1.Person_CreatedOn, T1.Person_CreatedBy, T1.Person_ModifiedOn, T1" +
                    ".Person_ModifiedBy, T1.Person_AccountId, T1.Person_JobTitle, T1.Person_Password," +
                    " T1.Person_PrimaryAccountAdministratorPassword)\r\n    FROM (\r\n        SELECT \r\n  " +
                    "          T.PersonId AS Person_PersonId, \r\n            T.Title AS Person_Title, " +
                    "\r\n            T.FirstName AS Person_FirstName, \r\n            T.NickName AS Perso" +
                    "n_NickName, \r\n            T.MiddleName AS Person_MiddleName, \r\n            T.Las" +
                    "tName AS Person_LastName, \r\n            T.Suffix AS Person_Suffix, \r\n           " +
                    " T.FullName AS Person_FullName, \r\n            T.BirthDate AS Person_BirthDate, \r" +
                    "\n            T.AgeRange AS Person_AgeRange, \r\n            T.Ethnicity AS Person_" +
                    "Ethnicity, \r\n            T.Description AS Person_Description, \r\n            T.Ge" +
                    "nderCode AS Person_GenderCode, \r\n            T.EducationCode AS Person_Education" +
                    "Code, \r\n            T.ExternalIdentifier AS Person_ExternalIdentifier, \r\n       " +
                    "     T.Portrait AS Person_Portrait, \r\n            T.CreatedOn AS Person_CreatedO" +
                    "n, \r\n            T.CreatedBy AS Person_CreatedBy, \r\n            T.ModifiedOn AS " +
                    "Person_ModifiedOn, \r\n            T.ModifiedBy AS Person_ModifiedBy, \r\n          " +
                    "  T.AccountId AS Person_AccountId, \r\n            T.JobTitle AS Person_JobTitle, " +
                    "\r\n            T.Password AS Person_Password, \r\n            T.PrimaryAccountAdmin" +
                    "istratorPassword AS Person_PrimaryAccountAdministratorPassword, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM CentralDBModelStoreContainer.Person AS T\r\n    ) AS T1" +
                    "");
        }
        
        /// <Summary>
        /// return view for Entities.Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Resource", @"
    SELECT VALUE -- Constructing Resource
        [CentralDBModel.Resource](T1.Resource_ResourceId, T1.Resource_Description, T1.Resource_MimeType, T1.Resource_Size, T1.Resource_Uri, T1.Resource_DerefUri, T1.Resource_Digest, T1.Resource_InfoId)
    FROM (
        SELECT 
            T.ResourceId AS Resource_ResourceId, 
            T.Description AS Resource_Description, 
            T.MimeType AS Resource_MimeType, 
            T.Size AS Resource_Size, 
            T.Uri AS Resource_Uri, 
            T.DerefUri AS Resource_DerefUri, 
            T.Digest AS Resource_Digest, 
            T.InfoId AS Resource_InfoId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Resource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ResourcesData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ResourcesData", @"
    SELECT VALUE -- Constructing ResourcesData
        [CentralDBModel.ResourcesData](T1.ResourcesData_Id, T1.ResourcesData_Data, T1.ResourcesData_EvidenceType, T1.ResourcesData_FileName)
    FROM (
        SELECT 
            T.Id AS ResourcesData_Id, 
            T.Data AS ResourcesData_Data, 
            T.EvidenceType AS ResourcesData_EvidenceType, 
            T.FileName AS ResourcesData_FileName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ResourcesData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ResponseType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ResponseType", @"
    SELECT VALUE -- Constructing ResponseType
        [CentralDBModel.ResponseType](T1.ResponseType_Name)
    FROM (
        SELECT 
            T.Name AS ResponseType_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ResponseType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Scope
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Scope", "\r\n    SELECT VALUE -- Constructing Scope\r\n        [CentralDBModel.Scope](T1.Scope" +
                    "_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Scope_Name, \r\n       " +
                    "     True AS _from0\r\n        FROM CentralDBModelStoreContainer.Scope AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ServicePackage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ServicePackage", @"
    SELECT VALUE -- Constructing ServicePackage
        [CentralDBModel.ServicePackage](T1.ServicePackage_ServicePackageId, T1.ServicePackage_Name, T1.ServicePackage_PackagePrice)
    FROM (
        SELECT 
            T.ServicePackageId AS ServicePackage_ServicePackageId, 
            T.Name AS ServicePackage_Name, 
            T.PackagePrice AS ServicePackage_PackagePrice, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ServicePackage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Severity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Severity", @"
    SELECT VALUE -- Constructing Severity
        [CentralDBModel.Severity](T1.Severity_Name)
    FROM (
        SELECT 
            T.Name AS Severity_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Severity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Site
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Site", @"
    SELECT VALUE -- Constructing Site
        [CentralDBModel.Site](T1.Site_SiteId, T1.Site_ParentId, T1.Site_AccountId, T1.Site_Name, T1.Site_Description, T1.Site_Lat, T1.Site_Long, T1.Site_Alt, T1.Site_Map, T1.Site_Pin, T1.Site_MapUrl, T1.Site_PinUrl, T1.Site_siteTypeId, T1.Site_Icon, T1.Site_AddressId, T1.Site_ExternalIdentifier, T1.Site_BBox, T1.Site_PLat, T1.Site_PLong, T1.Site_PAlt, T1.Site_ZoomLevel, T1.Site_IsBingMap)
    FROM (
        SELECT 
            T.SiteId AS Site_SiteId, 
            T.ParentId AS Site_ParentId, 
            T.AccountId AS Site_AccountId, 
            T.Name AS Site_Name, 
            T.Description AS Site_Description, 
            T.Lat AS Site_Lat, 
            T.Long AS Site_Long, 
            T.Alt AS Site_Alt, 
            T.Map AS Site_Map, 
            T.Pin AS Site_Pin, 
            T.MapUrl AS Site_MapUrl, 
            T.PinUrl AS Site_PinUrl, 
            T.siteTypeId AS Site_siteTypeId, 
            T.Icon AS Site_Icon, 
            T.AddressId AS Site_AddressId, 
            T.ExternalIdentifier AS Site_ExternalIdentifier, 
            T.BBox AS Site_BBox, 
            T.PLat AS Site_PLat, 
            T.PLong AS Site_PLong, 
            T.PAlt AS Site_PAlt, 
            T.ZoomLevel AS Site_ZoomLevel, 
            T.IsBingMap AS Site_IsBingMap, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Site AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.SiteType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.SiteType", @"
    SELECT VALUE -- Constructing SiteType
        [CentralDBModel.SiteType](T1.SiteType_siteTypeId, T1.SiteType_siteTypeName, T1.SiteType_Description, T1.SiteType_Icon, T1.SiteType_HierarchyLevel)
    FROM (
        SELECT 
            T.siteTypeId AS SiteType_siteTypeId, 
            T.siteTypeName AS SiteType_siteTypeName, 
            T.Description AS SiteType_Description, 
            T.Icon AS SiteType_Icon, 
            T.HierarchyLevel AS SiteType_HierarchyLevel, 
            True AS _from0
        FROM CentralDBModelStoreContainer.SiteType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Status", "\r\n    SELECT VALUE -- Constructing Status\r\n        [CentralDBModel.Status](T1.Sta" +
                    "tus_Name)\r\n    FROM (\r\n        SELECT \r\n            T.Name AS Status_Name, \r\n   " +
                    "         True AS _from0\r\n        FROM CentralDBModelStoreContainer.Status AS T\r\n" +
                    "    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Urgency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Urgency", @"
    SELECT VALUE -- Constructing Urgency
        [CentralDBModel.Urgency](T1.Urgency_Name)
    FROM (
        SELECT 
            T.Name AS Urgency_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Urgency AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.User", @"
    SELECT VALUE -- Constructing User
        [CentralDBModel.User](T1.User_UserId, T1.User_UserSid, T1.User_UserTypeId, T1.User_PersonId, T1.User_StatusCode, T1.User_MembershipUserId)
    FROM (
        SELECT 
            T.UserId AS User_UserId, 
            T.UserSid AS User_UserSid, 
            T.UserTypeId AS User_UserTypeId, 
            T.PersonId AS User_PersonId, 
            T.StatusCode AS User_StatusCode, 
            T.MembershipUserId AS User_MembershipUserId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.UserType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.UserType", @"
    SELECT VALUE -- Constructing UserType
        [CentralDBModel.UserType](T1.UserType_UserTypeId, T1.UserType_UserTypeName)
    FROM (
        SELECT 
            T.UserTypeId AS UserType_UserTypeId, 
            T.UserTypeName AS UserType_UserTypeName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.UserType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Zone
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Zone", @"
    SELECT VALUE -- Constructing Zone
        [CentralDBModel.Zone](T1.Zone_ZoneId, T1.Zone_Name, T1.Zone_Description, T1.Zone_Metadata)
    FROM (
        SELECT 
            T.ZoneId AS Zone_ZoneId, 
            T.Name AS Zone_Name, 
            T.Description AS Zone_Description, 
            T.Metadata AS Zone_Metadata, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Zone AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ZoneGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ZoneGroup", @"
    SELECT VALUE -- Constructing ZoneGroup
        [CentralDBModel.ZoneGroup](T1.ZoneGroup_ZoneGroupId, T1.ZoneGroup_ParenZoneId, T1.ZoneGroup_ZoneId)
    FROM (
        SELECT 
            T.ZoneGroupId AS ZoneGroup_ZoneGroupId, 
            T.ParenZoneId AS ZoneGroup_ParenZoneId, 
            T.ZoneId AS ZoneGroup_ZoneId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ZoneGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ZoneLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ZoneLocation", @"
    SELECT VALUE -- Constructing ZoneLocation
        [CentralDBModel.ZoneLocation](T1.ZoneLocation_LocationId, T1.ZoneLocation_ZoneId, T1.ZoneLocation_Lat, T1.ZoneLocation_Long)
    FROM (
        SELECT 
            T.LocationId AS ZoneLocation_LocationId, 
            T.ZoneId AS ZoneLocation_ZoneId, 
            T.Lat AS ZoneLocation_Lat, 
            T.Long AS ZoneLocation_Long, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ZoneLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ZoneUser
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ZoneUser", @"
    SELECT VALUE -- Constructing ZoneUser
        [CentralDBModel.ZoneUser](T1.ZoneUser_ZoneUserId, T1.ZoneUser_ZoneId, T1.ZoneUser_Username)
    FROM (
        SELECT 
            T.ZoneUserId AS ZoneUser_ZoneUserId, 
            T.ZoneId AS ZoneUser_ZoneId, 
            T.Username AS ZoneUser_Username, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ZoneUser AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventCode", @"
    SELECT VALUE -- Constructing EventCode
        [CentralDBModel.EventCode](T1.EventCode_EventCode1, T1.EventCode_EventAssociated, T1.EventCode_EventGroupId)
    FROM (
        SELECT 
            T.EventCode AS EventCode_EventCode1, 
            T.EventAssociated AS EventCode_EventAssociated, 
            T.EventGroupId AS EventCode_EventGroupId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.EventCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventGroup", @"
    SELECT VALUE -- Constructing EventGroup
        [CentralDBModel.EventGroup](T1.EventGroup_EventGroupId, T1.EventGroup_EventCodeMin, T1.EventGroup_EventCodeMax, T1.EventGroup_EventCodeGroupDescription)
    FROM (
        SELECT 
            T.EventGroupId AS EventGroup_EventGroupId, 
            T.EventCodeMin AS EventGroup_EventCodeMin, 
            T.EventCodeMax AS EventGroup_EventCodeMax, 
            T.EventCodeGroupDescription AS EventGroup_EventCodeGroupDescription, 
            True AS _from0
        FROM CentralDBModelStoreContainer.EventGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventQualifier
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventQualifier", @"
    SELECT VALUE -- Constructing EventQualifier
        [CentralDBModel.EventQualifier](T1.EventQualifier_EventQualifierId, T1.EventQualifier_EventQualifierDescription)
    FROM (
        SELECT 
            T.EventQualifierId AS EventQualifier_EventQualifierId, 
            T.EventQualifierDescription AS EventQualifier_EventQualifierDescription, 
            True AS _from0
        FROM CentralDBModelStoreContainer.EventQualifier AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventTypeTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventTypeTemplate", @"
    SELECT VALUE -- Constructing EventTypeTemplate
        [CentralDBModel.EventTypeTemplate](T1.EventTypeTemplate_EventTypeTemplateId, T1.EventTypeTemplate_EventTemplateName, T1.EventTypeTemplate_ExternalId, T1.EventTypeTemplate_Discriminator)
    FROM (
        SELECT 
            T.EventTypeTemplateId AS EventTypeTemplate_EventTypeTemplateId, 
            T.EventTemplateName AS EventTypeTemplate_EventTemplateName, 
            T.ExternalId AS EventTypeTemplate_ExternalId, 
            T.Discriminator AS EventTypeTemplate_Discriminator, 
            True AS _from0
        FROM CentralDBModelStoreContainer.EventTypeTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventTemplate", "\r\n    SELECT VALUE -- Constructing EventTemplate\r\n        [CentralDBModel.EventTe" +
                    "mplate](T1.EventTemplate_EventTemplateId, T1.EventTemplate_EventTypeTeplateId, T" +
                    "1.EventTemplate_EventCodeId, T1.EventTemplate_EventQualifierId, T1.EventTemplate" +
                    "_Headline, T1.EventTemplate_EventType, T1.EventTemplate_MessageType, T1.EventTem" +
                    "plate_Status, T1.EventTemplate_Category, T1.EventTemplate_Urgency, T1.EventTempl" +
                    "ate_Severity, T1.EventTemplate_Certainty, T1.EventTemplate_ResponseType, T1.Even" +
                    "tTemplate_Description, T1.EventTemplate_Instruction, T1.EventTemplate_Scope)\r\n  " +
                    "  FROM (\r\n        SELECT \r\n            T.EventTemplateId AS EventTemplate_EventT" +
                    "emplateId, \r\n            T.EventTypeTeplateId AS EventTemplate_EventTypeTeplateI" +
                    "d, \r\n            T.EventCodeId AS EventTemplate_EventCodeId, \r\n            T.Eve" +
                    "ntQualifierId AS EventTemplate_EventQualifierId, \r\n            T.Headline AS Eve" +
                    "ntTemplate_Headline, \r\n            T.EventType AS EventTemplate_EventType, \r\n   " +
                    "         T.MessageType AS EventTemplate_MessageType, \r\n            T.Status AS E" +
                    "ventTemplate_Status, \r\n            T.Category AS EventTemplate_Category, \r\n     " +
                    "       T.Urgency AS EventTemplate_Urgency, \r\n            T.Severity AS EventTemp" +
                    "late_Severity, \r\n            T.Certainty AS EventTemplate_Certainty, \r\n         " +
                    "   T.ResponseType AS EventTemplate_ResponseType, \r\n            T.Description AS " +
                    "EventTemplate_Description, \r\n            T.Instruction AS EventTemplate_Instruct" +
                    "ion, \r\n            T.Scope AS EventTemplate_Scope, \r\n            True AS _from0\r" +
                    "\n        FROM CentralDBModelStoreContainer.EventTemplate AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventFieldDefinition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventFieldDefinition", @"
    SELECT VALUE -- Constructing EventFieldDefinition
        [CentralDBModel.EventFieldDefinition](T1.EventFieldDefinition_EventFieldId, T1.EventFieldDefinition_FieldName, T1.EventFieldDefinition_StartByte, T1.EventFieldDefinition_NumberOfBytes) WITH 
        RELATIONSHIP(CREATEREF(Entities.EventTypeTemplate, ROW(T1.[FK_EventFieldDefinition_EventTypeTemplate.EventTypeTemplate.EventTypeTemplateId]),[CentralDBModel.EventTypeTemplate]),[CentralDBModel.FK_EventFieldDefinition_EventTypeTemplate],EventFieldDefinition,EventTypeTemplate) 
        RELATIONSHIP(CREATEREF(Entities.EventFieldType, ROW(T1.[FK_EventFieldDefinition_FieldType.EventFieldType.FieldTypeId]),[CentralDBModel.EventFieldType]),[CentralDBModel.FK_EventFieldDefinition_FieldType],EventFieldDefinition,EventFieldType) 
    FROM (
        SELECT 
            T.EventFieldId AS EventFieldDefinition_EventFieldId, 
            T.FieldName AS EventFieldDefinition_FieldName, 
            T.StartByte AS EventFieldDefinition_StartByte, 
            T.NumberOfBytes AS EventFieldDefinition_NumberOfBytes, 
            True AS _from0, 
            T.EventTypeId AS [FK_EventFieldDefinition_EventTypeTemplate.EventTypeTemplate.EventTypeTemplateId], 
            T.FieldTypeId AS [FK_EventFieldDefinition_FieldType.EventFieldType.FieldTypeId]
        FROM CentralDBModelStoreContainer.EventFieldDefinition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.EventFieldType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.EventFieldType", @"
    SELECT VALUE -- Constructing EventFieldType
        [CentralDBModel.EventFieldType](T1.EventFieldType_FieldTypeId, T1.EventFieldType_Name, T1.EventFieldType_Format)
    FROM (
        SELECT 
            T.FieldTypeId AS EventFieldType_FieldTypeId, 
            T.Name AS EventFieldType_Name, 
            T.Format AS EventFieldType_Format, 
            True AS _from0
        FROM CentralDBModelStoreContainer.EventFieldType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AlertType", @"
    SELECT VALUE -- Constructing AlertType
        [CentralDBModel.AlertType](T1.AlertType_AlertTypeId, T1.AlertType_Name, T1.AlertType_Description)
    FROM (
        SELECT 
            T.AlertTypeId AS AlertType_AlertTypeId, 
            T.Name AS AlertType_Name, 
            T.Description AS AlertType_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.DeviceExternalIdDefinition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DeviceExternalIdDefinition", @"
    SELECT VALUE -- Constructing DeviceExternalIdDefinition
        [CentralDBModel.DeviceExternalIdDefinition](T1.DeviceExternalIdDefinition_EventFieldId, T1.DeviceExternalIdDefinition_order, T1.DeviceExternalIdDefinition_InterfaceId)
    FROM (
        SELECT 
            T.EventFieldId AS DeviceExternalIdDefinition_EventFieldId, 
            T.[order] AS DeviceExternalIdDefinition_order, 
            T.InterfaceId AS DeviceExternalIdDefinition_InterfaceId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DeviceExternalIdDefinition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AnalyticAlgorithmType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AnalyticAlgorithmType", @"
    SELECT VALUE -- Constructing AnalyticAlgorithmType
        [CentralDBModel.AnalyticAlgorithmType](T1.AnalyticAlgorithmType_AnalyticAlgorithmId, T1.AnalyticAlgorithmType_Name)
    FROM (
        SELECT 
            T.AnalyticAlgorithmId AS AnalyticAlgorithmType_AnalyticAlgorithmId, 
            T.Name AS AnalyticAlgorithmType_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AnalyticAlgorithmType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountBilling
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountBilling", @"
    SELECT VALUE -- Constructing AccountBilling
        [CentralDBModel.AccountBilling](T1.AccountBilling_AccountBillingId, T1.AccountBilling_PaymentMethodId, T1.AccountBilling_AddressId)
    FROM (
        SELECT 
            T.AccountBillingId AS AccountBilling_AccountBillingId, 
            T.PaymentMethodId AS AccountBilling_PaymentMethodId, 
            T.AddressId AS AccountBilling_AddressId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AccountBilling AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ContactMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ContactMethod", @"
    SELECT VALUE -- Constructing ContactMethod
        [CentralDBModel.ContactMethod](T1.ContactMethod_ContactMethodId, T1.ContactMethod_Name)
    FROM (
        SELECT 
            T.ContactMethodId AS ContactMethod_ContactMethodId, 
            T.Name AS ContactMethod_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ContactMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.PaymentMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.PaymentMethod", @"
    SELECT VALUE -- Constructing PaymentMethod
        [CentralDBModel.PaymentMethod](T1.PaymentMethod_PaymentMethodId, T1.PaymentMethod_Name)
    FROM (
        SELECT 
            T.PaymentMethodId AS PaymentMethod_PaymentMethodId, 
            T.Name AS PaymentMethod_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.PaymentMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.PersonContactType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.PersonContactType", @"
    SELECT VALUE -- Constructing PersonContactType
        [CentralDBModel.PersonContactType](T1.PersonContactType_PersonContactTypeId, T1.PersonContactType_PersonId, T1.PersonContactType_ContactTypeId)
    FROM (
        SELECT 
            T.PersonContactTypeId AS PersonContactType_PersonContactTypeId, 
            T.PersonId AS PersonContactType_PersonId, 
            T.ContactTypeId AS PersonContactType_ContactTypeId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.PersonContactType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.PreferedContatMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.PreferedContatMethod", @"
    SELECT VALUE -- Constructing PreferedContatMethod
        [CentralDBModel.PreferedContatMethod](T1.PreferedContatMethod_PreferedContacMethodtId, T1.PreferedContatMethod_ContactId, T1.PreferedContatMethod_ContactMethodId)
    FROM (
        SELECT 
            T.PreferedContacMethodtId AS PreferedContatMethod_PreferedContacMethodtId, 
            T.ContactId AS PreferedContatMethod_ContactId, 
            T.ContactMethodId AS PreferedContatMethod_ContactMethodId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.PreferedContatMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountAlarmPanel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountAlarmPanel", @"
    SELECT VALUE -- Constructing AccountAlarmPanel
        [CentralDBModel.AccountAlarmPanel](T1.AccountAlarmPanel_AccountAlarmPanelId, T1.AccountAlarmPanel_AccountId, T1.AccountAlarmPanel_EventGroupId)
    FROM (
        SELECT 
            T.AccountAlarmPanelId AS AccountAlarmPanel_AccountAlarmPanelId, 
            T.AccountId AS AccountAlarmPanel_AccountId, 
            T.EventGroupId AS AccountAlarmPanel_EventGroupId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AccountAlarmPanel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountAnalyticsAlgorithmType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountAnalyticsAlgorithmType", @"
    SELECT VALUE -- Constructing AccountAnalyticsAlgorithmType
        [CentralDBModel.AccountAnalyticsAlgorithmType](T1.AccountAnalyticsAlgorithmType_AccountAnalyticsAlgorithmTypeId, T1.AccountAnalyticsAlgorithmType_AccountId, T1.AccountAnalyticsAlgorithmType_AnalyticsAlgorithTypeId)
    FROM (
        SELECT 
            T.AccountAnalyticsAlgorithmTypeId AS AccountAnalyticsAlgorithmType_AccountAnalyticsAlgorithmTypeId, 
            T.AccountId AS AccountAnalyticsAlgorithmType_AccountId, 
            T.AnalyticsAlgorithTypeId AS AccountAnalyticsAlgorithmType_AnalyticsAlgorithTypeId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AccountAnalyticsAlgorithmType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountNvrAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountNvrAlertType", @"
    SELECT VALUE -- Constructing AccountNvrAlertType
        [CentralDBModel.AccountNvrAlertType](T1.AccountNvrAlertType_AccountNvrAlertTypeId, T1.AccountNvrAlertType_AccountId, T1.AccountNvrAlertType_NvrAlertTypeId)
    FROM (
        SELECT 
            T.AccountNvrAlertTypeId AS AccountNvrAlertType_AccountNvrAlertTypeId, 
            T.AccountId AS AccountNvrAlertType_AccountId, 
            T.NvrAlertTypeId AS AccountNvrAlertType_NvrAlertTypeId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AccountNvrAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.NvrAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView146()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.NvrAlertType", @"
    SELECT VALUE -- Constructing NvrAlertType
        [CentralDBModel.NvrAlertType](T1.NvrAlertType_NvrAlertTypeId, T1.NvrAlertType_Name)
    FROM (
        SELECT 
            T.NvrAlertTypeId AS NvrAlertType_NvrAlertTypeId, 
            T.Name AS NvrAlertType_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.NvrAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AnalyticsEventTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView147()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AnalyticsEventTemplate", "\r\n    SELECT VALUE -- Constructing AnalyticsEventTemplate\r\n        [CentralDBMode" +
                    "l.AnalyticsEventTemplate](T1.AnalyticsEventTemplate_AnalyticsEventTemplateId, T1" +
                    ".AnalyticsEventTemplate_EventTypeTeplateId, T1.AnalyticsEventTemplate_Name, T1.A" +
                    "nalyticsEventTemplate_Headline, T1.AnalyticsEventTemplate_EventType, T1.Analytic" +
                    "sEventTemplate_MessageType, T1.AnalyticsEventTemplate_Status, T1.AnalyticsEventT" +
                    "emplate_Category, T1.AnalyticsEventTemplate_Urgency, T1.AnalyticsEventTemplate_S" +
                    "everity, T1.AnalyticsEventTemplate_Certainty, T1.AnalyticsEventTemplate_Response" +
                    "Type, T1.AnalyticsEventTemplate_Description, T1.AnalyticsEventTemplate_Instructi" +
                    "on, T1.AnalyticsEventTemplate_Scope, T1.AnalyticsEventTemplate_AnalyticAlgorithm" +
                    "TypeId)\r\n    FROM (\r\n        SELECT \r\n            T.AnalyticsEventTemplateId AS " +
                    "AnalyticsEventTemplate_AnalyticsEventTemplateId, \r\n            T.EventTypeTeplat" +
                    "eId AS AnalyticsEventTemplate_EventTypeTeplateId, \r\n            T.Name AS Analyt" +
                    "icsEventTemplate_Name, \r\n            T.Headline AS AnalyticsEventTemplate_Headli" +
                    "ne, \r\n            T.EventType AS AnalyticsEventTemplate_EventType, \r\n           " +
                    " T.MessageType AS AnalyticsEventTemplate_MessageType, \r\n            T.Status AS " +
                    "AnalyticsEventTemplate_Status, \r\n            T.Category AS AnalyticsEventTemplat" +
                    "e_Category, \r\n            T.Urgency AS AnalyticsEventTemplate_Urgency, \r\n       " +
                    "     T.Severity AS AnalyticsEventTemplate_Severity, \r\n            T.Certainty AS" +
                    " AnalyticsEventTemplate_Certainty, \r\n            T.ResponseType AS AnalyticsEven" +
                    "tTemplate_ResponseType, \r\n            T.Description AS AnalyticsEventTemplate_De" +
                    "scription, \r\n            T.Instruction AS AnalyticsEventTemplate_Instruction, \r\n" +
                    "            T.Scope AS AnalyticsEventTemplate_Scope, \r\n            T.AnalyticAlg" +
                    "orithmTypeId AS AnalyticsEventTemplate_AnalyticAlgorithmTypeId, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM CentralDBModelStoreContainer.AnalyticsEventTemplate A" +
                    "S T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.VideoAanalyticsEvent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.VideoAanalyticsEvent", @"
    SELECT VALUE -- Constructing VideoAanalyticsEvent
        [CentralDBModel.VideoAanalyticsEvent](T1.VideoAanalyticsEvent_VideoAanalyticsEventId, T1.VideoAanalyticsEvent_CameraGuid, T1.VideoAanalyticsEvent_ObjectId, T1.VideoAanalyticsEvent_Height, T1.VideoAanalyticsEvent_Width, T1.VideoAanalyticsEvent_CenterX, T1.VideoAanalyticsEvent_CenterY, T1.VideoAanalyticsEvent_SentTime, T1.VideoAanalyticsEvent_IsInZone, T1.VideoAanalyticsEvent_AlarmLevel, T1.VideoAanalyticsEvent_AlgorithmName, T1.VideoAanalyticsEvent_AlertId)
    FROM (
        SELECT 
            T.VideoAanalyticsEventId AS VideoAanalyticsEvent_VideoAanalyticsEventId, 
            T.CameraGuid AS VideoAanalyticsEvent_CameraGuid, 
            T.ObjectId AS VideoAanalyticsEvent_ObjectId, 
            T.Height AS VideoAanalyticsEvent_Height, 
            T.Width AS VideoAanalyticsEvent_Width, 
            T.CenterX AS VideoAanalyticsEvent_CenterX, 
            T.CenterY AS VideoAanalyticsEvent_CenterY, 
            T.SentTime AS VideoAanalyticsEvent_SentTime, 
            T.IsInZone AS VideoAanalyticsEvent_IsInZone, 
            T.AlarmLevel AS VideoAanalyticsEvent_AlarmLevel, 
            T.AlgorithmName AS VideoAanalyticsEvent_AlgorithmName, 
            T.AlertId AS VideoAanalyticsEvent_AlertId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.VideoAanalyticsEvent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.IncidentReportReference
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView149()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.IncidentReportReference", @"
    SELECT VALUE -- Constructing IncidentReportReference
        [CentralDBModel.IncidentReportReference](T1.IncidentReportReference_IncidentReportReportsId, T1.IncidentReportReference_IncidentReportId, T1.IncidentReportReference_IncidentReportReferenceId, T1.IncidentReportReference_Sequence, T1.IncidentReportReference_AttachDateTime)
    FROM (
        SELECT 
            T.IncidentReportReportsId AS IncidentReportReference_IncidentReportReportsId, 
            T.IncidentReportId AS IncidentReportReference_IncidentReportId, 
            T.IncidentReportReferenceId AS IncidentReportReference_IncidentReportReferenceId, 
            T.Sequence AS IncidentReportReference_Sequence, 
            T.AttachDateTime AS IncidentReportReference_AttachDateTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.IncidentReportReference AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.UsersGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.UsersGroup", @"
    SELECT VALUE -- Constructing UsersGroup
        [CentralDBModel.UsersGroup](T1.UsersGroup_Id, T1.UsersGroup_Name, T1.UsersGroup_Parent)
    FROM (
        SELECT 
            T.Id AS UsersGroup_Id, 
            T.Name AS UsersGroup_Name, 
            T.Parent AS UsersGroup_Parent, 
            True AS _from0
        FROM CentralDBModelStoreContainer.security_UsersGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.MembershipUser
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView151()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.MembershipUser", @"
    SELECT VALUE -- Constructing MembershipUser
        [CentralDBModel.MUser](T1.MUser_ApplicationId, T1.MUser_UserId, T1.MUser_UserName, T1.MUser_LoweredUserName, T1.MUser_MobileAlias, T1.MUser_IsAnonymous, T1.MUser_LastActivityDate)
    FROM (
        SELECT 
            T.ApplicationId AS MUser_ApplicationId, 
            T.UserId AS MUser_UserId, 
            T.UserName AS MUser_UserName, 
            T.LoweredUserName AS MUser_LoweredUserName, 
            T.MobileAlias AS MUser_MobileAlias, 
            T.IsAnonymous AS MUser_IsAnonymous, 
            T.LastActivityDate AS MUser_LastActivityDate, 
            True AS _from0
        FROM CentralDBModelStoreContainer.aspnet_Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tbpeoplecounter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tbpeoplecounter", @"
    SELECT VALUE -- Constructing tbpeoplecounter
        [CentralDBModel.tbpeoplecounter](T1.tbpeoplecounter_ID, T1.tbpeoplecounter_DeviceID, T1.tbpeoplecounter_EventDate, T1.tbpeoplecounter_EventCount)
    FROM (
        SELECT 
            T.ID AS tbpeoplecounter_ID, 
            T.DeviceID AS tbpeoplecounter_DeviceID, 
            T.EventDate AS tbpeoplecounter_EventDate, 
            T.EventCount AS tbpeoplecounter_EventCount, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tbpeoplecounter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.BioAlerts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView153()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.BioAlerts", "\r\n    SELECT VALUE -- Constructing BioAlerts\r\n        [CentralDBModel.BioAlerts](" +
                    "T1.BioAlerts_BioAlertID, T1.BioAlerts_Type, T1.BioAlerts_TimeStamp, T1.BioAlerts" +
                    "_CameraId, T1.BioAlerts_Quality, T1.BioAlerts_Score, T1.BioAlerts_FrameImage, T1" +
                    ".BioAlerts_FrameIndex, T1.BioAlerts_FaceSize, T1.BioAlerts_FacePosition, T1.BioA" +
                    "lerts_SubjectFaceImage, T1.BioAlerts_SubjectModelImage, T1.BioAlerts_SubjectId, " +
                    "T1.BioAlerts_SubjectCode, T1.BioAlerts_SubjectName, T1.BioAlerts_SubjectLastName" +
                    ", T1.BioAlerts_alertID)\r\n    FROM (\r\n        SELECT \r\n            T.BioAlertID A" +
                    "S BioAlerts_BioAlertID, \r\n            T.Type AS BioAlerts_Type, \r\n            T." +
                    "TimeStamp AS BioAlerts_TimeStamp, \r\n            T.CameraId AS BioAlerts_CameraId" +
                    ", \r\n            T.Quality AS BioAlerts_Quality, \r\n            T.Score AS BioAler" +
                    "ts_Score, \r\n            T.FrameImage AS BioAlerts_FrameImage, \r\n            T.Fr" +
                    "ameIndex AS BioAlerts_FrameIndex, \r\n            T.FaceSize AS BioAlerts_FaceSize" +
                    ", \r\n            T.FacePosition AS BioAlerts_FacePosition, \r\n            T.Subjec" +
                    "tFaceImage AS BioAlerts_SubjectFaceImage, \r\n            T.SubjectModelImage AS B" +
                    "ioAlerts_SubjectModelImage, \r\n            T.SubjectId AS BioAlerts_SubjectId, \r\n" +
                    "            T.SubjectCode AS BioAlerts_SubjectCode, \r\n            T.SubjectName " +
                    "AS BioAlerts_SubjectName, \r\n            T.SubjectLastName AS BioAlerts_SubjectLa" +
                    "stName, \r\n            T.alertID AS BioAlerts_alertID, \r\n            True AS _fro" +
                    "m0\r\n        FROM CentralDBModelStoreContainer.BioAlerts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.SubMember
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView154()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.SubMember", @"
    SELECT VALUE -- Constructing SubMember
        [CentralDBModel.SubMember](T1.SubMember_MemID, T1.SubMember_AccountNumber, T1.SubMember_Name, T1.SubMember_Mobile, T1.SubMember_Photo, T1.SubMember_DeviceID)
    FROM (
        SELECT 
            T.MemID AS SubMember_MemID, 
            T.AccountNumber AS SubMember_AccountNumber, 
            T.Name AS SubMember_Name, 
            T.Mobile AS SubMember_Mobile, 
            T.Photo AS SubMember_Photo, 
            T.DeviceID AS SubMember_DeviceID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.SubMember AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.DvrNvrTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DvrNvrTypeMaster", @"
    SELECT VALUE -- Constructing DvrNvrTypeMaster
        [CentralDBModel.DvrNvrTypeMaster](T1.DvrNvrTypeMaster_DvrNvrTypeId, T1.DvrNvrTypeMaster_Name, T1.DvrNvrTypeMaster_Description)
    FROM (
        SELECT 
            T.DvrNvrTypeId AS DvrNvrTypeMaster_DvrNvrTypeId, 
            T.Name AS DvrNvrTypeMaster_Name, 
            T.Description AS DvrNvrTypeMaster_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DvrNvrTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.NVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.NVR", @"
    SELECT VALUE -- Constructing NVR
        [CentralDBModel.NVR](T1.NVR_NvrId, T1.NVR_NvrUrl, T1.NVR_IPAddress, T1.NVR_Port, T1.NVR_Description, T1.NVR_Username, T1.NVR_Password, T1.NVR_InterfaceId, T1.NVR_DvrNvrTypeId, T1.NVR_CameraStream)
    FROM (
        SELECT 
            T.NvrId AS NVR_NvrId, 
            T.NvrUrl AS NVR_NvrUrl, 
            T.IPAddress AS NVR_IPAddress, 
            T.Port AS NVR_Port, 
            T.Description AS NVR_Description, 
            T.Username AS NVR_Username, 
            T.Password AS NVR_Password, 
            T.InterfaceId AS NVR_InterfaceId, 
            T.DvrNvrTypeId AS NVR_DvrNvrTypeId, 
            T.CameraStream AS NVR_CameraStream, 
            True AS _from0
        FROM CentralDBModelStoreContainer.NVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblExternalContactDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblExternalContactDetails", @"
    SELECT VALUE -- Constructing tblExternalContactDetails
        [CentralDBModel.tblExternalContactDetails](T1.tblExternalContactDetails_ID, T1.tblExternalContactDetails_InterfaceID, T1.tblExternalContactDetails_ContactName, T1.tblExternalContactDetails_ContactEmail, T1.tblExternalContactDetails_ContactNumber, T1.tblExternalContactDetails_MaintenanceType)
    FROM (
        SELECT 
            T.ID AS tblExternalContactDetails_ID, 
            T.InterfaceID AS tblExternalContactDetails_InterfaceID, 
            T.ContactName AS tblExternalContactDetails_ContactName, 
            T.ContactEmail AS tblExternalContactDetails_ContactEmail, 
            T.ContactNumber AS tblExternalContactDetails_ContactNumber, 
            T.MaintenanceType AS tblExternalContactDetails_MaintenanceType, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblExternalContactDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblInternalContactDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblInternalContactDetails", @"
    SELECT VALUE -- Constructing tblInternalContactDetails
        [CentralDBModel.tblInternalContactDetails](T1.tblInternalContactDetails_ID, T1.tblInternalContactDetails_InterfaceID, T1.tblInternalContactDetails_ContactName, T1.tblInternalContactDetails_ContactEmail, T1.tblInternalContactDetails_ContactNumber, T1.tblInternalContactDetails_MaintenanceType)
    FROM (
        SELECT 
            T.ID AS tblInternalContactDetails_ID, 
            T.InterfaceID AS tblInternalContactDetails_InterfaceID, 
            T.ContactName AS tblInternalContactDetails_ContactName, 
            T.ContactEmail AS tblInternalContactDetails_ContactEmail, 
            T.ContactNumber AS tblInternalContactDetails_ContactNumber, 
            T.MaintenanceType AS tblInternalContactDetails_MaintenanceType, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblInternalContactDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.FK_EventFieldDefinition_EventTypeTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView159()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.FK_EventFieldDefinition_EventTypeTemplate", "\r\n    SELECT VALUE -- Constructing FK_EventFieldDefinition_EventTypeTemplate\r\n   " +
                    "     [CentralDBModel.FK_EventFieldDefinition_EventTypeTemplate](T3.[FK_EventFiel" +
                    "dDefinition_EventTypeTemplate.EventTypeTemplate], T3.[FK_EventFieldDefinition_Ev" +
                    "entTypeTemplate.EventFieldDefinition])\r\n    FROM (\r\n        SELECT -- Constructi" +
                    "ng EventTypeTemplate\r\n            CreateRef(Entities.EventTypeTemplate, row(T2.[" +
                    "FK_EventFieldDefinition_EventTypeTemplate.EventTypeTemplate.EventTypeTemplateId]" +
                    "), [CentralDBModel.EventTypeTemplate]) AS [FK_EventFieldDefinition_EventTypeTemp" +
                    "late.EventTypeTemplate], \r\n            T2.[FK_EventFieldDefinition_EventTypeTemp" +
                    "late.EventFieldDefinition]\r\n        FROM (\r\n            SELECT -- Constructing E" +
                    "ventFieldDefinition\r\n                T1.[FK_EventFieldDefinition_EventTypeTempla" +
                    "te.EventTypeTemplate.EventTypeTemplateId], \r\n                CreateRef(Entities." +
                    "EventFieldDefinition, row(T1.[FK_EventFieldDefinition_EventTypeTemplate.EventFie" +
                    "ldDefinition.EventFieldId]), [CentralDBModel.EventFieldDefinition]) AS [FK_Event" +
                    "FieldDefinition_EventTypeTemplate.EventFieldDefinition]\r\n            FROM (\r\n   " +
                    "             SELECT \r\n                    T.EventTypeId AS [FK_EventFieldDefinit" +
                    "ion_EventTypeTemplate.EventTypeTemplate.EventTypeTemplateId], \r\n                " +
                    "    T.EventFieldId AS [FK_EventFieldDefinition_EventTypeTemplate.EventFieldDefin" +
                    "ition.EventFieldId], \r\n                    True AS _from0\r\n                FROM " +
                    "CentralDBModelStoreContainer.EventFieldDefinition AS T\r\n            ) AS T1\r\n   " +
                    "     ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Entities.FK_EventFieldDefinition_FieldType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView160()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.FK_EventFieldDefinition_FieldType", @"
    SELECT VALUE -- Constructing FK_EventFieldDefinition_FieldType
        [CentralDBModel.FK_EventFieldDefinition_FieldType](T3.[FK_EventFieldDefinition_FieldType.EventFieldType], T3.[FK_EventFieldDefinition_FieldType.EventFieldDefinition])
    FROM (
        SELECT -- Constructing EventFieldType
            CreateRef(Entities.EventFieldType, row(T2.[FK_EventFieldDefinition_FieldType.EventFieldType.FieldTypeId]), [CentralDBModel.EventFieldType]) AS [FK_EventFieldDefinition_FieldType.EventFieldType], 
            T2.[FK_EventFieldDefinition_FieldType.EventFieldDefinition]
        FROM (
            SELECT -- Constructing EventFieldDefinition
                T1.[FK_EventFieldDefinition_FieldType.EventFieldType.FieldTypeId], 
                CreateRef(Entities.EventFieldDefinition, row(T1.[FK_EventFieldDefinition_FieldType.EventFieldDefinition.EventFieldId]), [CentralDBModel.EventFieldDefinition]) AS [FK_EventFieldDefinition_FieldType.EventFieldDefinition]
            FROM (
                SELECT 
                    T.FieldTypeId AS [FK_EventFieldDefinition_FieldType.EventFieldType.FieldTypeId], 
                    T.EventFieldId AS [FK_EventFieldDefinition_FieldType.EventFieldDefinition.EventFieldId], 
                    True AS _from0
                FROM CentralDBModelStoreContainer.EventFieldDefinition AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Entities.AccountAlert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountAlert", @"
    SELECT VALUE -- Constructing AccountAlert
        [CentralDBModel.AccountAlert](T3.AccountAlert_Account, T3.AccountAlert_AlertType)
    FROM (
        SELECT -- Constructing Account
            CreateRef(Entities.Account, row(T2.AccountAlert_Account_AccountId), [CentralDBModel.Account]) AS AccountAlert_Account, 
            T2.AccountAlert_AlertType
        FROM (
            SELECT -- Constructing AlertType
                T1.AccountAlert_Account_AccountId, 
                CreateRef(Entities.AlertType, row(T1.AccountAlert_AlertType_AlertTypeId), [CentralDBModel.AlertType]) AS AccountAlert_AlertType
            FROM (
                SELECT 
                    T.AccountId AS AccountAlert_Account_AccountId, 
                    T.AlertTypeId AS AccountAlert_AlertType_AlertTypeId, 
                    True AS _from0
                FROM CentralDBModelStoreContainer.AccountAlert AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Entities.InterfaceTypeAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.InterfaceTypeAlertType", @"
    SELECT VALUE -- Constructing InterfaceTypeAlertType
        [CentralDBModel.InterfaceTypeAlertType](T3.InterfaceTypeAlertType_AlertType, T3.InterfaceTypeAlertType_InterfaceType)
    FROM (
        SELECT -- Constructing AlertType
            CreateRef(Entities.AlertType, row(T2.InterfaceTypeAlertType_AlertType_AlertTypeId), [CentralDBModel.AlertType]) AS InterfaceTypeAlertType_AlertType, 
            T2.InterfaceTypeAlertType_InterfaceType
        FROM (
            SELECT -- Constructing InterfaceType
                T1.InterfaceTypeAlertType_AlertType_AlertTypeId, 
                CreateRef(Entities.InterfaceType, row(T1.InterfaceTypeAlertType_InterfaceType_InterfaceTypeId), [CentralDBModel.InterfaceType]) AS InterfaceTypeAlertType_InterfaceType
            FROM (
                SELECT 
                    T.AlertTypeId AS InterfaceTypeAlertType_AlertType_AlertTypeId, 
                    T.InterfaceTypeId AS InterfaceTypeAlertType_InterfaceType_InterfaceTypeId, 
                    True AS _from0
                FROM CentralDBModelStoreContainer.InterfaceTypeAlertType AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Entities.FK_Interface_Site
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.FK_Interface_Site", @"
    SELECT VALUE -- Constructing FK_Interface_Site
        [CentralDBModel.FK_Interface_Site](T3.[FK_Interface_Site.Site], T3.[FK_Interface_Site.Interface])
    FROM (
        SELECT -- Constructing Site
            CreateRef(Entities.Site, row(T2.[FK_Interface_Site.Site.SiteId]), [CentralDBModel.Site]) AS [FK_Interface_Site.Site], 
            T2.[FK_Interface_Site.Interface]
        FROM (
            SELECT -- Constructing Interface
                T1.[FK_Interface_Site.Site.SiteId], 
                CreateRef(Entities.Interface, row(T1.[FK_Interface_Site.Interface.InterfaceId]), [CentralDBModel.Interface]) AS [FK_Interface_Site.Interface]
            FROM (
                SELECT 
                    T.SiteId AS [FK_Interface_Site.Site.SiteId], 
                    T.InterfaceId AS [FK_Interface_Site.Interface.InterfaceId], 
                    True AS _from0
                FROM CentralDBModelStoreContainer.Interface AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Entities.security_UsersToUsersGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView164()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.security_UsersToUsersGroups", @"
    SELECT VALUE -- Constructing security_UsersToUsersGroups
        [CentralDBModel.security_UsersToUsersGroups](T3.[security_UsersToUsersGroups.security_UsersGroups], T3.[security_UsersToUsersGroups.User])
    FROM (
        SELECT -- Constructing security_UsersGroups
            CreateRef(Entities.UsersGroup, row(T2.[security_UsersToUsersGroups.security_UsersGroups.Id]), [CentralDBModel.UsersGroup]) AS [security_UsersToUsersGroups.security_UsersGroups], 
            T2.[security_UsersToUsersGroups.User]
        FROM (
            SELECT -- Constructing User
                T1.[security_UsersToUsersGroups.security_UsersGroups.Id], 
                CreateRef(Entities.User, row(T1.[security_UsersToUsersGroups.User.UserId]), [CentralDBModel.User]) AS [security_UsersToUsersGroups.User]
            FROM (
                SELECT 
                    T.GroupId AS [security_UsersToUsersGroups.security_UsersGroups.Id], 
                    T.UserId AS [security_UsersToUsersGroups.User.UserId], 
                    True AS _from0
                FROM CentralDBModelStoreContainer.security_UsersToUsersGroups AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountType", @"
    SELECT VALUE -- Constructing AccountType
        [CentralDBModel.Store.AccountType](T1.AccountType_AccoutTypeId, T1.AccountType_AccountTypeName, T1.AccountType_SiteEventReport, T1.AccountType_ReportDeliveryMethodId, T1.AccountType_OpenCloseMonitoring, T1.AccountType_DailyOpenCloseReports, T1.AccountType_WeeklyOpenCloseReporting, T1.AccountType_SMS)
    FROM (
        SELECT 
            T.AccoutTypeId AS AccountType_AccoutTypeId, 
            T.AccountTypeName AS AccountType_AccountTypeName, 
            T.SiteEventReport AS AccountType_SiteEventReport, 
            T.ReportDeliveryMethodId AS AccountType_ReportDeliveryMethodId, 
            T.OpenCloseMonitoring AS AccountType_OpenCloseMonitoring, 
            T.DailyOpenCloseReports AS AccountType_DailyOpenCloseReports, 
            T.WeeklyOpenCloseReporting AS AccountType_WeeklyOpenCloseReporting, 
            T.SMS AS AccountType_SMS, 
            True AS _from0
        FROM Entities.AccountType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DeliveryMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView166()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DeliveryMethod", @"
    SELECT VALUE -- Constructing DeliveryMethod
        [CentralDBModel.Store.DeliveryMethod](T1.DeliveryMethod_DeliveryMethodId, T1.DeliveryMethod_DeliveryMethodName, T1.DeliveryMethod_Frequency)
    FROM (
        SELECT 
            T.DeliveryMethodId AS DeliveryMethod_DeliveryMethodId, 
            T.DeliveryMethodName AS DeliveryMethod_DeliveryMethodName, 
            T.Frequency AS DeliveryMethod_Frequency, 
            True AS _from0
        FROM Entities.DeliveryMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Frequency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView167()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Frequency", @"
    SELECT VALUE -- Constructing Frequency
        [CentralDBModel.Store.Frequency](T1.Frequency_FrequencyId, T1.Frequency_FrequencyName, T1.Frequency_Hour, T1.Frequency_DayOfWeek, T1.Frequency_Week, T1.Frequency_DayOfMonth)
    FROM (
        SELECT 
            T.FrequencyId AS Frequency_FrequencyId, 
            T.FrequencyName AS Frequency_FrequencyName, 
            T.Hour AS Frequency_Hour, 
            T.DayOfWeek AS Frequency_DayOfWeek, 
            T.Week AS Frequency_Week, 
            T.DayOfMonth AS Frequency_DayOfMonth, 
            True AS _from0
        FROM Entities.Frequency AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView168()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountType", @"
    SELECT VALUE -- Constructing AccountType
        [CentralDBModel.AccountType](T1.AccountType_AccoutTypeId, T1.AccountType_AccountTypeName, T1.AccountType_SiteEventReport, T1.AccountType_ReportDeliveryMethodId, T1.AccountType_OpenCloseMonitoring, T1.AccountType_DailyOpenCloseReports, T1.AccountType_WeeklyOpenCloseReporting, T1.AccountType_SMS)
    FROM (
        SELECT 
            T.AccoutTypeId AS AccountType_AccoutTypeId, 
            T.AccountTypeName AS AccountType_AccountTypeName, 
            T.SiteEventReport AS AccountType_SiteEventReport, 
            T.ReportDeliveryMethodId AS AccountType_ReportDeliveryMethodId, 
            T.OpenCloseMonitoring AS AccountType_OpenCloseMonitoring, 
            T.DailyOpenCloseReports AS AccountType_DailyOpenCloseReports, 
            T.WeeklyOpenCloseReporting AS AccountType_WeeklyOpenCloseReporting, 
            T.SMS AS AccountType_SMS, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AccountType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.DeliveryMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView169()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DeliveryMethod", @"
    SELECT VALUE -- Constructing DeliveryMethod
        [CentralDBModel.DeliveryMethod](T1.DeliveryMethod_DeliveryMethodId, T1.DeliveryMethod_DeliveryMethodName, T1.DeliveryMethod_Frequency)
    FROM (
        SELECT 
            T.DeliveryMethodId AS DeliveryMethod_DeliveryMethodId, 
            T.DeliveryMethodName AS DeliveryMethod_DeliveryMethodName, 
            T.Frequency AS DeliveryMethod_Frequency, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DeliveryMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Frequency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView170()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Frequency", @"
    SELECT VALUE -- Constructing Frequency
        [CentralDBModel.Frequency](T1.Frequency_FrequencyId, T1.Frequency_FrequencyName, T1.Frequency_Hour, T1.Frequency_DayOfWeek, T1.Frequency_Week, T1.Frequency_DayOfMonth)
    FROM (
        SELECT 
            T.FrequencyId AS Frequency_FrequencyId, 
            T.FrequencyName AS Frequency_FrequencyName, 
            T.Hour AS Frequency_Hour, 
            T.DayOfWeek AS Frequency_DayOfWeek, 
            T.Week AS Frequency_Week, 
            T.DayOfMonth AS Frequency_DayOfMonth, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Frequency AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlertTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView171()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlertTemplate", @"
    SELECT VALUE -- Constructing AlertTemplate
        [CentralDBModel.Store.AlertTemplate](T1.AlertTemplate_AlertTemplateId, T1.AlertTemplate_Name, T1.AlertTemplate_Description)
    FROM (
        SELECT 
            T.AlertTemplateId AS AlertTemplate_AlertTemplateId, 
            T.Name AS AlertTemplate_Name, 
            T.Description AS AlertTemplate_Description, 
            True AS _from0
        FROM Entities.AlertTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlertTemplateCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlertTemplateCondition", @"
    SELECT VALUE -- Constructing AlertTemplateCondition
        [CentralDBModel.Store.AlertTemplateCondition](T1.AlertTemplateCondition_AlertTemplateConditionId, T1.AlertTemplateCondition_AlertTemplateId, T1.AlertTemplateCondition_EventFieldName, T1.AlertTemplateCondition_EventFieldType, T1.AlertTemplateCondition_ComparationOperationId, T1.AlertTemplateCondition_Value)
    FROM (
        SELECT 
            T.AlertTemplateConditionId AS AlertTemplateCondition_AlertTemplateConditionId, 
            T.AlertTemplateId AS AlertTemplateCondition_AlertTemplateId, 
            T.EventFieldName AS AlertTemplateCondition_EventFieldName, 
            T.EventFieldType AS AlertTemplateCondition_EventFieldType, 
            T.ComparationOperationId AS AlertTemplateCondition_ComparationOperationId, 
            T.[Value] AS AlertTemplateCondition_Value, 
            True AS _from0
        FROM Entities.AlertTemplateCondition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlertTemplateValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlertTemplateValue", @"
    SELECT VALUE -- Constructing AlertTemplateValue
        [CentralDBModel.Store.AlertTemplateValue](T1.AlertTemplateValue_AlertTemplateValueId, T1.AlertTemplateValue_AlertTemplateId, T1.AlertTemplateValue_AlertEntityName, T1.AlertTemplateValue_AlertFieldName, T1.AlertTemplateValue_ValueFormula)
    FROM (
        SELECT 
            T.AlertTemplateValueId AS AlertTemplateValue_AlertTemplateValueId, 
            T.AlertTemplateId AS AlertTemplateValue_AlertTemplateId, 
            T.AlertEntityName AS AlertTemplateValue_AlertEntityName, 
            T.AlertFieldName AS AlertTemplateValue_AlertFieldName, 
            T.ValueFormula AS AlertTemplateValue_ValueFormula, 
            True AS _from0
        FROM Entities.AlertTemplateValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ComparisonOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ComparisonOperation", @"
    SELECT VALUE -- Constructing ComparisonOperation
        [CentralDBModel.Store.ComparisonOperation](T1.ComparisonOperation_ComparisonOperationId, T1.ComparisonOperation_Name)
    FROM (
        SELECT 
            T.ComparisonOperationId AS ComparisonOperation_ComparisonOperationId, 
            T.Name AS ComparisonOperation_Name, 
            True AS _from0
        FROM Entities.ComparisonOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AlertTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AlertTemplate", @"
    SELECT VALUE -- Constructing AlertTemplate
        [CentralDBModel.AlertTemplate](T1.AlertTemplate_AlertTemplateId, T1.AlertTemplate_Name, T1.AlertTemplate_Description)
    FROM (
        SELECT 
            T.AlertTemplateId AS AlertTemplate_AlertTemplateId, 
            T.Name AS AlertTemplate_Name, 
            T.Description AS AlertTemplate_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AlertTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AlertTemplateCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AlertTemplateCondition", @"
    SELECT VALUE -- Constructing AlertTemplateCondition
        [CentralDBModel.AlertTemplateCondition](T1.AlertTemplateCondition_AlertTemplateConditionId, T1.AlertTemplateCondition_AlertTemplateId, T1.AlertTemplateCondition_EventFieldName, T1.AlertTemplateCondition_EventFieldType, T1.AlertTemplateCondition_ComparationOperationId, T1.AlertTemplateCondition_Value)
    FROM (
        SELECT 
            T.AlertTemplateConditionId AS AlertTemplateCondition_AlertTemplateConditionId, 
            T.AlertTemplateId AS AlertTemplateCondition_AlertTemplateId, 
            T.EventFieldName AS AlertTemplateCondition_EventFieldName, 
            T.EventFieldType AS AlertTemplateCondition_EventFieldType, 
            T.ComparationOperationId AS AlertTemplateCondition_ComparationOperationId, 
            T.[Value] AS AlertTemplateCondition_Value, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AlertTemplateCondition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AlertTemplateValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AlertTemplateValue", @"
    SELECT VALUE -- Constructing AlertTemplateValue
        [CentralDBModel.AlertTemplateValue](T1.AlertTemplateValue_AlertTemplateValueId, T1.AlertTemplateValue_AlertTemplateId, T1.AlertTemplateValue_AlertEntityName, T1.AlertTemplateValue_AlertFieldName, T1.AlertTemplateValue_ValueFormula)
    FROM (
        SELECT 
            T.AlertTemplateValueId AS AlertTemplateValue_AlertTemplateValueId, 
            T.AlertTemplateId AS AlertTemplateValue_AlertTemplateId, 
            T.AlertEntityName AS AlertTemplateValue_AlertEntityName, 
            T.AlertFieldName AS AlertTemplateValue_AlertFieldName, 
            T.ValueFormula AS AlertTemplateValue_ValueFormula, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AlertTemplateValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ComparisonOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ComparisonOperation", @"
    SELECT VALUE -- Constructing ComparisonOperation
        [CentralDBModel.ComparisonOperation](T1.ComparisonOperation_ComparisonOperationId, T1.ComparisonOperation_Name)
    FROM (
        SELECT 
            T.ComparisonOperationId AS ComparisonOperation_ComparisonOperationId, 
            T.Name AS ComparisonOperation_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ComparisonOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AuditLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView179()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AuditLog", @"
    SELECT VALUE -- Constructing AuditLog
        [CentralDBModel.Store.AuditLog](T1.AuditLog_AuditLogId, T1.AuditLog_ActivityDateTime, T1.AuditLog_AuditTypeId, T1.AuditLog_UserId, T1.AuditLog_SourceId, T1.AuditLog_SourceType, T1.AuditLog_Description)
    FROM (
        SELECT 
            T.AuditLogId AS AuditLog_AuditLogId, 
            T.ActivityDateTime AS AuditLog_ActivityDateTime, 
            T.AuditTypeId AS AuditLog_AuditTypeId, 
            T.UserId AS AuditLog_UserId, 
            T.SourceId AS AuditLog_SourceId, 
            T.SourceType AS AuditLog_SourceType, 
            T.Description AS AuditLog_Description, 
            True AS _from0
        FROM Entities.AuditLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AuditType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AuditType", @"
    SELECT VALUE -- Constructing AuditType
        [CentralDBModel.Store.AuditType](T1.AuditType_Description)
    FROM (
        SELECT 
            T.Description AS AuditType_Description, 
            True AS _from0
        FROM Entities.AuditType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AuditLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AuditLog", @"
    SELECT VALUE -- Constructing AuditLog
        [CentralDBModel.AuditLog](T1.AuditLog_AuditLogId, T1.AuditLog_ActivityDateTime, T1.AuditLog_AuditTypeId, T1.AuditLog_UserId, T1.AuditLog_SourceId, T1.AuditLog_SourceType, T1.AuditLog_Description)
    FROM (
        SELECT 
            T.AuditLogId AS AuditLog_AuditLogId, 
            T.ActivityDateTime AS AuditLog_ActivityDateTime, 
            T.AuditTypeId AS AuditLog_AuditTypeId, 
            T.UserId AS AuditLog_UserId, 
            T.SourceId AS AuditLog_SourceId, 
            T.SourceType AS AuditLog_SourceType, 
            T.Description AS AuditLog_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AuditLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AuditType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AuditType", @"
    SELECT VALUE -- Constructing AuditType
        [CentralDBModel.AuditType](T1.AuditType_Description)
    FROM (
        SELECT 
            T.Description AS AuditType_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AuditType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.GeneralSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.GeneralSetting", @"
    SELECT VALUE -- Constructing GeneralSetting
        [CentralDBModel.Store.GeneralSetting](T1.GeneralSetting_SystemName, T1.GeneralSetting_Description, T1.GeneralSetting_Version, T1.GeneralSetting_Logo, T1.GeneralSetting_DefaultLanguage, T1.GeneralSetting_DefaultTimeZoneId, T1.GeneralSetting_LicenceSettingsId)
    FROM (
        SELECT 
            T.SystemName AS GeneralSetting_SystemName, 
            T.Description AS GeneralSetting_Description, 
            T.Version AS GeneralSetting_Version, 
            T.Logo AS GeneralSetting_Logo, 
            T.DefaultLanguage AS GeneralSetting_DefaultLanguage, 
            T.DefaultTimeZoneId AS GeneralSetting_DefaultTimeZoneId, 
            T.LicenceSettingsId AS GeneralSetting_LicenceSettingsId, 
            True AS _from0
        FROM Entities.GeneralSetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Language
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Language", @"
    SELECT VALUE -- Constructing Language
        [CentralDBModel.Store.Language](T1.Language_LanguageId, T1.Language_Name)
    FROM (
        SELECT 
            T.LanguageId AS Language_LanguageId, 
            T.Name AS Language_Name, 
            True AS _from0
        FROM Entities.Language AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.TimeZone
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.TimeZone", @"
    SELECT VALUE -- Constructing TimeZone
        [CentralDBModel.Store.TimeZone](T1.TimeZone_TimeZoneId, T1.TimeZone_Abbreviation, T1.TimeZone_Fullname, T1.TimeZone_Location, T1.TimeZone_Shift)
    FROM (
        SELECT 
            T.TimeZoneId AS TimeZone_TimeZoneId, 
            T.Abbreviation AS TimeZone_Abbreviation, 
            T.Fullname AS TimeZone_Fullname, 
            T.Location AS TimeZone_Location, 
            T.Shift AS TimeZone_Shift, 
            True AS _from0
        FROM Entities.TimeZone AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.TuchControlLicenceSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.TuchControlLicenceSettings", @"
    SELECT VALUE -- Constructing TuchControlLicenceSettings
        [CentralDBModel.Store.TuchControlLicenceSettings](T1.TuchControlLicenceSettings_LicenceSettingsId)
    FROM (
        SELECT 
            T.LicenceSettingsId AS TuchControlLicenceSettings_LicenceSettingsId, 
            True AS _from0
        FROM Entities.TuchControlLicenceSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.GeneralSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.GeneralSetting", @"
    SELECT VALUE -- Constructing GeneralSetting
        [CentralDBModel.GeneralSetting](T1.GeneralSetting_SystemName, T1.GeneralSetting_Description, T1.GeneralSetting_Version, T1.GeneralSetting_Logo, T1.GeneralSetting_DefaultLanguage, T1.GeneralSetting_DefaultTimeZoneId, T1.GeneralSetting_LicenceSettingsId)
    FROM (
        SELECT 
            T.SystemName AS GeneralSetting_SystemName, 
            T.Description AS GeneralSetting_Description, 
            T.Version AS GeneralSetting_Version, 
            T.Logo AS GeneralSetting_Logo, 
            T.DefaultLanguage AS GeneralSetting_DefaultLanguage, 
            T.DefaultTimeZoneId AS GeneralSetting_DefaultTimeZoneId, 
            T.LicenceSettingsId AS GeneralSetting_LicenceSettingsId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.GeneralSetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Language
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Language", @"
    SELECT VALUE -- Constructing Language
        [CentralDBModel.Language](T1.Language_LanguageId, T1.Language_Name)
    FROM (
        SELECT 
            T.LanguageId AS Language_LanguageId, 
            T.Name AS Language_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Language AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.TimeZone
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.TimeZone", @"
    SELECT VALUE -- Constructing TimeZone
        [CentralDBModel.TimeZone](T1.TimeZone_TimeZoneId, T1.TimeZone_Abbreviation, T1.TimeZone_Fullname, T1.TimeZone_Location, T1.TimeZone_Shift)
    FROM (
        SELECT 
            T.TimeZoneId AS TimeZone_TimeZoneId, 
            T.Abbreviation AS TimeZone_Abbreviation, 
            T.Fullname AS TimeZone_Fullname, 
            T.Location AS TimeZone_Location, 
            T.Shift AS TimeZone_Shift, 
            True AS _from0
        FROM CentralDBModelStoreContainer.TimeZone AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.TuchControlLicenceSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.TuchControlLicenceSettings", @"
    SELECT VALUE -- Constructing TuchControlLicenceSettings
        [CentralDBModel.TuchControlLicenceSettings](T1.TuchControlLicenceSettings_LicenceSettingsId)
    FROM (
        SELECT 
            T.LicenceSettingsId AS TuchControlLicenceSettings_LicenceSettingsId, 
            True AS _from0
        FROM CentralDBModelStoreContainer.TuchControlLicenceSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Group
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Group", @"
    SELECT VALUE -- Constructing Group
        [CentralDBModel.Store.Group](T1.Group_GroupId, T1.Group_GroupName)
    FROM (
        SELECT 
            T.GroupId AS Group_GroupId, 
            T.GroupName AS Group_GroupName, 
            True AS _from0
        FROM Entities.[Group] AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Permission
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Permission", @"
    SELECT VALUE -- Constructing Permission
        [CentralDBModel.Store.Permission](T1.Permission_PermissionId, T1.Permission_PermissionName)
    FROM (
        SELECT 
            T.PermissionId AS Permission_PermissionId, 
            T.PermissionName AS Permission_PermissionName, 
            True AS _from0
        FROM Entities.Permission AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.GroupPermission
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.GroupPermission", @"
    SELECT VALUE -- Constructing GroupPermission
        [CentralDBModel.Store.GroupPermission](T1.GroupPermission_GroupId, T1.GroupPermission_PermissionId)
    FROM (
        SELECT 
            Key(T.[Group]).GroupId AS GroupPermission_GroupId, 
            Key(T.Permission).PermissionId AS GroupPermission_PermissionId, 
            True AS _from0
        FROM Entities.GroupPermission AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Group
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Group", @"
    SELECT VALUE -- Constructing Group
        [CentralDBModel.Group](T1.Group_GroupId, T1.Group_GroupName)
    FROM (
        SELECT 
            T.GroupId AS Group_GroupId, 
            T.GroupName AS Group_GroupName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.[Group] AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Permission
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Permission", @"
    SELECT VALUE -- Constructing Permission
        [CentralDBModel.Permission](T1.Permission_PermissionId, T1.Permission_PermissionName)
    FROM (
        SELECT 
            T.PermissionId AS Permission_PermissionId, 
            T.PermissionName AS Permission_PermissionName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Permission AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.GroupPermission
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView196()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.GroupPermission", @"
    SELECT VALUE -- Constructing GroupPermission
        [CentralDBModel.GroupPermission](T3.GroupPermission_Group, T3.GroupPermission_Permission)
    FROM (
        SELECT -- Constructing Group
            CreateRef(Entities.[Group], row(T2.GroupPermission_Group_GroupId), [CentralDBModel.Group]) AS GroupPermission_Group, 
            T2.GroupPermission_Permission
        FROM (
            SELECT -- Constructing Permission
                T1.GroupPermission_Group_GroupId, 
                CreateRef(Entities.Permission, row(T1.GroupPermission_Permission_PermissionId), [CentralDBModel.Permission]) AS GroupPermission_Permission
            FROM (
                SELECT 
                    T.GroupId AS GroupPermission_Group_GroupId, 
                    T.PermissionId AS GroupPermission_Permission_PermissionId, 
                    True AS _from0
                FROM CentralDBModelStoreContainer.GroupPermission AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Login
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView197()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Login", @"
    SELECT VALUE -- Constructing Login
        [CentralDBModel.Store.Login](T1.Login_AuthToken, T1.Login_SecurityUserId, T1.Login_Identifier, T1.Login_LoginDate, T1.Login_LogoutDate, T1.Login_IdentifierIP, T1.Login_Component, T1.Login_Description)
    FROM (
        SELECT 
            T.AuthToken AS Login_AuthToken, 
            T.SecurityUserId AS Login_SecurityUserId, 
            T.Identifier AS Login_Identifier, 
            T.LoginDate AS Login_LoginDate, 
            T.LogoutDate AS Login_LogoutDate, 
            T.IdentifierIP AS Login_IdentifierIP, 
            T.Component AS Login_Component, 
            T.Description AS Login_Description, 
            True AS _from0
        FROM Entities.Login AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Login
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView198()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Login", @"
    SELECT VALUE -- Constructing Login
        [CentralDBModel.Login](T1.Login_AuthToken, T1.Login_SecurityUserId, T1.Login_Identifier, T1.Login_LoginDate, T1.Login_LogoutDate, T1.Login_IdentifierIP, T1.Login_Component, T1.Login_Description)
    FROM (
        SELECT 
            T.AuthToken AS Login_AuthToken, 
            T.SecurityUserId AS Login_SecurityUserId, 
            T.Identifier AS Login_Identifier, 
            T.LoginDate AS Login_LoginDate, 
            T.LogoutDate AS Login_LogoutDate, 
            T.IdentifierIP AS Login_IdentifierIP, 
            T.Component AS Login_Component, 
            T.Description AS Login_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Login AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.Station
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView199()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.Station", @"
    SELECT VALUE -- Constructing Station
        [CentralDBModel.Store.Station](T1.Station_StationId, T1.Station_IsActive, T1.Station_Identifier, T1.Station_StationTypeId, T1.Station_Description, T1.Station_Metadata, T1.Station_ActivationDate, T1.Station_Lat, T1.Station_Long, T1.Station_Altitude, T1.Station_LocationDescription, T1.Station_SiteID)
    FROM (
        SELECT 
            T.StationId AS Station_StationId, 
            T.IsActive AS Station_IsActive, 
            T.Identifier AS Station_Identifier, 
            T.StationTypeId AS Station_StationTypeId, 
            T.Description AS Station_Description, 
            T.Metadata AS Station_Metadata, 
            T.ActivationDate AS Station_ActivationDate, 
            T.Lat AS Station_Lat, 
            T.Long AS Station_Long, 
            T.Altitude AS Station_Altitude, 
            T.LocationDescription AS Station_LocationDescription, 
            T.SiteID AS Station_SiteID, 
            True AS _from0
        FROM Entities.Station AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.StationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.StationType", @"
    SELECT VALUE -- Constructing StationType
        [CentralDBModel.Store.StationType](T1.StationType_StationType)
    FROM (
        SELECT 
            T.StationType1 AS StationType_StationType, 
            True AS _from0
        FROM Entities.StationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Station
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView201()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Station", @"
    SELECT VALUE -- Constructing Station
        [CentralDBModel.Station](T1.Station_StationId, T1.Station_IsActive, T1.Station_Identifier, T1.Station_StationTypeId, T1.Station_Description, T1.Station_Metadata, T1.Station_ActivationDate, T1.Station_Lat, T1.Station_Long, T1.Station_Altitude, T1.Station_LocationDescription, T1.Station_SiteID)
    FROM (
        SELECT 
            T.StationId AS Station_StationId, 
            T.IsActive AS Station_IsActive, 
            T.Identifier AS Station_Identifier, 
            T.StationTypeId AS Station_StationTypeId, 
            T.Description AS Station_Description, 
            T.Metadata AS Station_Metadata, 
            T.ActivationDate AS Station_ActivationDate, 
            T.Lat AS Station_Lat, 
            T.Long AS Station_Long, 
            T.Altitude AS Station_Altitude, 
            T.LocationDescription AS Station_LocationDescription, 
            T.SiteID AS Station_SiteID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.Station AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.StationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.StationType", @"
    SELECT VALUE -- Constructing StationType
        [CentralDBModel.StationType](T1.StationType_StationType1)
    FROM (
        SELECT 
            T.StationType AS StationType_StationType1, 
            True AS _from0
        FROM CentralDBModelStoreContainer.StationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.UserLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView203()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.UserLocation", @"
    SELECT VALUE -- Constructing UserLocation
        [CentralDBModel.Store.UserLocation](T1.UserLocation_LocationId, T1.UserLocation_Username, T1.UserLocation_Lat, T1.UserLocation_Long, T1.UserLocation_Alt, T1.UserLocation_IsFavorite, T1.UserLocation_Zoomlevel, T1.UserLocation_Favaddress)
    FROM (
        SELECT 
            T.LocationId AS UserLocation_LocationId, 
            T.Username AS UserLocation_Username, 
            T.Lat AS UserLocation_Lat, 
            T.Long AS UserLocation_Long, 
            T.Alt AS UserLocation_Alt, 
            T.IsFavorite AS UserLocation_IsFavorite, 
            T.Zoomlevel AS UserLocation_Zoomlevel, 
            T.Favaddress AS UserLocation_Favaddress, 
            True AS _from0
        FROM Entities.UserLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.UserLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView204()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.UserLocation", @"
    SELECT VALUE -- Constructing UserLocation
        [CentralDBModel.UserLocation](T1.UserLocation_LocationId, T1.UserLocation_Username, T1.UserLocation_Lat, T1.UserLocation_Long, T1.UserLocation_Alt, T1.UserLocation_IsFavorite, T1.UserLocation_Zoomlevel, T1.UserLocation_Favaddress)
    FROM (
        SELECT 
            T.LocationId AS UserLocation_LocationId, 
            T.Username AS UserLocation_Username, 
            T.Lat AS UserLocation_Lat, 
            T.Long AS UserLocation_Long, 
            T.Alt AS UserLocation_Alt, 
            T.IsFavorite AS UserLocation_IsFavorite, 
            T.Zoomlevel AS UserLocation_Zoomlevel, 
            T.Favaddress AS UserLocation_Favaddress, 
            True AS _from0
        FROM CentralDBModelStoreContainer.UserLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ValuesHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView205()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ValuesHistory", @"
    SELECT VALUE -- Constructing ValuesHistory
        [CentralDBModel.Store.ValuesHistory](T1.ValuesHistory_ValuesHistoryId, T1.ValuesHistory_ItemId, T1.ValuesHistory_Value, T1.ValuesHistory_CreatedDate)
    FROM (
        SELECT 
            T.ValuesHistoryId AS ValuesHistory_ValuesHistoryId, 
            T.ItemId AS ValuesHistory_ItemId, 
            T.[Value] AS ValuesHistory_Value, 
            T.CreatedDate AS ValuesHistory_CreatedDate, 
            True AS _from0
        FROM Entities.ValuesHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ValuesHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView206()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ValuesHistory", @"
    SELECT VALUE -- Constructing ValuesHistory
        [CentralDBModel.ValuesHistory](T1.ValuesHistory_ValuesHistoryId, T1.ValuesHistory_ItemId, T1.ValuesHistory_Value, T1.ValuesHistory_CreatedDate)
    FROM (
        SELECT 
            T.ValuesHistoryId AS ValuesHistory_ValuesHistoryId, 
            T.ItemId AS ValuesHistory_ItemId, 
            T.[Value] AS ValuesHistory_Value, 
            T.CreatedDate AS ValuesHistory_CreatedDate, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ValuesHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.ValuesLookUp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.ValuesLookUp", @"
    SELECT VALUE -- Constructing ValuesLookUp
        [CentralDBModel.Store.ValuesLookUp](T1.ValuesLookUp_ItemId, T1.ValuesLookUp_Value)
    FROM (
        SELECT 
            T.ItemId AS ValuesLookUp_ItemId, 
            T.[Value] AS ValuesLookUp_Value, 
            True AS _from0
        FROM Entities.ValuesLookUp AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.ValuesLookUp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView208()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.ValuesLookUp", @"
    SELECT VALUE -- Constructing ValuesLookUp
        [CentralDBModel.ValuesLookUp](T1.ValuesLookUp_ItemId, T1.ValuesLookUp_Value)
    FROM (
        SELECT 
            T.ItemId AS ValuesLookUp_ItemId, 
            T.[Value] AS ValuesLookUp_Value, 
            True AS _from0
        FROM CentralDBModelStoreContainer.ValuesLookUp AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AccountView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView209()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AccountView", @"
    SELECT VALUE -- Constructing AccountView
        [CentralDBModel.Store.AccountView](T1.AccountView_AccountId, T1.AccountView_Name, T1.AccountView_Description, T1.AccountView_AccountNumber, T1.AccountView_Sites, T1.AccountView_Devices, T1.AccountView_Location, T1.AccountView_UserCount)
    FROM (
        SELECT 
            T.AccountId AS AccountView_AccountId, 
            T.Name AS AccountView_Name, 
            T.Description AS AccountView_Description, 
            T.AccountNumber AS AccountView_AccountNumber, 
            T.Sites AS AccountView_Sites, 
            T.Devices AS AccountView_Devices, 
            T.Location AS AccountView_Location, 
            T.UserCount AS AccountView_UserCount, 
            True AS _from0
        FROM Entities.AccountView AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AccountView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView210()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AccountView", @"
    SELECT VALUE -- Constructing AccountView
        [CentralDBModel.AccountView](T1.AccountView_AccountId, T1.AccountView_Name, T1.AccountView_Description, T1.AccountView_AccountNumber, T1.AccountView_Sites, T1.AccountView_Devices, T1.AccountView_Location, T1.AccountView_UserCount)
    FROM (
        SELECT 
            T.AccountId AS AccountView_AccountId, 
            T.Name AS AccountView_Name, 
            T.Description AS AccountView_Description, 
            T.AccountNumber AS AccountView_AccountNumber, 
            T.Sites AS AccountView_Sites, 
            T.Devices AS AccountView_Devices, 
            T.Location AS AccountView_Location, 
            T.UserCount AS AccountView_UserCount, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AccountView AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.vw_Team
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.vw_Team", @"
    SELECT VALUE -- Constructing vw_Team
        [CentralDBModel.Store.vw_Team](T1.[vw_Team.Id], T1.[vw_Team.Name], T1.[vw_Team.Parent])
    FROM (
        SELECT 
            T.Id AS [vw_Team.Id], 
            T.Name AS [vw_Team.Name], 
            T.Parent AS [vw_Team.Parent], 
            True AS _from0
        FROM Entities.Team AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Team
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView212()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Team", @"
    SELECT VALUE -- Constructing Team
        [CentralDBModel.Team](T1.Team_Id, T1.Team_Name, T1.Team_Parent)
    FROM (
        SELECT 
            T.Id AS Team_Id, 
            T.Name AS Team_Name, 
            T.Parent AS Team_Parent, 
            True AS _from0
        FROM CentralDBModelStoreContainer.vw_Team AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.vw_UserRole
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.vw_UserRole", @"
    SELECT VALUE -- Constructing vw_UserRole
        [CentralDBModel.Store.vw_UserRole](T1.[vw_UserRole.Id], T1.[vw_UserRole.Name], T1.[vw_UserRole.Parent])
    FROM (
        SELECT 
            T.Id AS [vw_UserRole.Id], 
            T.Name AS [vw_UserRole.Name], 
            T.Parent AS [vw_UserRole.Parent], 
            True AS _from0
        FROM Entities.UserRole AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.UserRole
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.UserRole", @"
    SELECT VALUE -- Constructing UserRole
        [CentralDBModel.UserRole](T1.UserRole_Id, T1.UserRole_Name, T1.UserRole_Parent)
    FROM (
        SELECT 
            T.Id AS UserRole_Id, 
            T.Name AS UserRole_Name, 
            T.Parent AS UserRole_Parent, 
            True AS _from0
        FROM CentralDBModelStoreContainer.vw_UserRole AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tbgeolocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView215()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tbgeolocation", @"
    SELECT VALUE -- Constructing tbgeolocation
        [CentralDBModel.Store.tbgeolocation](T1.tbgeolocation_ID, T1.tbgeolocation_DeviceID, T1.tbgeolocation_GLat, T1.tbgeolocation_GLong)
    FROM (
        SELECT 
            T.ID AS tbgeolocation_ID, 
            T.DeviceID AS tbgeolocation_DeviceID, 
            T.GLat AS tbgeolocation_GLat, 
            T.GLong AS tbgeolocation_GLong, 
            True AS _from0
        FROM Entities.tbgeolocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tbgeolocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView216()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tbgeolocation", @"
    SELECT VALUE -- Constructing tbgeolocation
        [CentralDBModel.tbgeolocation](T1.tbgeolocation_ID, T1.tbgeolocation_DeviceID, T1.tbgeolocation_GLat, T1.tbgeolocation_GLong)
    FROM (
        SELECT 
            T.ID AS tbgeolocation_ID, 
            T.DeviceID AS tbgeolocation_DeviceID, 
            T.GLat AS tbgeolocation_GLat, 
            T.GLong AS tbgeolocation_GLong, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tbgeolocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DeviceVAnalyticsSchedule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView217()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DeviceVAnalyticsSchedule", @"
    SELECT VALUE -- Constructing DeviceVAnalyticsSchedule
        [CentralDBModel.Store.DeviceVAnalyticsSchedule](T1.DeviceVAnalyticsSchedule_DevSchID, T1.DeviceVAnalyticsSchedule_DeviceID, T1.DeviceVAnalyticsSchedule_DevSchEnb, T1.DeviceVAnalyticsSchedule_nDay, T1.DeviceVAnalyticsSchedule_nHrs)
    FROM (
        SELECT 
            T.DevSchID AS DeviceVAnalyticsSchedule_DevSchID, 
            T.DeviceID AS DeviceVAnalyticsSchedule_DeviceID, 
            T.DevSchEnb AS DeviceVAnalyticsSchedule_DevSchEnb, 
            T.nDay AS DeviceVAnalyticsSchedule_nDay, 
            T.nHrs AS DeviceVAnalyticsSchedule_nHrs, 
            True AS _from0
        FROM Entities.DeviceVAnalyticsSchedule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.DeviceVAnalyticsSchedule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView218()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DeviceVAnalyticsSchedule", @"
    SELECT VALUE -- Constructing DeviceVAnalyticsSchedule
        [CentralDBModel.DeviceVAnalyticsSchedule](T1.DeviceVAnalyticsSchedule_DevSchID, T1.DeviceVAnalyticsSchedule_DeviceID, T1.DeviceVAnalyticsSchedule_DevSchEnb, T1.DeviceVAnalyticsSchedule_nDay, T1.DeviceVAnalyticsSchedule_nHrs)
    FROM (
        SELECT 
            T.DevSchID AS DeviceVAnalyticsSchedule_DevSchID, 
            T.DeviceID AS DeviceVAnalyticsSchedule_DeviceID, 
            T.DevSchEnb AS DeviceVAnalyticsSchedule_DevSchEnb, 
            T.nDay AS DeviceVAnalyticsSchedule_nDay, 
            T.nHrs AS DeviceVAnalyticsSchedule_nHrs, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DeviceVAnalyticsSchedule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.DeviceZoneData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.DeviceZoneData", @"
    SELECT VALUE -- Constructing DeviceZoneData
        [CentralDBModel.Store.DeviceZoneData](T1.DeviceZoneData_DZID, T1.DeviceZoneData_DeviceID, T1.DeviceZoneData_ZoneData)
    FROM (
        SELECT 
            T.DZID AS DeviceZoneData_DZID, 
            T.DeviceID AS DeviceZoneData_DeviceID, 
            T.ZoneData AS DeviceZoneData_ZoneData, 
            True AS _from0
        FROM Entities.DeviceZoneData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.DeviceZoneData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.DeviceZoneData", @"
    SELECT VALUE -- Constructing DeviceZoneData
        [CentralDBModel.DeviceZoneData](T1.DeviceZoneData_DZID, T1.DeviceZoneData_DeviceID, T1.DeviceZoneData_ZoneData)
    FROM (
        SELECT 
            T.DZID AS DeviceZoneData_DZID, 
            T.DeviceID AS DeviceZoneData_DeviceID, 
            T.ZoneData AS DeviceZoneData_ZoneData, 
            True AS _from0
        FROM CentralDBModelStoreContainer.DeviceZoneData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblNok
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView221()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblNok", @"
    SELECT VALUE -- Constructing tblNok
        [CentralDBModel.Store.tblNok](T1.tblNok_ID, T1.tblNok_Name, T1.tblNok_Description, T1.tblNok_IsAlert, T1.tblNok_IsLoop)
    FROM (
        SELECT 
            T.ID AS tblNok_ID, 
            T.Name AS tblNok_Name, 
            T.Description AS tblNok_Description, 
            T.IsAlert AS tblNok_IsAlert, 
            T.IsLoop AS tblNok_IsLoop, 
            True AS _from0
        FROM Entities.tblNok AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblNok
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView222()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblNok", @"
    SELECT VALUE -- Constructing tblNok
        [CentralDBModel.tblNok](T1.tblNok_ID, T1.tblNok_Name, T1.tblNok_Description, T1.tblNok_IsAlert, T1.tblNok_IsLoop)
    FROM (
        SELECT 
            T.ID AS tblNok_ID, 
            T.Name AS tblNok_Name, 
            T.Description AS tblNok_Description, 
            T.IsAlert AS tblNok_IsAlert, 
            T.IsLoop AS tblNok_IsLoop, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblNok AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tbluserassigmentlog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView223()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tbluserassigmentlog", @"
    SELECT VALUE -- Constructing tbluserassigmentlog
        [CentralDBModel.Store.tbluserassigmentlog](T1.tbluserassigmentlog_ID, T1.tbluserassigmentlog_AlertID, T1.tbluserassigmentlog_ExistingMembershipID, T1.tbluserassigmentlog_NewMembershipID, T1.tbluserassigmentlog_updatedatetime, T1.tbluserassigmentlog_OperationsMasterID, T1.tbluserassigmentlog_AuthToken)
    FROM (
        SELECT 
            T.ID AS tbluserassigmentlog_ID, 
            T.AlertID AS tbluserassigmentlog_AlertID, 
            T.ExistingMembershipID AS tbluserassigmentlog_ExistingMembershipID, 
            T.NewMembershipID AS tbluserassigmentlog_NewMembershipID, 
            T.updatedatetime AS tbluserassigmentlog_updatedatetime, 
            T.OperationsMasterID AS tbluserassigmentlog_OperationsMasterID, 
            T.AuthToken AS tbluserassigmentlog_AuthToken, 
            True AS _from0
        FROM Entities.tbluserassigmentlog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tbluserassigmentlog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView224()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tbluserassigmentlog", @"
    SELECT VALUE -- Constructing tbluserassigmentlog
        [CentralDBModel.tbluserassigmentlog](T1.tbluserassigmentlog_ID, T1.tbluserassigmentlog_AlertID, T1.tbluserassigmentlog_ExistingMembershipID, T1.tbluserassigmentlog_NewMembershipID, T1.tbluserassigmentlog_updatedatetime, T1.tbluserassigmentlog_OperationsMasterID, T1.tbluserassigmentlog_AuthToken)
    FROM (
        SELECT 
            T.ID AS tbluserassigmentlog_ID, 
            T.AlertID AS tbluserassigmentlog_AlertID, 
            T.ExistingMembershipID AS tbluserassigmentlog_ExistingMembershipID, 
            T.NewMembershipID AS tbluserassigmentlog_NewMembershipID, 
            T.updatedatetime AS tbluserassigmentlog_updatedatetime, 
            T.OperationsMasterID AS tbluserassigmentlog_OperationsMasterID, 
            T.AuthToken AS tbluserassigmentlog_AuthToken, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tbluserassigmentlog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblVehicleCounter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblVehicleCounter", @"
    SELECT VALUE -- Constructing tblVehicleCounter
        [CentralDBModel.Store.tblVehicleCounter](T1.tblVehicleCounter_ID, T1.tblVehicleCounter_LaneID, T1.tblVehicleCounter_VehicleTypeID, T1.tblVehicleCounter_TxnDateTime, T1.tblVehicleCounter_Count, T1.tblVehicleCounter_DeviceID)
    FROM (
        SELECT 
            T.ID AS tblVehicleCounter_ID, 
            T.LaneID AS tblVehicleCounter_LaneID, 
            T.VehicleTypeID AS tblVehicleCounter_VehicleTypeID, 
            T.TxnDateTime AS tblVehicleCounter_TxnDateTime, 
            T.Count AS tblVehicleCounter_Count, 
            T.DeviceID AS tblVehicleCounter_DeviceID, 
            True AS _from0
        FROM Entities.tblVehicleCounter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblVehicleCounter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView226()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblVehicleCounter", @"
    SELECT VALUE -- Constructing tblVehicleCounter
        [CentralDBModel.tblVehicleCounter](T1.tblVehicleCounter_ID, T1.tblVehicleCounter_LaneID, T1.tblVehicleCounter_VehicleTypeID, T1.tblVehicleCounter_TxnDateTime, T1.tblVehicleCounter_Count, T1.tblVehicleCounter_DeviceID)
    FROM (
        SELECT 
            T.ID AS tblVehicleCounter_ID, 
            T.LaneID AS tblVehicleCounter_LaneID, 
            T.VehicleTypeID AS tblVehicleCounter_VehicleTypeID, 
            T.TxnDateTime AS tblVehicleCounter_TxnDateTime, 
            T.Count AS tblVehicleCounter_Count, 
            T.DeviceID AS tblVehicleCounter_DeviceID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblVehicleCounter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.VehicleTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView227()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.VehicleTypeMaster", @"
    SELECT VALUE -- Constructing VehicleTypeMaster
        [CentralDBModel.Store.VehicleTypeMaster](T1.VehicleTypeMaster_VehicleTypeID, T1.VehicleTypeMaster_Name, T1.VehicleTypeMaster_Description)
    FROM (
        SELECT 
            T.VehicleTypeID AS VehicleTypeMaster_VehicleTypeID, 
            T.Name AS VehicleTypeMaster_Name, 
            T.Description AS VehicleTypeMaster_Description, 
            True AS _from0
        FROM Entities.VehicleTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.VehicleTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView228()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.VehicleTypeMaster", @"
    SELECT VALUE -- Constructing VehicleTypeMaster
        [CentralDBModel.VehicleTypeMaster](T1.VehicleTypeMaster_VehicleTypeID, T1.VehicleTypeMaster_Name, T1.VehicleTypeMaster_Description)
    FROM (
        SELECT 
            T.VehicleTypeID AS VehicleTypeMaster_VehicleTypeID, 
            T.Name AS VehicleTypeMaster_Name, 
            T.Description AS VehicleTypeMaster_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.VehicleTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.WebClientAudit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView229()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.WebClientAudit", @"
    SELECT VALUE -- Constructing WebClientAudit
        [CentralDBModel.Store.WebClientAudit](T1.WebClientAudit_ID, T1.WebClientAudit_Identifier, T1.WebClientAudit_LoginDateTime)
    FROM (
        SELECT 
            T.ID AS WebClientAudit_ID, 
            T.Identifier AS WebClientAudit_Identifier, 
            T.LoginDateTime AS WebClientAudit_LoginDateTime, 
            True AS _from0
        FROM Entities.WebClientAudit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.WebClientAudit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView230()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.WebClientAudit", @"
    SELECT VALUE -- Constructing WebClientAudit
        [CentralDBModel.WebClientAudit](T1.WebClientAudit_ID, T1.WebClientAudit_Identifier, T1.WebClientAudit_LoginDateTime)
    FROM (
        SELECT 
            T.ID AS WebClientAudit_ID, 
            T.Identifier AS WebClientAudit_Identifier, 
            T.LoginDateTime AS WebClientAudit_LoginDateTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.WebClientAudit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblDeviceGeoTrackHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView231()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblDeviceGeoTrackHistory", @"
    SELECT VALUE -- Constructing tblDeviceGeoTrackHistory
        [CentralDBModel.Store.tblDeviceGeoTrackHistory](T1.tblDeviceGeoTrackHistory_DevMovHisID, T1.tblDeviceGeoTrackHistory_DevId, T1.tblDeviceGeoTrackHistory_AssetName, T1.tblDeviceGeoTrackHistory_LATITUDE, T1.tblDeviceGeoTrackHistory_LONGITUDE, T1.tblDeviceGeoTrackHistory_SPEED, T1.tblDeviceGeoTrackHistory_HEADING, T1.tblDeviceGeoTrackHistory_POSDATETIME, T1.tblDeviceGeoTrackHistory_IGNSTATUS, T1.tblDeviceGeoTrackHistory_LOCATION, T1.tblDeviceGeoTrackHistory_LocDateTime)
    FROM (
        SELECT 
            T.DevMovHisID AS tblDeviceGeoTrackHistory_DevMovHisID, 
            T.DevId AS tblDeviceGeoTrackHistory_DevId, 
            T.AssetName AS tblDeviceGeoTrackHistory_AssetName, 
            T.LATITUDE AS tblDeviceGeoTrackHistory_LATITUDE, 
            T.LONGITUDE AS tblDeviceGeoTrackHistory_LONGITUDE, 
            T.SPEED AS tblDeviceGeoTrackHistory_SPEED, 
            T.HEADING AS tblDeviceGeoTrackHistory_HEADING, 
            T.POSDATETIME AS tblDeviceGeoTrackHistory_POSDATETIME, 
            T.IGNSTATUS AS tblDeviceGeoTrackHistory_IGNSTATUS, 
            T.LOCATION AS tblDeviceGeoTrackHistory_LOCATION, 
            T.LocDateTime AS tblDeviceGeoTrackHistory_LocDateTime, 
            True AS _from0
        FROM Entities.tblDeviceGeoTrackHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblDeviceGeoTrackHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView232()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblDeviceGeoTrackHistory", @"
    SELECT VALUE -- Constructing tblDeviceGeoTrackHistory
        [CentralDBModel.tblDeviceGeoTrackHistory](T1.tblDeviceGeoTrackHistory_DevMovHisID, T1.tblDeviceGeoTrackHistory_DevId, T1.tblDeviceGeoTrackHistory_AssetName, T1.tblDeviceGeoTrackHistory_LATITUDE, T1.tblDeviceGeoTrackHistory_LONGITUDE, T1.tblDeviceGeoTrackHistory_SPEED, T1.tblDeviceGeoTrackHistory_HEADING, T1.tblDeviceGeoTrackHistory_POSDATETIME, T1.tblDeviceGeoTrackHistory_IGNSTATUS, T1.tblDeviceGeoTrackHistory_LOCATION, T1.tblDeviceGeoTrackHistory_LocDateTime)
    FROM (
        SELECT 
            T.DevMovHisID AS tblDeviceGeoTrackHistory_DevMovHisID, 
            T.DevId AS tblDeviceGeoTrackHistory_DevId, 
            T.AssetName AS tblDeviceGeoTrackHistory_AssetName, 
            T.LATITUDE AS tblDeviceGeoTrackHistory_LATITUDE, 
            T.LONGITUDE AS tblDeviceGeoTrackHistory_LONGITUDE, 
            T.SPEED AS tblDeviceGeoTrackHistory_SPEED, 
            T.HEADING AS tblDeviceGeoTrackHistory_HEADING, 
            T.POSDATETIME AS tblDeviceGeoTrackHistory_POSDATETIME, 
            T.IGNSTATUS AS tblDeviceGeoTrackHistory_IGNSTATUS, 
            T.LOCATION AS tblDeviceGeoTrackHistory_LOCATION, 
            T.LocDateTime AS tblDeviceGeoTrackHistory_LocDateTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblDeviceGeoTrackHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblGeoFencingAlert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView233()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblGeoFencingAlert", "\r\n    SELECT VALUE -- Constructing tblGeoFencingAlert\r\n        [CentralDBModel.St" +
                    "ore.tblGeoFencingAlert](T1.tblGeoFencingAlert_GeoFenceAlertID, T1.tblGeoFencingA" +
                    "lert_AlertId, T1.tblGeoFencingAlert_Type, T1.tblGeoFencingAlert_Speed, T1.tblGeo" +
                    "FencingAlert_Lat, T1.tblGeoFencingAlert_Long, T1.tblGeoFencingAlert_Direction, T" +
                    "1.tblGeoFencingAlert_IMEI, T1.tblGeoFencingAlert_Assetname, T1.tblGeoFencingAler" +
                    "t_Regno, T1.tblGeoFencingAlert_username, T1.tblGeoFencingAlert_Eventvalue, T1.tb" +
                    "lGeoFencingAlert_AlertDatetime, T1.tblGeoFencingAlert_Location, T1.tblGeoFencing" +
                    "Alert_AlertDate)\r\n    FROM (\r\n        SELECT \r\n            T.GeoFenceAlertID AS " +
                    "tblGeoFencingAlert_GeoFenceAlertID, \r\n            T.AlertId AS tblGeoFencingAler" +
                    "t_AlertId, \r\n            T.Type AS tblGeoFencingAlert_Type, \r\n            T.Spee" +
                    "d AS tblGeoFencingAlert_Speed, \r\n            T.Lat AS tblGeoFencingAlert_Lat, \r\n" +
                    "            T.Long AS tblGeoFencingAlert_Long, \r\n            T.Direction AS tblG" +
                    "eoFencingAlert_Direction, \r\n            T.IMEI AS tblGeoFencingAlert_IMEI, \r\n   " +
                    "         T.Assetname AS tblGeoFencingAlert_Assetname, \r\n            T.Regno AS t" +
                    "blGeoFencingAlert_Regno, \r\n            T.username AS tblGeoFencingAlert_username" +
                    ", \r\n            T.Eventvalue AS tblGeoFencingAlert_Eventvalue, \r\n            T.A" +
                    "lertDatetime AS tblGeoFencingAlert_AlertDatetime, \r\n            T.Location AS tb" +
                    "lGeoFencingAlert_Location, \r\n            T.AlertDate AS tblGeoFencingAlert_Alert" +
                    "Date, \r\n            True AS _from0\r\n        FROM Entities.tblGeoFencingAlert AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblGeoFencingAlert
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblGeoFencingAlert", "\r\n    SELECT VALUE -- Constructing tblGeoFencingAlert\r\n        [CentralDBModel.tb" +
                    "lGeoFencingAlert](T1.tblGeoFencingAlert_GeoFenceAlertID, T1.tblGeoFencingAlert_A" +
                    "lertId, T1.tblGeoFencingAlert_Type, T1.tblGeoFencingAlert_Speed, T1.tblGeoFencin" +
                    "gAlert_Lat, T1.tblGeoFencingAlert_Long, T1.tblGeoFencingAlert_Direction, T1.tblG" +
                    "eoFencingAlert_IMEI, T1.tblGeoFencingAlert_Assetname, T1.tblGeoFencingAlert_Regn" +
                    "o, T1.tblGeoFencingAlert_username, T1.tblGeoFencingAlert_Eventvalue, T1.tblGeoFe" +
                    "ncingAlert_AlertDatetime, T1.tblGeoFencingAlert_Location, T1.tblGeoFencingAlert_" +
                    "AlertDate)\r\n    FROM (\r\n        SELECT \r\n            T.GeoFenceAlertID AS tblGeo" +
                    "FencingAlert_GeoFenceAlertID, \r\n            T.AlertId AS tblGeoFencingAlert_Aler" +
                    "tId, \r\n            T.Type AS tblGeoFencingAlert_Type, \r\n            T.Speed AS t" +
                    "blGeoFencingAlert_Speed, \r\n            T.Lat AS tblGeoFencingAlert_Lat, \r\n      " +
                    "      T.Long AS tblGeoFencingAlert_Long, \r\n            T.Direction AS tblGeoFenc" +
                    "ingAlert_Direction, \r\n            T.IMEI AS tblGeoFencingAlert_IMEI, \r\n         " +
                    "   T.Assetname AS tblGeoFencingAlert_Assetname, \r\n            T.Regno AS tblGeoF" +
                    "encingAlert_Regno, \r\n            T.username AS tblGeoFencingAlert_username, \r\n  " +
                    "          T.Eventvalue AS tblGeoFencingAlert_Eventvalue, \r\n            T.AlertDa" +
                    "tetime AS tblGeoFencingAlert_AlertDatetime, \r\n            T.Location AS tblGeoFe" +
                    "ncingAlert_Location, \r\n            T.AlertDate AS tblGeoFencingAlert_AlertDate, " +
                    "\r\n            True AS _from0\r\n        FROM CentralDBModelStoreContainer.tblGeoFe" +
                    "ncingAlert AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblGeoFencingHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView235()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2324);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblGeoFencingHistory\r\n        [CentralDBModel");
            viewString.Append(".Store.tblGeoFencingHistory](T1.tblGeoFencingHistory_GeoFenceHistoryID, T1.tblGe");
            viewString.Append("oFencingHistory_DeviceId, T1.tblGeoFencingHistory_AlertId, T1.tblGeoFencingHisto");
            viewString.Append("ry_Lat, T1.tblGeoFencingHistory_Long, T1.tblGeoFencingHistory_DateTime, T1.tblGe");
            viewString.Append("oFencingHistory_StartDate, T1.tblGeoFencingHistory_EndDate, T1.tblGeoFencingHist");
            viewString.Append("ory_Heading, T1.tblGeoFencingHistory_Speed, T1.tblGeoFencingHistory_Location, T1");
            viewString.Append(".tblGeoFencingHistory_Status, T1.tblGeoFencingHistory_Battery, T1.tblGeoFencingH");
            viewString.Append("istory_Asset, T1.tblGeoFencingHistory_Eventno, T1.tblGeoFencingHistory_Eventname");
            viewString.Append(", T1.tblGeoFencingHistory_Legend, T1.tblGeoFencingHistory_Remark, T1.tblGeoFenci");
            viewString.Append("ngHistory_Remarkdate, T1.tblGeoFencingHistory_Tripname, T1.tblGeoFencingHistory_");
            viewString.Append("Distance, T1.tblGeoFencingHistory_User, T1.tblGeoFencingHistory_HisDateTime)\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.GeoFenceHistoryID AS tblGeoFencingHisto");
            viewString.Append("ry_GeoFenceHistoryID, \r\n            T.DeviceId AS tblGeoFencingHistory_DeviceId,");
            viewString.Append(" \r\n            T.AlertId AS tblGeoFencingHistory_AlertId, \r\n            T.Lat AS");
            viewString.Append(" tblGeoFencingHistory_Lat, \r\n            T.Long AS tblGeoFencingHistory_Long, \r\n");
            viewString.Append("            T.DateTime AS tblGeoFencingHistory_DateTime, \r\n            T.StartDa");
            viewString.Append("te AS tblGeoFencingHistory_StartDate, \r\n            T.EndDate AS tblGeoFencingHi");
            viewString.Append("story_EndDate, \r\n            T.Heading AS tblGeoFencingHistory_Heading, \r\n      ");
            viewString.Append("      T.Speed AS tblGeoFencingHistory_Speed, \r\n            T.Location AS tblGeoF");
            viewString.Append("encingHistory_Location, \r\n            T.Status AS tblGeoFencingHistory_Status, \r");
            viewString.Append("\n            T.Battery AS tblGeoFencingHistory_Battery, \r\n            T.Asset AS");
            viewString.Append(" tblGeoFencingHistory_Asset, \r\n            T.Eventno AS tblGeoFencingHistory_Eve");
            viewString.Append("ntno, \r\n            T.Eventname AS tblGeoFencingHistory_Eventname, \r\n           ");
            viewString.Append(" T.Legend AS tblGeoFencingHistory_Legend, \r\n            T.Remark AS tblGeoFencin");
            viewString.Append("gHistory_Remark, \r\n            T.Remarkdate AS tblGeoFencingHistory_Remarkdate, ");
            viewString.Append("\r\n            T.Tripname AS tblGeoFencingHistory_Tripname, \r\n            T.Dista");
            viewString.Append("nce AS tblGeoFencingHistory_Distance, \r\n            T.User AS tblGeoFencingHisto");
            viewString.Append("ry_User, \r\n            T.HisDateTime AS tblGeoFencingHistory_HisDateTime, \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM Entities.tblGeoFencingHistory AS T\r\n    ) A");
            viewString.Append("S T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblGeoFencingHistory", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblGeoFencingHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView236()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2338);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblGeoFencingHistory\r\n        [CentralDBModel");
            viewString.Append(".tblGeoFencingHistory](T1.tblGeoFencingHistory_GeoFenceHistoryID, T1.tblGeoFenci");
            viewString.Append("ngHistory_DeviceId, T1.tblGeoFencingHistory_AlertId, T1.tblGeoFencingHistory_Lat");
            viewString.Append(", T1.tblGeoFencingHistory_Long, T1.tblGeoFencingHistory_DateTime, T1.tblGeoFenci");
            viewString.Append("ngHistory_StartDate, T1.tblGeoFencingHistory_EndDate, T1.tblGeoFencingHistory_He");
            viewString.Append("ading, T1.tblGeoFencingHistory_Speed, T1.tblGeoFencingHistory_Location, T1.tblGe");
            viewString.Append("oFencingHistory_Status, T1.tblGeoFencingHistory_Battery, T1.tblGeoFencingHistory");
            viewString.Append("_Asset, T1.tblGeoFencingHistory_Eventno, T1.tblGeoFencingHistory_Eventname, T1.t");
            viewString.Append("blGeoFencingHistory_Legend, T1.tblGeoFencingHistory_Remark, T1.tblGeoFencingHist");
            viewString.Append("ory_Remarkdate, T1.tblGeoFencingHistory_Tripname, T1.tblGeoFencingHistory_Distan");
            viewString.Append("ce, T1.tblGeoFencingHistory_User, T1.tblGeoFencingHistory_HisDateTime)\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.GeoFenceHistoryID AS tblGeoFencingHistory_Geo");
            viewString.Append("FenceHistoryID, \r\n            T.DeviceId AS tblGeoFencingHistory_DeviceId, \r\n   ");
            viewString.Append("         T.AlertId AS tblGeoFencingHistory_AlertId, \r\n            T.Lat AS tblGe");
            viewString.Append("oFencingHistory_Lat, \r\n            T.Long AS tblGeoFencingHistory_Long, \r\n      ");
            viewString.Append("      T.DateTime AS tblGeoFencingHistory_DateTime, \r\n            T.StartDate AS ");
            viewString.Append("tblGeoFencingHistory_StartDate, \r\n            T.EndDate AS tblGeoFencingHistory_");
            viewString.Append("EndDate, \r\n            T.Heading AS tblGeoFencingHistory_Heading, \r\n            ");
            viewString.Append("T.Speed AS tblGeoFencingHistory_Speed, \r\n            T.Location AS tblGeoFencing");
            viewString.Append("History_Location, \r\n            T.Status AS tblGeoFencingHistory_Status, \r\n     ");
            viewString.Append("       T.Battery AS tblGeoFencingHistory_Battery, \r\n            T.Asset AS tblGe");
            viewString.Append("oFencingHistory_Asset, \r\n            T.Eventno AS tblGeoFencingHistory_Eventno, ");
            viewString.Append("\r\n            T.Eventname AS tblGeoFencingHistory_Eventname, \r\n            T.Leg");
            viewString.Append("end AS tblGeoFencingHistory_Legend, \r\n            T.Remark AS tblGeoFencingHisto");
            viewString.Append("ry_Remark, \r\n            T.Remarkdate AS tblGeoFencingHistory_Remarkdate, \r\n    ");
            viewString.Append("        T.Tripname AS tblGeoFencingHistory_Tripname, \r\n            T.Distance AS");
            viewString.Append(" tblGeoFencingHistory_Distance, \r\n            T.User AS tblGeoFencingHistory_Use");
            viewString.Append("r, \r\n            T.HisDateTime AS tblGeoFencingHistory_HisDateTime, \r\n          ");
            viewString.Append("  True AS _from0\r\n        FROM CentralDBModelStoreContainer.tblGeoFencingHistory");
            viewString.Append(" AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblGeoFencingHistory", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblMeonMembers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView237()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblMeonMembers", @"
    SELECT VALUE -- Constructing tblMeonMembers
        [CentralDBModel.Store.tblMeonMembers](T1.tblMeonMembers_ID, T1.[tblMeonMembers.IMEI_Number], T1.[tblMeonMembers.Mobile_Number], T1.tblMeonMembers_CustomerID, T1.tblMeonMembers_DeviceID, T1.tblMeonMembers_EscallationMember)
    FROM (
        SELECT 
            T.ID AS tblMeonMembers_ID, 
            T.IMEI_Number AS [tblMeonMembers.IMEI_Number], 
            T.Mobile_Number AS [tblMeonMembers.Mobile_Number], 
            T.CustomerID AS tblMeonMembers_CustomerID, 
            T.DeviceID AS tblMeonMembers_DeviceID, 
            T.EscallationMember AS tblMeonMembers_EscallationMember, 
            True AS _from0
        FROM Entities.tblMeonMembers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblMeonMembers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView238()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblMeonMembers", @"
    SELECT VALUE -- Constructing tblMeonMembers
        [CentralDBModel.tblMeonMembers](T1.tblMeonMembers_ID, T1.[tblMeonMembers.IMEI_Number], T1.[tblMeonMembers.Mobile_Number], T1.tblMeonMembers_CustomerID, T1.tblMeonMembers_DeviceID, T1.tblMeonMembers_EscallationMember)
    FROM (
        SELECT 
            T.ID AS tblMeonMembers_ID, 
            T.IMEI_Number AS [tblMeonMembers.IMEI_Number], 
            T.Mobile_Number AS [tblMeonMembers.Mobile_Number], 
            T.CustomerID AS tblMeonMembers_CustomerID, 
            T.DeviceID AS tblMeonMembers_DeviceID, 
            T.EscallationMember AS tblMeonMembers_EscallationMember, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblMeonMembers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblgeofencesequence
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblgeofencesequence", @"
    SELECT VALUE -- Constructing tblgeofencesequence
        [CentralDBModel.Store.tblgeofencesequence](T1.tblgeofencesequence_SeqID, T1.tblgeofencesequence_DeviceID, T1.tblgeofencesequence_SiteID, T1.tblgeofencesequence_SeqNo)
    FROM (
        SELECT 
            T.SeqID AS tblgeofencesequence_SeqID, 
            T.DeviceID AS tblgeofencesequence_DeviceID, 
            T.SiteID AS tblgeofencesequence_SiteID, 
            T.SeqNo AS tblgeofencesequence_SeqNo, 
            True AS _from0
        FROM Entities.tblgeofencesequence AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblgeofencesequence
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView240()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblgeofencesequence", @"
    SELECT VALUE -- Constructing tblgeofencesequence
        [CentralDBModel.tblgeofencesequence](T1.tblgeofencesequence_SeqID, T1.tblgeofencesequence_DeviceID, T1.tblgeofencesequence_SiteID, T1.tblgeofencesequence_SeqNo)
    FROM (
        SELECT 
            T.SeqID AS tblgeofencesequence_SeqID, 
            T.DeviceID AS tblgeofencesequence_DeviceID, 
            T.SiteID AS tblgeofencesequence_SiteID, 
            T.SeqNo AS tblgeofencesequence_SeqNo, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblgeofencesequence AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblCameraStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblCameraStatus", @"
    SELECT VALUE -- Constructing tblCameraStatus
        [CentralDBModel.Store.tblCameraStatus](T1.tblCameraStatus_CameraStatusID, T1.tblCameraStatus_DeviceID, T1.tblCameraStatus_Status, T1.tblCameraStatus_Remarks, T1.tblCameraStatus_CameraIp, T1.tblCameraStatus_CameraName, T1.tblCameraStatus_LastUpdatedTime)
    FROM (
        SELECT 
            T.CameraStatusID AS tblCameraStatus_CameraStatusID, 
            T.DeviceID AS tblCameraStatus_DeviceID, 
            T.Status AS tblCameraStatus_Status, 
            T.Remarks AS tblCameraStatus_Remarks, 
            T.CameraIp AS tblCameraStatus_CameraIp, 
            T.CameraName AS tblCameraStatus_CameraName, 
            T.LastUpdatedTime AS tblCameraStatus_LastUpdatedTime, 
            True AS _from0
        FROM Entities.tblCameraStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblCameraStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView242()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblCameraStatus", @"
    SELECT VALUE -- Constructing tblCameraStatus
        [CentralDBModel.tblCameraStatus](T1.tblCameraStatus_CameraStatusID, T1.tblCameraStatus_DeviceID, T1.tblCameraStatus_Status, T1.tblCameraStatus_Remarks, T1.tblCameraStatus_CameraIp, T1.tblCameraStatus_CameraName, T1.tblCameraStatus_LastUpdatedTime)
    FROM (
        SELECT 
            T.CameraStatusID AS tblCameraStatus_CameraStatusID, 
            T.DeviceID AS tblCameraStatus_DeviceID, 
            T.Status AS tblCameraStatus_Status, 
            T.Remarks AS tblCameraStatus_Remarks, 
            T.CameraIp AS tblCameraStatus_CameraIp, 
            T.CameraName AS tblCameraStatus_CameraName, 
            T.LastUpdatedTime AS tblCameraStatus_LastUpdatedTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblCameraStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblANPRMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView243()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblANPRMaster", @"
    SELECT VALUE -- Constructing tblANPRMaster
        [CentralDBModel.Store.tblANPRMaster](T1.tblANPRMaster_ANPRID, T1.tblANPRMaster_DeviceID, T1.tblANPRMaster_ANPRCameraName, T1.tblANPRMaster_appkey, T1.tblANPRMaster_ANPRDeviceID, T1.tblANPRMaster_CameraIPaddress, T1.tblANPRMaster_CamPort, T1.tblANPRMaster_Camusername, T1.tblANPRMaster_CamPassword, T1.tblANPRMaster_CamregisteredStatus, T1.tblANPRMaster_Status)
    FROM (
        SELECT 
            T.ANPRID AS tblANPRMaster_ANPRID, 
            T.DeviceID AS tblANPRMaster_DeviceID, 
            T.ANPRCameraName AS tblANPRMaster_ANPRCameraName, 
            T.appkey AS tblANPRMaster_appkey, 
            T.ANPRDeviceID AS tblANPRMaster_ANPRDeviceID, 
            T.CameraIPaddress AS tblANPRMaster_CameraIPaddress, 
            T.CamPort AS tblANPRMaster_CamPort, 
            T.Camusername AS tblANPRMaster_Camusername, 
            T.CamPassword AS tblANPRMaster_CamPassword, 
            T.CamregisteredStatus AS tblANPRMaster_CamregisteredStatus, 
            T.Status AS tblANPRMaster_Status, 
            True AS _from0
        FROM Entities.tblANPRMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblANPRMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView244()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblANPRMaster", @"
    SELECT VALUE -- Constructing tblANPRMaster
        [CentralDBModel.tblANPRMaster](T1.tblANPRMaster_ANPRID, T1.tblANPRMaster_DeviceID, T1.tblANPRMaster_ANPRCameraName, T1.tblANPRMaster_appkey, T1.tblANPRMaster_ANPRDeviceID, T1.tblANPRMaster_CameraIPaddress, T1.tblANPRMaster_CamPort, T1.tblANPRMaster_Camusername, T1.tblANPRMaster_CamPassword, T1.tblANPRMaster_CamregisteredStatus, T1.tblANPRMaster_Status)
    FROM (
        SELECT 
            T.ANPRID AS tblANPRMaster_ANPRID, 
            T.DeviceID AS tblANPRMaster_DeviceID, 
            T.ANPRCameraName AS tblANPRMaster_ANPRCameraName, 
            T.appkey AS tblANPRMaster_appkey, 
            T.ANPRDeviceID AS tblANPRMaster_ANPRDeviceID, 
            T.CameraIPaddress AS tblANPRMaster_CameraIPaddress, 
            T.CamPort AS tblANPRMaster_CamPort, 
            T.Camusername AS tblANPRMaster_Camusername, 
            T.CamPassword AS tblANPRMaster_CamPassword, 
            T.CamregisteredStatus AS tblANPRMaster_CamregisteredStatus, 
            T.Status AS tblANPRMaster_Status, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblANPRMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblUserSiteMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView245()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblUserSiteMaster", @"
    SELECT VALUE -- Constructing tblUserSiteMaster
        [CentralDBModel.Store.tblUserSiteMaster](T1.tblUserSiteMaster_UserSiteID, T1.tblUserSiteMaster_UserID, T1.tblUserSiteMaster_SiteID, T1.tblUserSiteMaster_UserType)
    FROM (
        SELECT 
            T.UserSiteID AS tblUserSiteMaster_UserSiteID, 
            T.UserID AS tblUserSiteMaster_UserID, 
            T.SiteID AS tblUserSiteMaster_SiteID, 
            T.UserType AS tblUserSiteMaster_UserType, 
            True AS _from0
        FROM Entities.tblUserSiteMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblUserSiteMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView246()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblUserSiteMaster", @"
    SELECT VALUE -- Constructing tblUserSiteMaster
        [CentralDBModel.tblUserSiteMaster](T1.tblUserSiteMaster_UserSiteID, T1.tblUserSiteMaster_UserID, T1.tblUserSiteMaster_SiteID, T1.tblUserSiteMaster_UserType)
    FROM (
        SELECT 
            T.UserSiteID AS tblUserSiteMaster_UserSiteID, 
            T.UserID AS tblUserSiteMaster_UserID, 
            T.SiteID AS tblUserSiteMaster_SiteID, 
            T.UserType AS tblUserSiteMaster_UserType, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblUserSiteMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblRssAlertMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView247()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblRssAlertMaster", @"
    SELECT VALUE -- Constructing tblRssAlertMaster
        [CentralDBModel.Store.tblRssAlertMaster](T1.tblRssAlertMaster_RssfeebackID, T1.tblRssAlertMaster_NegativeComments)
    FROM (
        SELECT 
            T.RssfeebackID AS tblRssAlertMaster_RssfeebackID, 
            T.NegativeComments AS tblRssAlertMaster_NegativeComments, 
            True AS _from0
        FROM Entities.tblRssAlertMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblRssAlertMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView248()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblRssAlertMaster", @"
    SELECT VALUE -- Constructing tblRssAlertMaster
        [CentralDBModel.tblRssAlertMaster](T1.tblRssAlertMaster_RssfeebackID, T1.tblRssAlertMaster_NegativeComments)
    FROM (
        SELECT 
            T.RssfeebackID AS tblRssAlertMaster_RssfeebackID, 
            T.NegativeComments AS tblRssAlertMaster_NegativeComments, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblRssAlertMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblRssFeed
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView249()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblRssFeed", @"
    SELECT VALUE -- Constructing tblRssFeed
        [CentralDBModel.Store.tblRssFeed](T1.tblRssFeed_RSSID, T1.tblRssFeed_RssText, T1.tblRssFeed_RssPublisdateTime, T1.tblRssFeed_RssLastUpdateTime)
    FROM (
        SELECT 
            T.RSSID AS tblRssFeed_RSSID, 
            T.RssText AS tblRssFeed_RssText, 
            T.RssPublisdateTime AS tblRssFeed_RssPublisdateTime, 
            T.RssLastUpdateTime AS tblRssFeed_RssLastUpdateTime, 
            True AS _from0
        FROM Entities.tblRssFeed AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblRssFeed
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView250()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblRssFeed", @"
    SELECT VALUE -- Constructing tblRssFeed
        [CentralDBModel.tblRssFeed](T1.tblRssFeed_RSSID, T1.tblRssFeed_RssText, T1.tblRssFeed_RssPublisdateTime, T1.tblRssFeed_RssLastUpdateTime)
    FROM (
        SELECT 
            T.RSSID AS tblRssFeed_RSSID, 
            T.RssText AS tblRssFeed_RssText, 
            T.RssPublisdateTime AS tblRssFeed_RssPublisdateTime, 
            T.RssLastUpdateTime AS tblRssFeed_RssLastUpdateTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblRssFeed AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblCameraViewMode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView251()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblCameraViewMode", @"
    SELECT VALUE -- Constructing tblCameraViewMode
        [CentralDBModel.Store.tblCameraViewMode](T1.tblCameraViewMode_ID, T1.tblCameraViewMode_CameraID, T1.tblCameraViewMode_FPS, T1.tblCameraViewMode_CameraResolution, T1.tblCameraViewMode_BandWidth, T1.tblCameraViewMode_InstanceRunning, T1.tblCameraViewMode_ISEnabled)
    FROM (
        SELECT 
            T.ID AS tblCameraViewMode_ID, 
            T.CameraID AS tblCameraViewMode_CameraID, 
            T.FPS AS tblCameraViewMode_FPS, 
            T.CameraResolution AS tblCameraViewMode_CameraResolution, 
            T.BandWidth AS tblCameraViewMode_BandWidth, 
            T.InstanceRunning AS tblCameraViewMode_InstanceRunning, 
            T.ISEnabled AS tblCameraViewMode_ISEnabled, 
            True AS _from0
        FROM Entities.tblCameraViewMode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblCameraViewMode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView252()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblCameraViewMode", @"
    SELECT VALUE -- Constructing tblCameraViewMode
        [CentralDBModel.tblCameraViewMode](T1.tblCameraViewMode_ID, T1.tblCameraViewMode_CameraID, T1.tblCameraViewMode_FPS, T1.tblCameraViewMode_CameraResolution, T1.tblCameraViewMode_BandWidth, T1.tblCameraViewMode_InstanceRunning, T1.tblCameraViewMode_ISEnabled)
    FROM (
        SELECT 
            T.ID AS tblCameraViewMode_ID, 
            T.CameraID AS tblCameraViewMode_CameraID, 
            T.FPS AS tblCameraViewMode_FPS, 
            T.CameraResolution AS tblCameraViewMode_CameraResolution, 
            T.BandWidth AS tblCameraViewMode_BandWidth, 
            T.InstanceRunning AS tblCameraViewMode_InstanceRunning, 
            T.ISEnabled AS tblCameraViewMode_ISEnabled, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblCameraViewMode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblAnaLyticsStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView253()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblAnaLyticsStatus", @"
    SELECT VALUE -- Constructing tblAnaLyticsStatus
        [CentralDBModel.Store.tblAnaLyticsStatus](T1.tblAnaLyticsStatus_ID, T1.tblAnaLyticsStatus_DeviceId, T1.tblAnaLyticsStatus_Status, T1.tblAnaLyticsStatus_AnaStartTime, T1.tblAnaLyticsStatus_AnaStopTime)
    FROM (
        SELECT 
            T.ID AS tblAnaLyticsStatus_ID, 
            T.DeviceId AS tblAnaLyticsStatus_DeviceId, 
            T.Status AS tblAnaLyticsStatus_Status, 
            T.AnaStartTime AS tblAnaLyticsStatus_AnaStartTime, 
            T.AnaStopTime AS tblAnaLyticsStatus_AnaStopTime, 
            True AS _from0
        FROM Entities.tblAnaLyticsStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblAnaLyticsStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView254()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblAnaLyticsStatus", @"
    SELECT VALUE -- Constructing tblAnaLyticsStatus
        [CentralDBModel.tblAnaLyticsStatus](T1.tblAnaLyticsStatus_ID, T1.tblAnaLyticsStatus_DeviceId, T1.tblAnaLyticsStatus_Status, T1.tblAnaLyticsStatus_AnaStartTime, T1.tblAnaLyticsStatus_AnaStopTime)
    FROM (
        SELECT 
            T.ID AS tblAnaLyticsStatus_ID, 
            T.DeviceId AS tblAnaLyticsStatus_DeviceId, 
            T.Status AS tblAnaLyticsStatus_Status, 
            T.AnaStartTime AS tblAnaLyticsStatus_AnaStartTime, 
            T.AnaStopTime AS tblAnaLyticsStatus_AnaStopTime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblAnaLyticsStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.AlarmPanelTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView255()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.AlarmPanelTypeMaster", @"
    SELECT VALUE -- Constructing AlarmPanelTypeMaster
        [CentralDBModel.Store.AlarmPanelTypeMaster](T1.AlarmPanelTypeMaster_AlarmPanelTypeId, T1.AlarmPanelTypeMaster_Name, T1.AlarmPanelTypeMaster_Description)
    FROM (
        SELECT 
            T.AlarmPanelTypeId AS AlarmPanelTypeMaster_AlarmPanelTypeId, 
            T.Name AS AlarmPanelTypeMaster_Name, 
            T.Description AS AlarmPanelTypeMaster_Description, 
            True AS _from0
        FROM Entities.AlarmPanelTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.AlarmPanelTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView256()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.AlarmPanelTypeMaster", @"
    SELECT VALUE -- Constructing AlarmPanelTypeMaster
        [CentralDBModel.AlarmPanelTypeMaster](T1.AlarmPanelTypeMaster_AlarmPanelTypeId, T1.AlarmPanelTypeMaster_Name, T1.AlarmPanelTypeMaster_Description)
    FROM (
        SELECT 
            T.AlarmPanelTypeId AS AlarmPanelTypeMaster_AlarmPanelTypeId, 
            T.Name AS AlarmPanelTypeMaster_Name, 
            T.Description AS AlarmPanelTypeMaster_Description, 
            True AS _from0
        FROM CentralDBModelStoreContainer.AlarmPanelTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblCameraBookMark
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView257()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblCameraBookMark", @"
    SELECT VALUE -- Constructing tblCameraBookMark
        [CentralDBModel.Store.tblCameraBookMark](T1.tblCameraBookMark_ID, T1.tblCameraBookMark_DeviceID, T1.tblCameraBookMark_DateTime, T1.tblCameraBookMark_Remark, T1.tblCameraBookMark_Reserve1)
    FROM (
        SELECT 
            T.ID AS tblCameraBookMark_ID, 
            T.DeviceID AS tblCameraBookMark_DeviceID, 
            T.DateTime AS tblCameraBookMark_DateTime, 
            T.Remark AS tblCameraBookMark_Remark, 
            T.Reserve1 AS tblCameraBookMark_Reserve1, 
            True AS _from0
        FROM Entities.tblCameraBookMark AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblCameraBookMark
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView258()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblCameraBookMark", @"
    SELECT VALUE -- Constructing tblCameraBookMark
        [CentralDBModel.tblCameraBookMark](T1.tblCameraBookMark_ID, T1.tblCameraBookMark_DeviceID, T1.tblCameraBookMark_DateTime, T1.tblCameraBookMark_Remark, T1.tblCameraBookMark_Reserve1)
    FROM (
        SELECT 
            T.ID AS tblCameraBookMark_ID, 
            T.DeviceID AS tblCameraBookMark_DeviceID, 
            T.DateTime AS tblCameraBookMark_DateTime, 
            T.Remark AS tblCameraBookMark_Remark, 
            T.Reserve1 AS tblCameraBookMark_Reserve1, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblCameraBookMark AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblPTZPresetAssociation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView259()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblPTZPresetAssociation", @"
    SELECT VALUE -- Constructing tblPTZPresetAssociation
        [CentralDBModel.Store.tblPTZPresetAssociation](T1.tblPTZPresetAssociation_ID, T1.tblPTZPresetAssociation_DevId, T1.tblPTZPresetAssociation_PTZCamId, T1.tblPTZPresetAssociation_PresetNo, T1.tblPTZPresetAssociation_Remarks)
    FROM (
        SELECT 
            T.ID AS tblPTZPresetAssociation_ID, 
            T.DevId AS tblPTZPresetAssociation_DevId, 
            T.PTZCamId AS tblPTZPresetAssociation_PTZCamId, 
            T.PresetNo AS tblPTZPresetAssociation_PresetNo, 
            T.Remarks AS tblPTZPresetAssociation_Remarks, 
            True AS _from0
        FROM Entities.tblPTZPresetAssociation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblPTZPresetAssociation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView260()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblPTZPresetAssociation", @"
    SELECT VALUE -- Constructing tblPTZPresetAssociation
        [CentralDBModel.tblPTZPresetAssociation](T1.tblPTZPresetAssociation_ID, T1.tblPTZPresetAssociation_DevId, T1.tblPTZPresetAssociation_PTZCamId, T1.tblPTZPresetAssociation_PresetNo, T1.tblPTZPresetAssociation_Remarks)
    FROM (
        SELECT 
            T.ID AS tblPTZPresetAssociation_ID, 
            T.DevId AS tblPTZPresetAssociation_DevId, 
            T.PTZCamId AS tblPTZPresetAssociation_PTZCamId, 
            T.PresetNo AS tblPTZPresetAssociation_PresetNo, 
            T.Remarks AS tblPTZPresetAssociation_Remarks, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblPTZPresetAssociation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblDvrChanelMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView261()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblDvrChanelMaster", @"
    SELECT VALUE -- Constructing tblDvrChanelMaster
        [CentralDBModel.Store.tblDvrChanelMaster](T1.tblDvrChanelMaster_ID, T1.tblDvrChanelMaster_InterfaceId, T1.tblDvrChanelMaster_Chanel)
    FROM (
        SELECT 
            T.ID AS tblDvrChanelMaster_ID, 
            T.InterfaceId AS tblDvrChanelMaster_InterfaceId, 
            T.Chanel AS tblDvrChanelMaster_Chanel, 
            True AS _from0
        FROM Entities.tblDvrChanelMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblDvrChanelMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView262()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblDvrChanelMaster", @"
    SELECT VALUE -- Constructing tblDvrChanelMaster
        [CentralDBModel.tblDvrChanelMaster](T1.tblDvrChanelMaster_ID, T1.tblDvrChanelMaster_InterfaceId, T1.tblDvrChanelMaster_Chanel)
    FROM (
        SELECT 
            T.ID AS tblDvrChanelMaster_ID, 
            T.InterfaceId AS tblDvrChanelMaster_InterfaceId, 
            T.Chanel AS tblDvrChanelMaster_Chanel, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblDvrChanelMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblCustomMapinfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView263()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblCustomMapinfo", @"
    SELECT VALUE -- Constructing tblCustomMapinfo
        [CentralDBModel.Store.tblCustomMapinfo](T1.tblCustomMapinfo_ID, T1.tblCustomMapinfo_SiteID, T1.tblCustomMapinfo_SiteName, T1.tblCustomMapinfo_Map, T1.tblCustomMapinfo_IsBingMap)
    FROM (
        SELECT 
            T.ID AS tblCustomMapinfo_ID, 
            T.SiteID AS tblCustomMapinfo_SiteID, 
            T.SiteName AS tblCustomMapinfo_SiteName, 
            T.Map AS tblCustomMapinfo_Map, 
            T.IsBingMap AS tblCustomMapinfo_IsBingMap, 
            True AS _from0
        FROM Entities.tblCustomMapinfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblCustomMapinfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView264()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblCustomMapinfo", @"
    SELECT VALUE -- Constructing tblCustomMapinfo
        [CentralDBModel.tblCustomMapinfo](T1.tblCustomMapinfo_ID, T1.tblCustomMapinfo_SiteID, T1.tblCustomMapinfo_SiteName, T1.tblCustomMapinfo_Map, T1.tblCustomMapinfo_IsBingMap)
    FROM (
        SELECT 
            T.ID AS tblCustomMapinfo_ID, 
            T.SiteID AS tblCustomMapinfo_SiteID, 
            T.SiteName AS tblCustomMapinfo_SiteName, 
            T.Map AS tblCustomMapinfo_Map, 
            T.IsBingMap AS tblCustomMapinfo_IsBingMap, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblCustomMapinfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblDisasterManagement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView265()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2068);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblDisasterManagement\r\n        [CentralDBMode");
            viewString.Append("l.Store.tblDisasterManagement](T1.tblDisasterManagement_ID, T1.tblDisasterManage");
            viewString.Append("ment_Name, T1.tblDisasterManagement_Organization, T1.tblDisasterManagement_Addre");
            viewString.Append("ss, T1.tblDisasterManagement_FacilityType, T1.tblDisasterManagement_PostalCode, ");
            viewString.Append("T1.tblDisasterManagement_TotalBeds, T1.tblDisasterManagement_AvailableBeds, T1.t");
            viewString.Append("blDisasterManagement_Role, T1.tblDisasterManagement_MobileNo, T1.tblDisasterMana");
            viewString.Append("gement_EmailID, T1.tblDisasterManagement_VehicleNo, T1.tblDisasterManagement_Veh");
            viewString.Append("icleType, T1.tblDisasterManagement_Location, T1.tblDisasterManagement_ShelterTyp");
            viewString.Append("e, T1.tblDisasterManagement_Latitude, T1.tblDisasterManagement_Longitude, T1.tbl");
            viewString.Append("DisasterManagement_EntityFlag, T1.tblDisasterManagement_AlertFlag)\r\n    FROM (\r\n");
            viewString.Append("        SELECT \r\n            T.ID AS tblDisasterManagement_ID, \r\n            T.N");
            viewString.Append("ame AS tblDisasterManagement_Name, \r\n            T.Organization AS tblDisasterMa");
            viewString.Append("nagement_Organization, \r\n            T.Address AS tblDisasterManagement_Address,");
            viewString.Append(" \r\n            T.FacilityType AS tblDisasterManagement_FacilityType, \r\n         ");
            viewString.Append("   T.PostalCode AS tblDisasterManagement_PostalCode, \r\n            T.TotalBeds A");
            viewString.Append("S tblDisasterManagement_TotalBeds, \r\n            T.AvailableBeds AS tblDisasterM");
            viewString.Append("anagement_AvailableBeds, \r\n            T.Role AS tblDisasterManagement_Role, \r\n ");
            viewString.Append("           T.MobileNo AS tblDisasterManagement_MobileNo, \r\n            T.EmailID");
            viewString.Append(" AS tblDisasterManagement_EmailID, \r\n            T.VehicleNo AS tblDisasterManag");
            viewString.Append("ement_VehicleNo, \r\n            T.VehicleType AS tblDisasterManagement_VehicleTyp");
            viewString.Append("e, \r\n            T.Location AS tblDisasterManagement_Location, \r\n            T.S");
            viewString.Append("helterType AS tblDisasterManagement_ShelterType, \r\n            T.Latitude AS tbl");
            viewString.Append("DisasterManagement_Latitude, \r\n            T.Longitude AS tblDisasterManagement_");
            viewString.Append("Longitude, \r\n            T.EntityFlag AS tblDisasterManagement_EntityFlag, \r\n   ");
            viewString.Append("         T.AlertFlag AS tblDisasterManagement_AlertFlag, \r\n            True AS _");
            viewString.Append("from0\r\n        FROM Entities.tblDisasterManagement AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblDisasterManagement", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblDisasterManagement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView266()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2082);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblDisasterManagement\r\n        [CentralDBMode");
            viewString.Append("l.tblDisasterManagement](T1.tblDisasterManagement_ID, T1.tblDisasterManagement_N");
            viewString.Append("ame, T1.tblDisasterManagement_Organization, T1.tblDisasterManagement_Address, T1");
            viewString.Append(".tblDisasterManagement_FacilityType, T1.tblDisasterManagement_PostalCode, T1.tbl");
            viewString.Append("DisasterManagement_TotalBeds, T1.tblDisasterManagement_AvailableBeds, T1.tblDisa");
            viewString.Append("sterManagement_Role, T1.tblDisasterManagement_MobileNo, T1.tblDisasterManagement");
            viewString.Append("_EmailID, T1.tblDisasterManagement_VehicleNo, T1.tblDisasterManagement_VehicleTy");
            viewString.Append("pe, T1.tblDisasterManagement_Location, T1.tblDisasterManagement_ShelterType, T1.");
            viewString.Append("tblDisasterManagement_Latitude, T1.tblDisasterManagement_Longitude, T1.tblDisast");
            viewString.Append("erManagement_EntityFlag, T1.tblDisasterManagement_AlertFlag)\r\n    FROM (\r\n      ");
            viewString.Append("  SELECT \r\n            T.ID AS tblDisasterManagement_ID, \r\n            T.Name AS");
            viewString.Append(" tblDisasterManagement_Name, \r\n            T.Organization AS tblDisasterManageme");
            viewString.Append("nt_Organization, \r\n            T.Address AS tblDisasterManagement_Address, \r\n   ");
            viewString.Append("         T.FacilityType AS tblDisasterManagement_FacilityType, \r\n            T.P");
            viewString.Append("ostalCode AS tblDisasterManagement_PostalCode, \r\n            T.TotalBeds AS tblD");
            viewString.Append("isasterManagement_TotalBeds, \r\n            T.AvailableBeds AS tblDisasterManagem");
            viewString.Append("ent_AvailableBeds, \r\n            T.Role AS tblDisasterManagement_Role, \r\n       ");
            viewString.Append("     T.MobileNo AS tblDisasterManagement_MobileNo, \r\n            T.EmailID AS tb");
            viewString.Append("lDisasterManagement_EmailID, \r\n            T.VehicleNo AS tblDisasterManagement_");
            viewString.Append("VehicleNo, \r\n            T.VehicleType AS tblDisasterManagement_VehicleType, \r\n ");
            viewString.Append("           T.Location AS tblDisasterManagement_Location, \r\n            T.Shelter");
            viewString.Append("Type AS tblDisasterManagement_ShelterType, \r\n            T.Latitude AS tblDisast");
            viewString.Append("erManagement_Latitude, \r\n            T.Longitude AS tblDisasterManagement_Longit");
            viewString.Append("ude, \r\n            T.EntityFlag AS tblDisasterManagement_EntityFlag, \r\n         ");
            viewString.Append("   T.AlertFlag AS tblDisasterManagement_AlertFlag, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM CentralDBModelStoreContainer.tblDisasterManagement AS T\r\n    ) AS ");
            viewString.Append("T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblDisasterManagement", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblCrimeHeatMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView267()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblCrimeHeatMap", @"
    SELECT VALUE -- Constructing tblCrimeHeatMap
        [CentralDBModel.Store.tblCrimeHeatMap](T1.tblCrimeHeatMap_ID, T1.tblCrimeHeatMap_Crime, T1.tblCrimeHeatMap_lon, T1.tblCrimeHeatMap_Lat, T1.tblCrimeHeatMap_Deg)
    FROM (
        SELECT 
            T.ID AS tblCrimeHeatMap_ID, 
            T.Crime AS tblCrimeHeatMap_Crime, 
            T.lon AS tblCrimeHeatMap_lon, 
            T.Lat AS tblCrimeHeatMap_Lat, 
            T.Deg AS tblCrimeHeatMap_Deg, 
            True AS _from0
        FROM Entities.tblCrimeHeatMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblCrimeHeatMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView268()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblCrimeHeatMap", @"
    SELECT VALUE -- Constructing tblCrimeHeatMap
        [CentralDBModel.tblCrimeHeatMap](T1.tblCrimeHeatMap_ID, T1.tblCrimeHeatMap_Crime, T1.tblCrimeHeatMap_Lat, T1.tblCrimeHeatMap_lon, T1.tblCrimeHeatMap_Deg)
    FROM (
        SELECT 
            T.ID AS tblCrimeHeatMap_ID, 
            T.Crime AS tblCrimeHeatMap_Crime, 
            T.Lat AS tblCrimeHeatMap_Lat, 
            T.lon AS tblCrimeHeatMap_lon, 
            T.Deg AS tblCrimeHeatMap_Deg, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblCrimeHeatMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblDisasterMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView269()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblDisasterMap", @"
    SELECT VALUE -- Constructing tblDisasterMap
        [CentralDBModel.Store.tblDisasterMap](T1.tblDisasterMap_ID, T1.tblDisasterMap_RescueType, T1.tblDisasterMap_lon, T1.tblDisasterMap_Lat, T1.tblDisasterMap_Deg)
    FROM (
        SELECT 
            T.ID AS tblDisasterMap_ID, 
            T.RescueType AS tblDisasterMap_RescueType, 
            T.lon AS tblDisasterMap_lon, 
            T.Lat AS tblDisasterMap_Lat, 
            T.Deg AS tblDisasterMap_Deg, 
            True AS _from0
        FROM Entities.tblDisasterMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblDisasterMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView270()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblDisasterMap", @"
    SELECT VALUE -- Constructing tblDisasterMap
        [CentralDBModel.tblDisasterMap](T1.tblDisasterMap_ID, T1.tblDisasterMap_RescueType, T1.tblDisasterMap_lon, T1.tblDisasterMap_Lat, T1.tblDisasterMap_Deg)
    FROM (
        SELECT 
            T.ID AS tblDisasterMap_ID, 
            T.RescueType AS tblDisasterMap_RescueType, 
            T.lon AS tblDisasterMap_lon, 
            T.Lat AS tblDisasterMap_Lat, 
            T.Deg AS tblDisasterMap_Deg, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblDisasterMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSwachchaBharatMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView271()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSwachchaBharatMap", @"
    SELECT VALUE -- Constructing tblSwachchaBharatMap
        [CentralDBModel.Store.tblSwachchaBharatMap](T1.tblSwachchaBharatMap_ID, T1.tblSwachchaBharatMap_SWCHType, T1.tblSwachchaBharatMap_lon, T1.tblSwachchaBharatMap_Lat, T1.tblSwachchaBharatMap_Deg)
    FROM (
        SELECT 
            T.ID AS tblSwachchaBharatMap_ID, 
            T.SWCHType AS tblSwachchaBharatMap_SWCHType, 
            T.lon AS tblSwachchaBharatMap_lon, 
            T.Lat AS tblSwachchaBharatMap_Lat, 
            T.Deg AS tblSwachchaBharatMap_Deg, 
            True AS _from0
        FROM Entities.tblSwachchaBharatMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSwachchaBharatMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView272()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSwachchaBharatMap", @"
    SELECT VALUE -- Constructing tblSwachchaBharatMap
        [CentralDBModel.tblSwachchaBharatMap](T1.tblSwachchaBharatMap_ID, T1.tblSwachchaBharatMap_SWCHType, T1.tblSwachchaBharatMap_lon, T1.tblSwachchaBharatMap_Lat, T1.tblSwachchaBharatMap_Deg)
    FROM (
        SELECT 
            T.ID AS tblSwachchaBharatMap_ID, 
            T.SWCHType AS tblSwachchaBharatMap_SWCHType, 
            T.lon AS tblSwachchaBharatMap_lon, 
            T.Lat AS tblSwachchaBharatMap_Lat, 
            T.Deg AS tblSwachchaBharatMap_Deg, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSwachchaBharatMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSmartCityStreetElec
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView273()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSmartCityStreetElec", @"
    SELECT VALUE -- Constructing tblSmartCityStreetElec
        [CentralDBModel.Store.tblSmartCityStreetElec](T1.tblSmartCityStreetElec_ID, T1.tblSmartCityStreetElec_ElecName, T1.tblSmartCityStreetElec_Lat, T1.tblSmartCityStreetElec_Long, T1.tblSmartCityStreetElec_ElecAddress, T1.tblSmartCityStreetElec_Telephone)
    FROM (
        SELECT 
            T.ID AS tblSmartCityStreetElec_ID, 
            T.ElecName AS tblSmartCityStreetElec_ElecName, 
            T.Lat AS tblSmartCityStreetElec_Lat, 
            T.Long AS tblSmartCityStreetElec_Long, 
            T.ElecAddress AS tblSmartCityStreetElec_ElecAddress, 
            T.Telephone AS tblSmartCityStreetElec_Telephone, 
            True AS _from0
        FROM Entities.tblSmartCityStreetElec AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSmartCityStreetElec
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView274()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSmartCityStreetElec", @"
    SELECT VALUE -- Constructing tblSmartCityStreetElec
        [CentralDBModel.tblSmartCityStreetElec](T1.tblSmartCityStreetElec_ID, T1.tblSmartCityStreetElec_ElecName, T1.tblSmartCityStreetElec_Lat, T1.tblSmartCityStreetElec_Long, T1.tblSmartCityStreetElec_ElecAddress, T1.tblSmartCityStreetElec_Telephone)
    FROM (
        SELECT 
            T.ID AS tblSmartCityStreetElec_ID, 
            T.ElecName AS tblSmartCityStreetElec_ElecName, 
            T.Lat AS tblSmartCityStreetElec_Lat, 
            T.Long AS tblSmartCityStreetElec_Long, 
            T.ElecAddress AS tblSmartCityStreetElec_ElecAddress, 
            T.Telephone AS tblSmartCityStreetElec_Telephone, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSmartCityStreetElec AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSmartCityStreetLight
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView275()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSmartCityStreetLight", @"
    SELECT VALUE -- Constructing tblSmartCityStreetLight
        [CentralDBModel.Store.tblSmartCityStreetLight](T1.tblSmartCityStreetLight_ID, T1.tblSmartCityStreetLight_Lat, T1.tblSmartCityStreetLight_Long)
    FROM (
        SELECT 
            T.ID AS tblSmartCityStreetLight_ID, 
            T.Lat AS tblSmartCityStreetLight_Lat, 
            T.Long AS tblSmartCityStreetLight_Long, 
            True AS _from0
        FROM Entities.tblSmartCityStreetLight AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSmartCityStreetLight
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView276()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSmartCityStreetLight", @"
    SELECT VALUE -- Constructing tblSmartCityStreetLight
        [CentralDBModel.tblSmartCityStreetLight](T1.tblSmartCityStreetLight_ID, T1.tblSmartCityStreetLight_Lat, T1.tblSmartCityStreetLight_Long)
    FROM (
        SELECT 
            T.ID AS tblSmartCityStreetLight_ID, 
            T.Lat AS tblSmartCityStreetLight_Lat, 
            T.Long AS tblSmartCityStreetLight_Long, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSmartCityStreetLight AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblMatrixEvtInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView277()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblMatrixEvtInfo", @"
    SELECT VALUE -- Constructing tblMatrixEvtInfo
        [CentralDBModel.Store.tblMatrixEvtInfo](T1.tblMatrixEvtInfo_ID, T1.tblMatrixEvtInfo_Type, T1.tblMatrixEvtInfo_MID, T1.tblMatrixEvtInfo_EVTSeqNo, T1.tblMatrixEvtInfo_EvtDataStr, T1.tblMatrixEvtInfo_IDateTime, T1.tblMatrixEvtInfo_ProcFlag)
    FROM (
        SELECT 
            T.ID AS tblMatrixEvtInfo_ID, 
            T.Type AS tblMatrixEvtInfo_Type, 
            T.MID AS tblMatrixEvtInfo_MID, 
            T.EVTSeqNo AS tblMatrixEvtInfo_EVTSeqNo, 
            T.EvtDataStr AS tblMatrixEvtInfo_EvtDataStr, 
            T.IDateTime AS tblMatrixEvtInfo_IDateTime, 
            T.ProcFlag AS tblMatrixEvtInfo_ProcFlag, 
            True AS _from0
        FROM Entities.tblMatrixEvtInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblMatrixEvtInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView278()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblMatrixEvtInfo", @"
    SELECT VALUE -- Constructing tblMatrixEvtInfo
        [CentralDBModel.tblMatrixEvtInfo](T1.tblMatrixEvtInfo_ID, T1.tblMatrixEvtInfo_Type, T1.tblMatrixEvtInfo_MID, T1.tblMatrixEvtInfo_EVTSeqNo, T1.tblMatrixEvtInfo_EvtDataStr, T1.tblMatrixEvtInfo_IDateTime, T1.tblMatrixEvtInfo_ProcFlag)
    FROM (
        SELECT 
            T.ID AS tblMatrixEvtInfo_ID, 
            T.Type AS tblMatrixEvtInfo_Type, 
            T.MID AS tblMatrixEvtInfo_MID, 
            T.EVTSeqNo AS tblMatrixEvtInfo_EVTSeqNo, 
            T.EvtDataStr AS tblMatrixEvtInfo_EvtDataStr, 
            T.IDateTime AS tblMatrixEvtInfo_IDateTime, 
            T.ProcFlag AS tblMatrixEvtInfo_ProcFlag, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblMatrixEvtInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWeatherchastronomy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView279()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWeatherchastronomy", @"
    SELECT VALUE -- Constructing tblWeatherchastronomy
        [CentralDBModel.Store.tblWeatherchastronomy](T1.tblWeatherchastronomy_ID, T1.tblWeatherchastronomy_AstronomyDate, T1.tblWeatherchastronomy_CityName, T1.tblWeatherchastronomy_CityID, T1.tblWeatherchastronomy_Sunrise, T1.tblWeatherchastronomy_Sunset)
    FROM (
        SELECT 
            T.ID AS tblWeatherchastronomy_ID, 
            T.AstronomyDate AS tblWeatherchastronomy_AstronomyDate, 
            T.CityName AS tblWeatherchastronomy_CityName, 
            T.CityID AS tblWeatherchastronomy_CityID, 
            T.Sunrise AS tblWeatherchastronomy_Sunrise, 
            T.Sunset AS tblWeatherchastronomy_Sunset, 
            True AS _from0
        FROM Entities.tblWeatherchastronomy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblWeatherchastronomy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView280()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWeatherchastronomy", @"
    SELECT VALUE -- Constructing tblWeatherchastronomy
        [CentralDBModel.tblWeatherchastronomy](T1.tblWeatherchastronomy_ID, T1.tblWeatherchastronomy_AstronomyDate, T1.tblWeatherchastronomy_CityName, T1.tblWeatherchastronomy_CityID, T1.tblWeatherchastronomy_Sunrise, T1.tblWeatherchastronomy_Sunset)
    FROM (
        SELECT 
            T.ID AS tblWeatherchastronomy_ID, 
            T.AstronomyDate AS tblWeatherchastronomy_AstronomyDate, 
            T.CityName AS tblWeatherchastronomy_CityName, 
            T.CityID AS tblWeatherchastronomy_CityID, 
            T.Sunrise AS tblWeatherchastronomy_Sunrise, 
            T.Sunset AS tblWeatherchastronomy_Sunset, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblWeatherchastronomy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWeatherchforecastdetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView281()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3118);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblWeatherchforecastdetails\r\n        [Central");
            viewString.Append("DBModel.Store.tblWeatherchforecastdetails](T1.tblWeatherchforecastdetails_ID, T1");
            viewString.Append(".tblWeatherchforecastdetails_ForecastRefTransactionID, T1.tblWeatherchforecastde");
            viewString.Append("tails_CityName, T1.tblWeatherchforecastdetails_CityID, T1.tblWeatherchforecastde");
            viewString.Append("tails_ForcasteDate, T1.tblWeatherchforecastdetails_Forecastday, T1.tblWeatherchf");
            viewString.Append("orecastdetails_ForecastDateepoc, T1.tblWeatherchforecastdetails_Pretty, T1.tblWe");
            viewString.Append("atherchforecastdetails_Period, T1.tblWeatherchforecastdetails_Hightemp, T1.tblWe");
            viewString.Append("atherchforecastdetails_Lowtemp, T1.tblWeatherchforecastdetails_Forecastonditions");
            viewString.Append(", T1.tblWeatherchforecastdetails_ForecastIcon, T1.tblWeatherchforecastdetails_Fo");
            viewString.Append("recatIconURL, T1.tblWeatherchforecastdetails_POP, T1.tblWeatherchforecastdetails");
            viewString.Append("_MaxWind, T1.tblWeatherchforecastdetails_MaxWindDirection, T1.tblWeatherchforeca");
            viewString.Append("stdetails_MaxWindDegrees, T1.tblWeatherchforecastdetails_AVGWind, T1.tblWeatherc");
            viewString.Append("hforecastdetails_AVGWindDirection, T1.tblWeatherchforecastdetails_AVGWindDegree,");
            viewString.Append(" T1.tblWeatherchforecastdetails_AVGHumidity, T1.tblWeatherchforecastdetails_MaxH");
            viewString.Append("umidity, T1.tblWeatherchforecastdetails_MinHumidity, T1.tblWeatherchforecastdeta");
            viewString.Append("ils_AlertID)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS tblWeatherchforec");
            viewString.Append("astdetails_ID, \r\n            T.ForecastRefTransactionID AS tblWeatherchforecastd");
            viewString.Append("etails_ForecastRefTransactionID, \r\n            T.CityName AS tblWeatherchforecas");
            viewString.Append("tdetails_CityName, \r\n            T.CityID AS tblWeatherchforecastdetails_CityID,");
            viewString.Append(" \r\n            T.ForcasteDate AS tblWeatherchforecastdetails_ForcasteDate, \r\n   ");
            viewString.Append("         T.Forecastday AS tblWeatherchforecastdetails_Forecastday, \r\n           ");
            viewString.Append(" T.ForecastDateepoc AS tblWeatherchforecastdetails_ForecastDateepoc, \r\n         ");
            viewString.Append("   T.Pretty AS tblWeatherchforecastdetails_Pretty, \r\n            T.Period AS tbl");
            viewString.Append("Weatherchforecastdetails_Period, \r\n            T.Hightemp AS tblWeatherchforecas");
            viewString.Append("tdetails_Hightemp, \r\n            T.Lowtemp AS tblWeatherchforecastdetails_Lowtem");
            viewString.Append("p, \r\n            T.Forecastonditions AS tblWeatherchforecastdetails_Forecastondi");
            viewString.Append("tions, \r\n            T.ForecastIcon AS tblWeatherchforecastdetails_ForecastIcon,");
            viewString.Append(" \r\n            T.ForecatIconURL AS tblWeatherchforecastdetails_ForecatIconURL, \r");
            viewString.Append("\n            T.POP AS tblWeatherchforecastdetails_POP, \r\n            T.MaxWind A");
            viewString.Append("S tblWeatherchforecastdetails_MaxWind, \r\n            T.MaxWindDirection AS tblWe");
            viewString.Append("atherchforecastdetails_MaxWindDirection, \r\n            T.MaxWindDegrees AS tblWe");
            viewString.Append("atherchforecastdetails_MaxWindDegrees, \r\n            T.AVGWind AS tblWeatherchfo");
            viewString.Append("recastdetails_AVGWind, \r\n            T.AVGWindDirection AS tblWeatherchforecastd");
            viewString.Append("etails_AVGWindDirection, \r\n            T.AVGWindDegree AS tblWeatherchforecastde");
            viewString.Append("tails_AVGWindDegree, \r\n            T.AVGHumidity AS tblWeatherchforecastdetails_");
            viewString.Append("AVGHumidity, \r\n            T.MaxHumidity AS tblWeatherchforecastdetails_MaxHumid");
            viewString.Append("ity, \r\n            T.MinHumidity AS tblWeatherchforecastdetails_MinHumidity, \r\n ");
            viewString.Append("           T.AlertID AS tblWeatherchforecastdetails_AlertID, \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM Entities.tblWeatherchforecastdetails AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWeatherchforecastdetails", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblWeatherchforecastdetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView282()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3132);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblWeatherchforecastdetails\r\n        [Central");
            viewString.Append("DBModel.tblWeatherchforecastdetails](T1.tblWeatherchforecastdetails_ID, T1.tblWe");
            viewString.Append("atherchforecastdetails_ForecastRefTransactionID, T1.tblWeatherchforecastdetails_");
            viewString.Append("CityName, T1.tblWeatherchforecastdetails_CityID, T1.tblWeatherchforecastdetails_");
            viewString.Append("ForcasteDate, T1.tblWeatherchforecastdetails_Forecastday, T1.tblWeatherchforecas");
            viewString.Append("tdetails_ForecastDateepoc, T1.tblWeatherchforecastdetails_Pretty, T1.tblWeatherc");
            viewString.Append("hforecastdetails_Period, T1.tblWeatherchforecastdetails_Hightemp, T1.tblWeatherc");
            viewString.Append("hforecastdetails_Lowtemp, T1.tblWeatherchforecastdetails_Forecastonditions, T1.t");
            viewString.Append("blWeatherchforecastdetails_ForecastIcon, T1.tblWeatherchforecastdetails_ForecatI");
            viewString.Append("conURL, T1.tblWeatherchforecastdetails_POP, T1.tblWeatherchforecastdetails_MaxWi");
            viewString.Append("nd, T1.tblWeatherchforecastdetails_MaxWindDirection, T1.tblWeatherchforecastdeta");
            viewString.Append("ils_MaxWindDegrees, T1.tblWeatherchforecastdetails_AVGWind, T1.tblWeatherchforec");
            viewString.Append("astdetails_AVGWindDirection, T1.tblWeatherchforecastdetails_AVGWindDegree, T1.tb");
            viewString.Append("lWeatherchforecastdetails_AVGHumidity, T1.tblWeatherchforecastdetails_MaxHumidit");
            viewString.Append("y, T1.tblWeatherchforecastdetails_MinHumidity, T1.tblWeatherchforecastdetails_Al");
            viewString.Append("ertID)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS tblWeatherchforecastdet");
            viewString.Append("ails_ID, \r\n            T.ForecastRefTransactionID AS tblWeatherchforecastdetails");
            viewString.Append("_ForecastRefTransactionID, \r\n            T.CityName AS tblWeatherchforecastdetai");
            viewString.Append("ls_CityName, \r\n            T.CityID AS tblWeatherchforecastdetails_CityID, \r\n   ");
            viewString.Append("         T.ForcasteDate AS tblWeatherchforecastdetails_ForcasteDate, \r\n         ");
            viewString.Append("   T.Forecastday AS tblWeatherchforecastdetails_Forecastday, \r\n            T.For");
            viewString.Append("ecastDateepoc AS tblWeatherchforecastdetails_ForecastDateepoc, \r\n            T.P");
            viewString.Append("retty AS tblWeatherchforecastdetails_Pretty, \r\n            T.Period AS tblWeathe");
            viewString.Append("rchforecastdetails_Period, \r\n            T.Hightemp AS tblWeatherchforecastdetai");
            viewString.Append("ls_Hightemp, \r\n            T.Lowtemp AS tblWeatherchforecastdetails_Lowtemp, \r\n ");
            viewString.Append("           T.Forecastonditions AS tblWeatherchforecastdetails_Forecastonditions,");
            viewString.Append(" \r\n            T.ForecastIcon AS tblWeatherchforecastdetails_ForecastIcon, \r\n   ");
            viewString.Append("         T.ForecatIconURL AS tblWeatherchforecastdetails_ForecatIconURL, \r\n     ");
            viewString.Append("       T.POP AS tblWeatherchforecastdetails_POP, \r\n            T.MaxWind AS tblW");
            viewString.Append("eatherchforecastdetails_MaxWind, \r\n            T.MaxWindDirection AS tblWeatherc");
            viewString.Append("hforecastdetails_MaxWindDirection, \r\n            T.MaxWindDegrees AS tblWeatherc");
            viewString.Append("hforecastdetails_MaxWindDegrees, \r\n            T.AVGWind AS tblWeatherchforecast");
            viewString.Append("details_AVGWind, \r\n            T.AVGWindDirection AS tblWeatherchforecastdetails");
            viewString.Append("_AVGWindDirection, \r\n            T.AVGWindDegree AS tblWeatherchforecastdetails_");
            viewString.Append("AVGWindDegree, \r\n            T.AVGHumidity AS tblWeatherchforecastdetails_AVGHum");
            viewString.Append("idity, \r\n            T.MaxHumidity AS tblWeatherchforecastdetails_MaxHumidity, \r");
            viewString.Append("\n            T.MinHumidity AS tblWeatherchforecastdetails_MinHumidity, \r\n       ");
            viewString.Append("     T.AlertID AS tblWeatherchforecastdetails_AlertID, \r\n            True AS _fr");
            viewString.Append("om0\r\n        FROM CentralDBModelStoreContainer.tblWeatherchforecastdetails AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWeatherchforecastdetails", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWeatherCityName
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView283()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWeatherCityName", @"
    SELECT VALUE -- Constructing tblWeatherCityName
        [CentralDBModel.Store.tblWeatherCityName](T1.tblWeatherCityName_ID, T1.tblWeatherCityName_CityID, T1.tblWeatherCityName_CityName, T1.tblWeatherCityName_lat, T1.tblWeatherCityName_long)
    FROM (
        SELECT 
            T.ID AS tblWeatherCityName_ID, 
            T.CityID AS tblWeatherCityName_CityID, 
            T.CityName AS tblWeatherCityName_CityName, 
            T.lat AS tblWeatherCityName_lat, 
            T.long AS tblWeatherCityName_long, 
            True AS _from0
        FROM Entities.tblWeatherCityName AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblWeatherCityName
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView284()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWeatherCityName", @"
    SELECT VALUE -- Constructing tblWeatherCityName
        [CentralDBModel.tblWeatherCityName](T1.tblWeatherCityName_ID, T1.tblWeatherCityName_CityID, T1.tblWeatherCityName_CityName, T1.tblWeatherCityName_lat, T1.tblWeatherCityName_long)
    FROM (
        SELECT 
            T.ID AS tblWeatherCityName_ID, 
            T.CityID AS tblWeatherCityName_CityID, 
            T.CityName AS tblWeatherCityName_CityName, 
            T.lat AS tblWeatherCityName_lat, 
            T.long AS tblWeatherCityName_long, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblWeatherCityName AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWeatherthreshold
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView285()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWeatherthreshold", "\r\n    SELECT VALUE -- Constructing tblWeatherthreshold\r\n        [CentralDBModel.S" +
                    "tore.tblWeatherthreshold](T1.tblWeatherthreshold_ID, T1.tblWeatherthreshold_City" +
                    "ID, T1.tblWeatherthreshold_CityName, T1.tblWeatherthreshold_Tempthreshold, T1.tb" +
                    "lWeatherthreshold_Mintempthreshold, T1.tblWeatherthreshold_Maxtempthreshold, T1." +
                    "tblWeatherthreshold_Humiditythreshold, T1.tblWeatherthreshold_Pressurethreshold," +
                    " T1.tblWeatherthreshold_Windspeedthreshold, T1.tblWeatherthreshold_WindNamethres" +
                    "hold, T1.tblWeatherthreshold_Winddirthreshold, T1.tblWeatherthreshold_Winddirnam" +
                    "ethreshold, T1.tblWeatherthreshold_Cloudsthreshold, T1.tblWeatherthreshold_Cloud" +
                    "Namethreshold, T1.tblWeatherthreshold_WeatherName)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.ID AS tblWeatherthreshold_ID, \r\n            T.CityID AS tblWeathe" +
                    "rthreshold_CityID, \r\n            T.CityName AS tblWeatherthreshold_CityName, \r\n " +
                    "           T.Tempthreshold AS tblWeatherthreshold_Tempthreshold, \r\n            T" +
                    ".Mintempthreshold AS tblWeatherthreshold_Mintempthreshold, \r\n            T.Maxte" +
                    "mpthreshold AS tblWeatherthreshold_Maxtempthreshold, \r\n            T.Humiditythr" +
                    "eshold AS tblWeatherthreshold_Humiditythreshold, \r\n            T.Pressurethresho" +
                    "ld AS tblWeatherthreshold_Pressurethreshold, \r\n            T.Windspeedthreshold " +
                    "AS tblWeatherthreshold_Windspeedthreshold, \r\n            T.WindNamethreshold AS " +
                    "tblWeatherthreshold_WindNamethreshold, \r\n            T.Winddirthreshold AS tblWe" +
                    "atherthreshold_Winddirthreshold, \r\n            T.Winddirnamethreshold AS tblWeat" +
                    "herthreshold_Winddirnamethreshold, \r\n            T.Cloudsthreshold AS tblWeather" +
                    "threshold_Cloudsthreshold, \r\n            T.CloudNamethreshold AS tblWeatherthres" +
                    "hold_CloudNamethreshold, \r\n            T.WeatherName AS tblWeatherthreshold_Weat" +
                    "herName, \r\n            True AS _from0\r\n        FROM Entities.tblWeatherthreshold" +
                    " AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblWeatherthreshold
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView286()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWeatherthreshold", "\r\n    SELECT VALUE -- Constructing tblWeatherthreshold\r\n        [CentralDBModel.t" +
                    "blWeatherthreshold](T1.tblWeatherthreshold_ID, T1.tblWeatherthreshold_CityID, T1" +
                    ".tblWeatherthreshold_CityName, T1.tblWeatherthreshold_Tempthreshold, T1.tblWeath" +
                    "erthreshold_Mintempthreshold, T1.tblWeatherthreshold_Maxtempthreshold, T1.tblWea" +
                    "therthreshold_Humiditythreshold, T1.tblWeatherthreshold_Pressurethreshold, T1.tb" +
                    "lWeatherthreshold_Windspeedthreshold, T1.tblWeatherthreshold_WindNamethreshold, " +
                    "T1.tblWeatherthreshold_Winddirthreshold, T1.tblWeatherthreshold_Winddirnamethres" +
                    "hold, T1.tblWeatherthreshold_Cloudsthreshold, T1.tblWeatherthreshold_CloudNameth" +
                    "reshold, T1.tblWeatherthreshold_WeatherName)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.ID AS tblWeatherthreshold_ID, \r\n            T.CityID AS tblWeatherthres" +
                    "hold_CityID, \r\n            T.CityName AS tblWeatherthreshold_CityName, \r\n       " +
                    "     T.Tempthreshold AS tblWeatherthreshold_Tempthreshold, \r\n            T.Minte" +
                    "mpthreshold AS tblWeatherthreshold_Mintempthreshold, \r\n            T.Maxtempthre" +
                    "shold AS tblWeatherthreshold_Maxtempthreshold, \r\n            T.Humiditythreshold" +
                    " AS tblWeatherthreshold_Humiditythreshold, \r\n            T.Pressurethreshold AS " +
                    "tblWeatherthreshold_Pressurethreshold, \r\n            T.Windspeedthreshold AS tbl" +
                    "Weatherthreshold_Windspeedthreshold, \r\n            T.WindNamethreshold AS tblWea" +
                    "therthreshold_WindNamethreshold, \r\n            T.Winddirthreshold AS tblWeathert" +
                    "hreshold_Winddirthreshold, \r\n            T.Winddirnamethreshold AS tblWeatherthr" +
                    "eshold_Winddirnamethreshold, \r\n            T.Cloudsthreshold AS tblWeatherthresh" +
                    "old_Cloudsthreshold, \r\n            T.CloudNamethreshold AS tblWeatherthreshold_C" +
                    "loudNamethreshold, \r\n            T.WeatherName AS tblWeatherthreshold_WeatherNam" +
                    "e, \r\n            True AS _from0\r\n        FROM CentralDBModelStoreContainer.tblWe" +
                    "atherthreshold AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblcustomermaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView287()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblcustomermaster", @"
    SELECT VALUE -- Constructing tblcustomermaster
        [CentralDBModel.Store.tblcustomermaster](T1.tblcustomermaster_ID, T1.tblcustomermaster_title, T1.tblcustomermaster_firstname, T1.tblcustomermaster_lastname, T1.tblcustomermaster_contactnumber, T1.tblcustomermaster_emailid, T1.tblcustomermaster_ownership, T1.tblcustomermaster_CID)
    FROM (
        SELECT 
            T.ID AS tblcustomermaster_ID, 
            T.title AS tblcustomermaster_title, 
            T.firstname AS tblcustomermaster_firstname, 
            T.lastname AS tblcustomermaster_lastname, 
            T.contactnumber AS tblcustomermaster_contactnumber, 
            T.emailid AS tblcustomermaster_emailid, 
            T.ownership AS tblcustomermaster_ownership, 
            T.CID AS tblcustomermaster_CID, 
            True AS _from0
        FROM Entities.tblcustomermaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblcustomermaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView288()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblcustomermaster", @"
    SELECT VALUE -- Constructing tblcustomermaster
        [CentralDBModel.tblcustomermaster](T1.tblcustomermaster_ID, T1.tblcustomermaster_title, T1.tblcustomermaster_firstname, T1.tblcustomermaster_lastname, T1.tblcustomermaster_contactnumber, T1.tblcustomermaster_emailid, T1.tblcustomermaster_ownership, T1.tblcustomermaster_CID)
    FROM (
        SELECT 
            T.ID AS tblcustomermaster_ID, 
            T.title AS tblcustomermaster_title, 
            T.firstname AS tblcustomermaster_firstname, 
            T.lastname AS tblcustomermaster_lastname, 
            T.contactnumber AS tblcustomermaster_contactnumber, 
            T.emailid AS tblcustomermaster_emailid, 
            T.ownership AS tblcustomermaster_ownership, 
            T.CID AS tblcustomermaster_CID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblcustomermaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblModuleFieldMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView289()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblModuleFieldMaster", @"
    SELECT VALUE -- Constructing tblModuleFieldMaster
        [CentralDBModel.Store.tblModuleFieldMaster](T1.tblModuleFieldMaster_ModuleFieldID, T1.tblModuleFieldMaster_ModuleID, T1.tblModuleFieldMaster_FieldName)
    FROM (
        SELECT 
            T.ModuleFieldID AS tblModuleFieldMaster_ModuleFieldID, 
            T.ModuleID AS tblModuleFieldMaster_ModuleID, 
            T.FieldName AS tblModuleFieldMaster_FieldName, 
            True AS _from0
        FROM Entities.tblModuleFieldMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblModuleMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView290()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblModuleMaster", @"
    SELECT VALUE -- Constructing tblModuleMaster
        [CentralDBModel.Store.tblModuleMaster](T1.tblModuleMaster_ModuleID, T1.tblModuleMaster_ModuleName)
    FROM (
        SELECT 
            T.ModuleID AS tblModuleMaster_ModuleID, 
            T.ModuleName AS tblModuleMaster_ModuleName, 
            True AS _from0
        FROM Entities.tblModuleMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblModuleFieldMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView291()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblModuleFieldMaster", @"
    SELECT VALUE -- Constructing tblModuleFieldMaster
        [CentralDBModel.tblModuleFieldMaster](T1.tblModuleFieldMaster_ModuleFieldID, T1.tblModuleFieldMaster_ModuleID, T1.tblModuleFieldMaster_FieldName)
    FROM (
        SELECT 
            T.ModuleFieldID AS tblModuleFieldMaster_ModuleFieldID, 
            T.ModuleID AS tblModuleFieldMaster_ModuleID, 
            T.FieldName AS tblModuleFieldMaster_FieldName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblModuleFieldMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblModuleMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView292()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblModuleMaster", @"
    SELECT VALUE -- Constructing tblModuleMaster
        [CentralDBModel.tblModuleMaster](T1.tblModuleMaster_ModuleID, T1.tblModuleMaster_ModuleName)
    FROM (
        SELECT 
            T.ModuleID AS tblModuleMaster_ModuleID, 
            T.ModuleName AS tblModuleMaster_ModuleName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblModuleMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblsmarthomeeventcode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView293()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblsmarthomeeventcode", @"
    SELECT VALUE -- Constructing tblsmarthomeeventcode
        [CentralDBModel.Store.tblsmarthomeeventcode](T1.tblsmarthomeeventcode_ID, T1.[tblsmarthomeeventcode.C_Eventcode], T1.[tblsmarthomeeventcode.C_Event])
    FROM (
        SELECT 
            T.ID AS tblsmarthomeeventcode_ID, 
            T.C_Eventcode AS [tblsmarthomeeventcode.C_Eventcode], 
            T.C_Event AS [tblsmarthomeeventcode.C_Event], 
            True AS _from0
        FROM Entities.tblsmarthomeeventcode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblsmarthomeeventcode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView294()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblsmarthomeeventcode", @"
    SELECT VALUE -- Constructing tblsmarthomeeventcode
        [CentralDBModel.tblsmarthomeeventcode](T1.tblsmarthomeeventcode_ID, T1.[tblsmarthomeeventcode.C_Eventcode], T1.[tblsmarthomeeventcode.C_Event])
    FROM (
        SELECT 
            T.ID AS tblsmarthomeeventcode_ID, 
            T.C_Eventcode AS [tblsmarthomeeventcode.C_Eventcode], 
            T.C_Event AS [tblsmarthomeeventcode.C_Event], 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblsmarthomeeventcode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPAction
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView295()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPAction", @"
    SELECT VALUE -- Constructing tblSOPAction
        [CentralDBModel.Store.tblSOPAction](T1.tblSOPAction_ID, T1.tblSOPAction_SOPAction, T1.tblSOPAction_SOPMasterID)
    FROM (
        SELECT 
            T.ID AS tblSOPAction_ID, 
            T.SOPAction AS tblSOPAction_SOPAction, 
            T.SOPMasterID AS tblSOPAction_SOPMasterID, 
            True AS _from0
        FROM Entities.tblSOPAction AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPInputType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView296()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPInputType", @"
    SELECT VALUE -- Constructing tblSOPInputType
        [CentralDBModel.Store.tblSOPInputType](T1.tblSOPInputType_ID, T1.tblSOPInputType_SOPInput)
    FROM (
        SELECT 
            T.ID AS tblSOPInputType_ID, 
            T.SOPInput AS tblSOPInputType_SOPInput, 
            True AS _from0
        FROM Entities.tblSOPInputType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView297()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPMaster", @"
    SELECT VALUE -- Constructing tblSOPMaster
        [CentralDBModel.Store.tblSOPMaster](T1.tblSOPMaster_ID, T1.tblSOPMaster_SOPName, T1.tblSOPMaster_Description, T1.tblSOPMaster_SOPTypeID, T1.tblSOPMaster_SOPInputTypeID)
    FROM (
        SELECT 
            T.ID AS tblSOPMaster_ID, 
            T.SOPName AS tblSOPMaster_SOPName, 
            T.Description AS tblSOPMaster_Description, 
            T.SOPTypeID AS tblSOPMaster_SOPTypeID, 
            T.SOPInputTypeID AS tblSOPMaster_SOPInputTypeID, 
            True AS _from0
        FROM Entities.tblSOPMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPTriggerActionType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView298()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPTriggerActionType", @"
    SELECT VALUE -- Constructing tblSOPTriggerActionType
        [CentralDBModel.Store.tblSOPTriggerActionType](T1.tblSOPTriggerActionType_ID, T1.tblSOPTriggerActionType_SOPTriggerActionType, T1.tblSOPTriggerActionType_SOPTypeID)
    FROM (
        SELECT 
            T.ID AS tblSOPTriggerActionType_ID, 
            T.SOPTriggerActionType AS tblSOPTriggerActionType_SOPTriggerActionType, 
            T.SOPTypeID AS tblSOPTriggerActionType_SOPTypeID, 
            True AS _from0
        FROM Entities.tblSOPTriggerActionType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPTriggerCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView299()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPTriggerCondition", @"
    SELECT VALUE -- Constructing tblSOPTriggerCondition
        [CentralDBModel.Store.tblSOPTriggerCondition](T1.tblSOPTriggerCondition_ID, T1.tblSOPTriggerCondition_SOPTriggerCondition, T1.tblSOPTriggerCondition_SOPMasterID)
    FROM (
        SELECT 
            T.ID AS tblSOPTriggerCondition_ID, 
            T.SOPTriggerCondition AS tblSOPTriggerCondition_SOPTriggerCondition, 
            T.SOPMasterID AS tblSOPTriggerCondition_SOPMasterID, 
            True AS _from0
        FROM Entities.tblSOPTriggerCondition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView300()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPType", @"
    SELECT VALUE -- Constructing tblSOPType
        [CentralDBModel.Store.tblSOPType](T1.tblSOPType_ID, T1.tblSOPType_SOPType)
    FROM (
        SELECT 
            T.ID AS tblSOPType_ID, 
            T.SOPType AS tblSOPType_SOPType, 
            True AS _from0
        FROM Entities.tblSOPType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPAction
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView301()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPAction", @"
    SELECT VALUE -- Constructing tblSOPAction
        [CentralDBModel.tblSOPAction](T1.tblSOPAction_ID, T1.tblSOPAction_SOPAction, T1.tblSOPAction_SOPMasterID)
    FROM (
        SELECT 
            T.ID AS tblSOPAction_ID, 
            T.SOPAction AS tblSOPAction_SOPAction, 
            T.SOPMasterID AS tblSOPAction_SOPMasterID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPAction AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPInputType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView302()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPInputType", @"
    SELECT VALUE -- Constructing tblSOPInputType
        [CentralDBModel.tblSOPInputType](T1.tblSOPInputType_ID, T1.tblSOPInputType_SOPInput)
    FROM (
        SELECT 
            T.ID AS tblSOPInputType_ID, 
            T.SOPInput AS tblSOPInputType_SOPInput, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPInputType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView303()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPMaster", @"
    SELECT VALUE -- Constructing tblSOPMaster
        [CentralDBModel.tblSOPMaster](T1.tblSOPMaster_ID, T1.tblSOPMaster_SOPName, T1.tblSOPMaster_Description, T1.tblSOPMaster_SOPTypeID, T1.tblSOPMaster_SOPInputTypeID)
    FROM (
        SELECT 
            T.ID AS tblSOPMaster_ID, 
            T.SOPName AS tblSOPMaster_SOPName, 
            T.Description AS tblSOPMaster_Description, 
            T.SOPTypeID AS tblSOPMaster_SOPTypeID, 
            T.SOPInputTypeID AS tblSOPMaster_SOPInputTypeID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPTriggerActionType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView304()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPTriggerActionType", @"
    SELECT VALUE -- Constructing tblSOPTriggerActionType
        [CentralDBModel.tblSOPTriggerActionType](T1.tblSOPTriggerActionType_ID, T1.tblSOPTriggerActionType_SOPTriggerActionType, T1.tblSOPTriggerActionType_SOPTypeID)
    FROM (
        SELECT 
            T.ID AS tblSOPTriggerActionType_ID, 
            T.SOPTriggerActionType AS tblSOPTriggerActionType_SOPTriggerActionType, 
            T.SOPTypeID AS tblSOPTriggerActionType_SOPTypeID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPTriggerActionType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPTriggerCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView305()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPTriggerCondition", @"
    SELECT VALUE -- Constructing tblSOPTriggerCondition
        [CentralDBModel.tblSOPTriggerCondition](T1.tblSOPTriggerCondition_ID, T1.tblSOPTriggerCondition_SOPTriggerCondition, T1.tblSOPTriggerCondition_SOPMasterID)
    FROM (
        SELECT 
            T.ID AS tblSOPTriggerCondition_ID, 
            T.SOPTriggerCondition AS tblSOPTriggerCondition_SOPTriggerCondition, 
            T.SOPMasterID AS tblSOPTriggerCondition_SOPMasterID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPTriggerCondition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView306()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPType", @"
    SELECT VALUE -- Constructing tblSOPType
        [CentralDBModel.tblSOPType](T1.tblSOPType_ID, T1.tblSOPType_SOPType)
    FROM (
        SELECT 
            T.ID AS tblSOPType_ID, 
            T.SOPType AS tblSOPType_SOPType, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSOPAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView307()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSOPAlertType", @"
    SELECT VALUE -- Constructing tblSOPAlertType
        [CentralDBModel.Store.tblSOPAlertType](T1.tblSOPAlertType_ID, T1.tblSOPAlertType_SOPAlertType)
    FROM (
        SELECT 
            T.ID AS tblSOPAlertType_ID, 
            T.SOPAlertType AS tblSOPAlertType_SOPAlertType, 
            True AS _from0
        FROM Entities.tblSOPAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSOPAlertType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView308()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSOPAlertType", @"
    SELECT VALUE -- Constructing tblSOPAlertType
        [CentralDBModel.tblSOPAlertType](T1.tblSOPAlertType_ID, T1.tblSOPAlertType_SOPAlertType)
    FROM (
        SELECT 
            T.ID AS tblSOPAlertType_ID, 
            T.SOPAlertType AS tblSOPAlertType_SOPAlertType, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSOPAlertType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblweatherchcurrent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView309()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2975);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblweatherchcurrent\r\n        [CentralDBModel.");
            viewString.Append("Store.tblweatherchcurrent](T1.tblweatherchcurrent_ID, T1.tblweatherchcurrent_Cit");
            viewString.Append("yName, T1.tblweatherchcurrent_CurrentDate, T1.tblweatherchcurrent_CurrentDateTim");
            viewString.Append("e, T1.tblweatherchcurrent_WeatherType, T1.tblweatherchcurrent_Country, T1.tblwea");
            viewString.Append("therchcurrent_CountryName, T1.tblweatherchcurrent_lat, T1.tblweatherchcurrent_lo");
            viewString.Append("n, T1.[tblweatherchcurrent.Observation_Time], T1.tblweatherchcurrent_Observation");
            viewString.Append("Time, T1.[tblweatherchcurrent.Local_Time], T1.tblweatherchcurrent_LocalTime, T1.");
            viewString.Append("tblweatherchcurrent_Weather, T1.tblweatherchcurrent_currenttemp, T1.tblweatherch");
            viewString.Append("current_currenthumidity, T1.[tblweatherchcurrent.wind_string], T1.tblweatherchcu");
            viewString.Append("rrent_Winddirection, T1.tblweatherchcurrent_windblow, T1.tblweatherchcurrent_pre");
            viewString.Append("ssure, T1.tblweatherchcurrent_dewpoint, T1.tblweatherchcurrent_heatindex, T1.tbl");
            viewString.Append("weatherchcurrent_visibility, T1.tblweatherchcurrent_Precipitation, T1.tblweather");
            viewString.Append("chcurrent_feelslike, T1.tblweatherchcurrent_UV, T1.tblweatherchcurrent_Icon, T1.");
            viewString.Append("[tblweatherchcurrent.Icon_url], T1.tblweatherchcurrent_AlertID)\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.ID AS tblweatherchcurrent_ID, \r\n            T.CityNa");
            viewString.Append("me AS tblweatherchcurrent_CityName, \r\n            T.CurrentDate AS tblweatherchc");
            viewString.Append("urrent_CurrentDate, \r\n            T.CurrentDateTime AS tblweatherchcurrent_Curre");
            viewString.Append("ntDateTime, \r\n            T.WeatherType AS tblweatherchcurrent_WeatherType, \r\n  ");
            viewString.Append("          T.Country AS tblweatherchcurrent_Country, \r\n            T.CountryName ");
            viewString.Append("AS tblweatherchcurrent_CountryName, \r\n            T.lat AS tblweatherchcurrent_l");
            viewString.Append("at, \r\n            T.lon AS tblweatherchcurrent_lon, \r\n            T.Observation_");
            viewString.Append("Time AS [tblweatherchcurrent.Observation_Time], \r\n            T.ObservationTime ");
            viewString.Append("AS tblweatherchcurrent_ObservationTime, \r\n            T.Local_Time AS [tblweathe");
            viewString.Append("rchcurrent.Local_Time], \r\n            T.LocalTime AS tblweatherchcurrent_LocalTi");
            viewString.Append("me, \r\n            T.Weather AS tblweatherchcurrent_Weather, \r\n            T.curr");
            viewString.Append("enttemp AS tblweatherchcurrent_currenttemp, \r\n            T.currenthumidity AS t");
            viewString.Append("blweatherchcurrent_currenthumidity, \r\n            T.wind_string AS [tblweatherch");
            viewString.Append("current.wind_string], \r\n            T.Winddirection AS tblweatherchcurrent_Windd");
            viewString.Append("irection, \r\n            T.windblow AS tblweatherchcurrent_windblow, \r\n          ");
            viewString.Append("  T.pressure AS tblweatherchcurrent_pressure, \r\n            T.dewpoint AS tblwea");
            viewString.Append("therchcurrent_dewpoint, \r\n            T.heatindex AS tblweatherchcurrent_heatind");
            viewString.Append("ex, \r\n            T.visibility AS tblweatherchcurrent_visibility, \r\n            ");
            viewString.Append("T.Precipitation AS tblweatherchcurrent_Precipitation, \r\n            T.feelslike ");
            viewString.Append("AS tblweatherchcurrent_feelslike, \r\n            T.UV AS tblweatherchcurrent_UV, ");
            viewString.Append("\r\n            T.Icon AS tblweatherchcurrent_Icon, \r\n            T.Icon_url AS [t");
            viewString.Append("blweatherchcurrent.Icon_url], \r\n            T.AlertID AS tblweatherchcurrent_Ale");
            viewString.Append("rtID, \r\n            True AS _from0\r\n        FROM Entities.tblweatherchcurrent AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblweatherchcurrent", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblweatherchcurrent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView310()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2989);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblweatherchcurrent\r\n        [CentralDBModel.");
            viewString.Append("tblweatherchcurrent](T1.tblweatherchcurrent_ID, T1.tblweatherchcurrent_CityName,");
            viewString.Append(" T1.tblweatherchcurrent_CurrentDate, T1.tblweatherchcurrent_CurrentDateTime, T1.");
            viewString.Append("tblweatherchcurrent_WeatherType, T1.tblweatherchcurrent_Country, T1.tblweatherch");
            viewString.Append("current_CountryName, T1.tblweatherchcurrent_lat, T1.tblweatherchcurrent_lon, T1.");
            viewString.Append("[tblweatherchcurrent.Observation_Time], T1.tblweatherchcurrent_ObservationTime, ");
            viewString.Append("T1.[tblweatherchcurrent.Local_Time], T1.tblweatherchcurrent_LocalTime, T1.tblwea");
            viewString.Append("therchcurrent_Weather, T1.tblweatherchcurrent_currenttemp, T1.tblweatherchcurren");
            viewString.Append("t_currenthumidity, T1.[tblweatherchcurrent.wind_string], T1.tblweatherchcurrent_");
            viewString.Append("Winddirection, T1.tblweatherchcurrent_windblow, T1.tblweatherchcurrent_pressure,");
            viewString.Append(" T1.tblweatherchcurrent_dewpoint, T1.tblweatherchcurrent_heatindex, T1.tblweathe");
            viewString.Append("rchcurrent_visibility, T1.tblweatherchcurrent_Precipitation, T1.tblweatherchcurr");
            viewString.Append("ent_feelslike, T1.tblweatherchcurrent_UV, T1.tblweatherchcurrent_Icon, T1.[tblwe");
            viewString.Append("atherchcurrent.Icon_url], T1.tblweatherchcurrent_AlertID)\r\n    FROM (\r\n        S");
            viewString.Append("ELECT \r\n            T.ID AS tblweatherchcurrent_ID, \r\n            T.CityName AS ");
            viewString.Append("tblweatherchcurrent_CityName, \r\n            T.CurrentDate AS tblweatherchcurrent");
            viewString.Append("_CurrentDate, \r\n            T.CurrentDateTime AS tblweatherchcurrent_CurrentDate");
            viewString.Append("Time, \r\n            T.WeatherType AS tblweatherchcurrent_WeatherType, \r\n        ");
            viewString.Append("    T.Country AS tblweatherchcurrent_Country, \r\n            T.CountryName AS tbl");
            viewString.Append("weatherchcurrent_CountryName, \r\n            T.lat AS tblweatherchcurrent_lat, \r\n");
            viewString.Append("            T.lon AS tblweatherchcurrent_lon, \r\n            T.Observation_Time A");
            viewString.Append("S [tblweatherchcurrent.Observation_Time], \r\n            T.ObservationTime AS tbl");
            viewString.Append("weatherchcurrent_ObservationTime, \r\n            T.Local_Time AS [tblweatherchcur");
            viewString.Append("rent.Local_Time], \r\n            T.LocalTime AS tblweatherchcurrent_LocalTime, \r\n");
            viewString.Append("            T.Weather AS tblweatherchcurrent_Weather, \r\n            T.currenttem");
            viewString.Append("p AS tblweatherchcurrent_currenttemp, \r\n            T.currenthumidity AS tblweat");
            viewString.Append("herchcurrent_currenthumidity, \r\n            T.wind_string AS [tblweatherchcurren");
            viewString.Append("t.wind_string], \r\n            T.Winddirection AS tblweatherchcurrent_Winddirecti");
            viewString.Append("on, \r\n            T.windblow AS tblweatherchcurrent_windblow, \r\n            T.pr");
            viewString.Append("essure AS tblweatherchcurrent_pressure, \r\n            T.dewpoint AS tblweatherch");
            viewString.Append("current_dewpoint, \r\n            T.heatindex AS tblweatherchcurrent_heatindex, \r\n");
            viewString.Append("            T.visibility AS tblweatherchcurrent_visibility, \r\n            T.Prec");
            viewString.Append("ipitation AS tblweatherchcurrent_Precipitation, \r\n            T.feelslike AS tbl");
            viewString.Append("weatherchcurrent_feelslike, \r\n            T.UV AS tblweatherchcurrent_UV, \r\n    ");
            viewString.Append("        T.Icon AS tblweatherchcurrent_Icon, \r\n            T.Icon_url AS [tblweat");
            viewString.Append("herchcurrent.Icon_url], \r\n            T.AlertID AS tblweatherchcurrent_AlertID, ");
            viewString.Append("\r\n            True AS _from0\r\n        FROM CentralDBModelStoreContainer.tblweath");
            viewString.Append("erchcurrent AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblweatherchcurrent", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tbldevicefeature
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView311()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tbldevicefeature", @"
    SELECT VALUE -- Constructing tbldevicefeature
        [CentralDBModel.Store.tbldevicefeature](T1.tbldevicefeature_ID, T1.tbldevicefeature_FeatureName)
    FROM (
        SELECT 
            T.ID AS tbldevicefeature_ID, 
            T.FeatureName AS tbldevicefeature_FeatureName, 
            True AS _from0
        FROM Entities.tbldevicefeature AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tbldevicefeature
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView312()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tbldevicefeature", @"
    SELECT VALUE -- Constructing tbldevicefeature
        [CentralDBModel.tbldevicefeature](T1.tbldevicefeature_ID, T1.tbldevicefeature_FeatureName)
    FROM (
        SELECT 
            T.ID AS tbldevicefeature_ID, 
            T.FeatureName AS tbldevicefeature_FeatureName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tbldevicefeature AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tbluserdeviceinfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView313()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tbluserdeviceinfo", @"
    SELECT VALUE -- Constructing tbluserdeviceinfo
        [CentralDBModel.Store.tbluserdeviceinfo](T1.tbluserdeviceinfo_ID, T1.tbluserdeviceinfo_UserID, T1.tbluserdeviceinfo_SiteID, T1.tbluserdeviceinfo_ZoneID, T1.tbluserdeviceinfo_DeviceID, T1.tbluserdeviceinfo_LiveView, T1.tbluserdeviceinfo_PlaybackView, T1.tbluserdeviceinfo_RecordingExport, T1.tbluserdeviceinfo_PTZControl, T1.tbluserdeviceinfo_NonCamView, T1.tbluserdeviceinfo_NonCamControl, T1.tbluserdeviceinfo_EventCodeaccess)
    FROM (
        SELECT 
            T.ID AS tbluserdeviceinfo_ID, 
            T.UserID AS tbluserdeviceinfo_UserID, 
            T.SiteID AS tbluserdeviceinfo_SiteID, 
            T.ZoneID AS tbluserdeviceinfo_ZoneID, 
            T.DeviceID AS tbluserdeviceinfo_DeviceID, 
            T.LiveView AS tbluserdeviceinfo_LiveView, 
            T.PlaybackView AS tbluserdeviceinfo_PlaybackView, 
            T.RecordingExport AS tbluserdeviceinfo_RecordingExport, 
            T.PTZControl AS tbluserdeviceinfo_PTZControl, 
            T.NonCamView AS tbluserdeviceinfo_NonCamView, 
            T.NonCamControl AS tbluserdeviceinfo_NonCamControl, 
            T.EventCodeaccess AS tbluserdeviceinfo_EventCodeaccess, 
            True AS _from0
        FROM Entities.tbluserdeviceinfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tbluserdeviceinfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView314()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tbluserdeviceinfo", @"
    SELECT VALUE -- Constructing tbluserdeviceinfo
        [CentralDBModel.tbluserdeviceinfo](T1.tbluserdeviceinfo_ID, T1.tbluserdeviceinfo_UserID, T1.tbluserdeviceinfo_SiteID, T1.tbluserdeviceinfo_ZoneID, T1.tbluserdeviceinfo_DeviceID, T1.tbluserdeviceinfo_LiveView, T1.tbluserdeviceinfo_PlaybackView, T1.tbluserdeviceinfo_RecordingExport, T1.tbluserdeviceinfo_PTZControl, T1.tbluserdeviceinfo_NonCamView, T1.tbluserdeviceinfo_NonCamControl, T1.tbluserdeviceinfo_EventCodeaccess)
    FROM (
        SELECT 
            T.ID AS tbluserdeviceinfo_ID, 
            T.UserID AS tbluserdeviceinfo_UserID, 
            T.SiteID AS tbluserdeviceinfo_SiteID, 
            T.ZoneID AS tbluserdeviceinfo_ZoneID, 
            T.DeviceID AS tbluserdeviceinfo_DeviceID, 
            T.LiveView AS tbluserdeviceinfo_LiveView, 
            T.PlaybackView AS tbluserdeviceinfo_PlaybackView, 
            T.RecordingExport AS tbluserdeviceinfo_RecordingExport, 
            T.PTZControl AS tbluserdeviceinfo_PTZControl, 
            T.NonCamView AS tbluserdeviceinfo_NonCamView, 
            T.NonCamControl AS tbluserdeviceinfo_NonCamControl, 
            T.EventCodeaccess AS tbluserdeviceinfo_EventCodeaccess, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tbluserdeviceinfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWeatherchforecast
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView315()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWeatherchforecast", @"
    SELECT VALUE -- Constructing tblWeatherchforecast
        [CentralDBModel.Store.tblWeatherchforecast](T1.tblWeatherchforecast_ID, T1.tblWeatherchforecast_CityName, T1.tblWeatherchforecast_CityID, T1.tblWeatherchforecast_TransactionID, T1.tblWeatherchforecast_ForecastDate, T1.tblWeatherchforecast_ForecastPeriod, T1.tblWeatherchforecast_ForeCastDay, T1.tblWeatherchforecast_ForecastIcon, T1.tblWeatherchforecast_ForecastIconurl, T1.tblWeatherchforecast_Daytitle, T1.tblWeatherchforecast_ForecastText, T1.tblWeatherchforecast_POP, T1.tblWeatherchforecast_AlertID)
    FROM (
        SELECT 
            T.ID AS tblWeatherchforecast_ID, 
            T.CityName AS tblWeatherchforecast_CityName, 
            T.CityID AS tblWeatherchforecast_CityID, 
            T.TransactionID AS tblWeatherchforecast_TransactionID, 
            T.ForecastDate AS tblWeatherchforecast_ForecastDate, 
            T.ForecastPeriod AS tblWeatherchforecast_ForecastPeriod, 
            T.ForeCastDay AS tblWeatherchforecast_ForeCastDay, 
            T.ForecastIcon AS tblWeatherchforecast_ForecastIcon, 
            T.ForecastIconurl AS tblWeatherchforecast_ForecastIconurl, 
            T.Daytitle AS tblWeatherchforecast_Daytitle, 
            T.ForecastText AS tblWeatherchforecast_ForecastText, 
            T.POP AS tblWeatherchforecast_POP, 
            T.AlertID AS tblWeatherchforecast_AlertID, 
            True AS _from0
        FROM Entities.tblWeatherchforecast AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblWeatherchforecast
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView316()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWeatherchforecast", "\r\n    SELECT VALUE -- Constructing tblWeatherchforecast\r\n        [CentralDBModel." +
                    "tblWeatherchforecast](T1.tblWeatherchforecast_ID, T1.tblWeatherchforecast_CityNa" +
                    "me, T1.tblWeatherchforecast_CityID, T1.tblWeatherchforecast_TransactionID, T1.tb" +
                    "lWeatherchforecast_ForecastDate, T1.tblWeatherchforecast_ForecastPeriod, T1.tblW" +
                    "eatherchforecast_ForeCastDay, T1.tblWeatherchforecast_ForecastIcon, T1.tblWeathe" +
                    "rchforecast_ForecastIconurl, T1.tblWeatherchforecast_Daytitle, T1.tblWeatherchfo" +
                    "recast_ForecastText, T1.tblWeatherchforecast_POP, T1.tblWeatherchforecast_AlertI" +
                    "D)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS tblWeatherchforecast_ID, \r\n" +
                    "            T.CityName AS tblWeatherchforecast_CityName, \r\n            T.CityID " +
                    "AS tblWeatherchforecast_CityID, \r\n            T.TransactionID AS tblWeatherchfor" +
                    "ecast_TransactionID, \r\n            T.ForecastDate AS tblWeatherchforecast_Foreca" +
                    "stDate, \r\n            T.ForecastPeriod AS tblWeatherchforecast_ForecastPeriod, \r" +
                    "\n            T.ForeCastDay AS tblWeatherchforecast_ForeCastDay, \r\n            T." +
                    "ForecastIcon AS tblWeatherchforecast_ForecastIcon, \r\n            T.ForecastIconu" +
                    "rl AS tblWeatherchforecast_ForecastIconurl, \r\n            T.Daytitle AS tblWeath" +
                    "erchforecast_Daytitle, \r\n            T.ForecastText AS tblWeatherchforecast_Fore" +
                    "castText, \r\n            T.POP AS tblWeatherchforecast_POP, \r\n            T.Alert" +
                    "ID AS tblWeatherchforecast_AlertID, \r\n            True AS _from0\r\n        FROM C" +
                    "entralDBModelStoreContainer.tblWeatherchforecast AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWeatherhourlyforecast
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView317()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2672);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblWeatherhourlyforecast\r\n        [CentralDBM");
            viewString.Append("odel.Store.tblWeatherhourlyforecast](T1.tblWeatherhourlyforecast_ID, T1.tblWeath");
            viewString.Append("erhourlyforecast_CityID, T1.tblWeatherhourlyforecast_CityName, T1.tblWeatherhour");
            viewString.Append("lyforecast_ForecastDate, T1.tblWeatherhourlyforecast_ForecastDateTime, T1.tblWea");
            viewString.Append("therhourlyforecast_Epoc, T1.tblWeatherhourlyforecast_Pretty, T1.tblWeatherhourly");
            viewString.Append("forecast_Temp, T1.tblWeatherhourlyforecast_Dewpoint, T1.tblWeatherhourlyforecast");
            viewString.Append("_Condition, T1.tblWeatherhourlyforecast_Icon, T1.[tblWeatherhourlyforecast.Icon_");
            viewString.Append("URL], T1.tblWeatherhourlyforecast_Fctcode, T1.tblWeatherhourlyforecast_Sky, T1.t");
            viewString.Append("blWeatherhourlyforecast_WindSpeed, T1.tblWeatherhourlyforecast_WindDirection, T1");
            viewString.Append(".tblWeatherhourlyforecast_WindName, T1.tblWeatherhourlyforecast_UV, T1.tblWeathe");
            viewString.Append("rhourlyforecast_HeatIndex, T1.tblWeatherhourlyforecast_Feelslike, T1.tblWeatherh");
            viewString.Append("ourlyforecast_QPF, T1.tblWeatherhourlyforecast_Snow, T1.tblWeatherhourlyforecast");
            viewString.Append("_POP, T1.tblWeatherhourlyforecast_MSLP, T1.tblWeatherhourlyforecast_AlertID)\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.ID AS tblWeatherhourlyforecast_ID, \r\n  ");
            viewString.Append("          T.CityID AS tblWeatherhourlyforecast_CityID, \r\n            T.CityName ");
            viewString.Append("AS tblWeatherhourlyforecast_CityName, \r\n            T.ForecastDate AS tblWeather");
            viewString.Append("hourlyforecast_ForecastDate, \r\n            T.ForecastDateTime AS tblWeatherhourl");
            viewString.Append("yforecast_ForecastDateTime, \r\n            T.Epoc AS tblWeatherhourlyforecast_Epo");
            viewString.Append("c, \r\n            T.Pretty AS tblWeatherhourlyforecast_Pretty, \r\n            T.Te");
            viewString.Append("mp AS tblWeatherhourlyforecast_Temp, \r\n            T.Dewpoint AS tblWeatherhourl");
            viewString.Append("yforecast_Dewpoint, \r\n            T.Condition AS tblWeatherhourlyforecast_Condit");
            viewString.Append("ion, \r\n            T.Icon AS tblWeatherhourlyforecast_Icon, \r\n            T.Icon");
            viewString.Append("_URL AS [tblWeatherhourlyforecast.Icon_URL], \r\n            T.Fctcode AS tblWeath");
            viewString.Append("erhourlyforecast_Fctcode, \r\n            T.Sky AS tblWeatherhourlyforecast_Sky, \r");
            viewString.Append("\n            T.WindSpeed AS tblWeatherhourlyforecast_WindSpeed, \r\n            T.");
            viewString.Append("WindDirection AS tblWeatherhourlyforecast_WindDirection, \r\n            T.WindNam");
            viewString.Append("e AS tblWeatherhourlyforecast_WindName, \r\n            T.UV AS tblWeatherhourlyfo");
            viewString.Append("recast_UV, \r\n            T.HeatIndex AS tblWeatherhourlyforecast_HeatIndex, \r\n  ");
            viewString.Append("          T.Feelslike AS tblWeatherhourlyforecast_Feelslike, \r\n            T.QPF");
            viewString.Append(" AS tblWeatherhourlyforecast_QPF, \r\n            T.Snow AS tblWeatherhourlyforeca");
            viewString.Append("st_Snow, \r\n            T.POP AS tblWeatherhourlyforecast_POP, \r\n            T.MS");
            viewString.Append("LP AS tblWeatherhourlyforecast_MSLP, \r\n            T.AlertID AS tblWeatherhourly");
            viewString.Append("forecast_AlertID, \r\n            True AS _from0\r\n        FROM Entities.tblWeather");
            viewString.Append("hourlyforecast AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWeatherhourlyforecast", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblWeatherhourlyforecast
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView318()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2686);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblWeatherhourlyforecast\r\n        [CentralDBM");
            viewString.Append("odel.tblWeatherhourlyforecast](T1.tblWeatherhourlyforecast_ID, T1.tblWeatherhour");
            viewString.Append("lyforecast_CityID, T1.tblWeatherhourlyforecast_CityName, T1.tblWeatherhourlyfore");
            viewString.Append("cast_ForecastDate, T1.tblWeatherhourlyforecast_ForecastDateTime, T1.tblWeatherho");
            viewString.Append("urlyforecast_Epoc, T1.tblWeatherhourlyforecast_Pretty, T1.tblWeatherhourlyforeca");
            viewString.Append("st_Temp, T1.tblWeatherhourlyforecast_Dewpoint, T1.tblWeatherhourlyforecast_Condi");
            viewString.Append("tion, T1.tblWeatherhourlyforecast_Icon, T1.[tblWeatherhourlyforecast.Icon_URL], ");
            viewString.Append("T1.tblWeatherhourlyforecast_Fctcode, T1.tblWeatherhourlyforecast_Sky, T1.tblWeat");
            viewString.Append("herhourlyforecast_WindSpeed, T1.tblWeatherhourlyforecast_WindDirection, T1.tblWe");
            viewString.Append("atherhourlyforecast_WindName, T1.tblWeatherhourlyforecast_UV, T1.tblWeatherhourl");
            viewString.Append("yforecast_HeatIndex, T1.tblWeatherhourlyforecast_Feelslike, T1.tblWeatherhourlyf");
            viewString.Append("orecast_QPF, T1.tblWeatherhourlyforecast_Snow, T1.tblWeatherhourlyforecast_POP, ");
            viewString.Append("T1.tblWeatherhourlyforecast_MSLP, T1.tblWeatherhourlyforecast_AlertID)\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.ID AS tblWeatherhourlyforecast_ID, \r\n        ");
            viewString.Append("    T.CityID AS tblWeatherhourlyforecast_CityID, \r\n            T.CityName AS tbl");
            viewString.Append("Weatherhourlyforecast_CityName, \r\n            T.ForecastDate AS tblWeatherhourly");
            viewString.Append("forecast_ForecastDate, \r\n            T.ForecastDateTime AS tblWeatherhourlyforec");
            viewString.Append("ast_ForecastDateTime, \r\n            T.Epoc AS tblWeatherhourlyforecast_Epoc, \r\n ");
            viewString.Append("           T.Pretty AS tblWeatherhourlyforecast_Pretty, \r\n            T.Temp AS ");
            viewString.Append("tblWeatherhourlyforecast_Temp, \r\n            T.Dewpoint AS tblWeatherhourlyforec");
            viewString.Append("ast_Dewpoint, \r\n            T.Condition AS tblWeatherhourlyforecast_Condition, \r");
            viewString.Append("\n            T.Icon AS tblWeatherhourlyforecast_Icon, \r\n            T.Icon_URL A");
            viewString.Append("S [tblWeatherhourlyforecast.Icon_URL], \r\n            T.Fctcode AS tblWeatherhour");
            viewString.Append("lyforecast_Fctcode, \r\n            T.Sky AS tblWeatherhourlyforecast_Sky, \r\n     ");
            viewString.Append("       T.WindSpeed AS tblWeatherhourlyforecast_WindSpeed, \r\n            T.WindDi");
            viewString.Append("rection AS tblWeatherhourlyforecast_WindDirection, \r\n            T.WindName AS t");
            viewString.Append("blWeatherhourlyforecast_WindName, \r\n            T.UV AS tblWeatherhourlyforecast");
            viewString.Append("_UV, \r\n            T.HeatIndex AS tblWeatherhourlyforecast_HeatIndex, \r\n        ");
            viewString.Append("    T.Feelslike AS tblWeatherhourlyforecast_Feelslike, \r\n            T.QPF AS tb");
            viewString.Append("lWeatherhourlyforecast_QPF, \r\n            T.Snow AS tblWeatherhourlyforecast_Sno");
            viewString.Append("w, \r\n            T.POP AS tblWeatherhourlyforecast_POP, \r\n            T.MSLP AS ");
            viewString.Append("tblWeatherhourlyforecast_MSLP, \r\n            T.AlertID AS tblWeatherhourlyforeca");
            viewString.Append("st_AlertID, \r\n            True AS _from0\r\n        FROM CentralDBModelStoreContai");
            viewString.Append("ner.tblWeatherhourlyforecast AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWeatherhourlyforecast", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSettingTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView319()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSettingTypeMaster", @"
    SELECT VALUE -- Constructing tblSettingTypeMaster
        [CentralDBModel.Store.tblSettingTypeMaster](T1.tblSettingTypeMaster_ID, T1.tblSettingTypeMaster_SettingType)
    FROM (
        SELECT 
            T.ID AS tblSettingTypeMaster_ID, 
            T.SettingType AS tblSettingTypeMaster_SettingType, 
            True AS _from0
        FROM Entities.tblSettingTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSettingTypeMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView320()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSettingTypeMaster", @"
    SELECT VALUE -- Constructing tblSettingTypeMaster
        [CentralDBModel.tblSettingTypeMaster](T1.tblSettingTypeMaster_ID, T1.tblSettingTypeMaster_SettingType)
    FROM (
        SELECT 
            T.ID AS tblSettingTypeMaster_ID, 
            T.SettingType AS tblSettingTypeMaster_SettingType, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSettingTypeMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSMSConfiguration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView321()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSMSConfiguration", @"
    SELECT VALUE -- Constructing tblSMSConfiguration
        [CentralDBModel.Store.tblSMSConfiguration](T1.tblSMSConfiguration_ID, T1.tblSMSConfiguration_Name, T1.tblSMSConfiguration_Url)
    FROM (
        SELECT 
            T.ID AS tblSMSConfiguration_ID, 
            T.Name AS tblSMSConfiguration_Name, 
            T.Url AS tblSMSConfiguration_Url, 
            True AS _from0
        FROM Entities.tblSMSConfiguration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSMSConfiguration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView322()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSMSConfiguration", @"
    SELECT VALUE -- Constructing tblSMSConfiguration
        [CentralDBModel.tblSMSConfiguration](T1.tblSMSConfiguration_ID, T1.tblSMSConfiguration_Url, T1.tblSMSConfiguration_Name)
    FROM (
        SELECT 
            T.ID AS tblSMSConfiguration_ID, 
            T.Url AS tblSMSConfiguration_Url, 
            T.Name AS tblSMSConfiguration_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSMSConfiguration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSMTPConfiguration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView323()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSMTPConfiguration", @"
    SELECT VALUE -- Constructing tblSMTPConfiguration
        [CentralDBModel.Store.tblSMTPConfiguration](T1.tblSMTPConfiguration_ID, T1.tblSMTPConfiguration_Name, T1.tblSMTPConfiguration_SMTPServer, T1.tblSMTPConfiguration_SMTPPort, T1.tblSMTPConfiguration_SMTPUser, T1.tblSMTPConfiguration_SMTPPassword, T1.tblSMTPConfiguration_UseAuthentication, T1.tblSMTPConfiguration_UseSSL, T1.tblSMTPConfiguration_FromAddress, T1.tblSMTPConfiguration_EmailDisplayName)
    FROM (
        SELECT 
            T.ID AS tblSMTPConfiguration_ID, 
            T.Name AS tblSMTPConfiguration_Name, 
            T.SMTPServer AS tblSMTPConfiguration_SMTPServer, 
            T.SMTPPort AS tblSMTPConfiguration_SMTPPort, 
            T.SMTPUser AS tblSMTPConfiguration_SMTPUser, 
            T.SMTPPassword AS tblSMTPConfiguration_SMTPPassword, 
            T.UseAuthentication AS tblSMTPConfiguration_UseAuthentication, 
            T.UseSSL AS tblSMTPConfiguration_UseSSL, 
            T.FromAddress AS tblSMTPConfiguration_FromAddress, 
            T.EmailDisplayName AS tblSMTPConfiguration_EmailDisplayName, 
            True AS _from0
        FROM Entities.tblSMTPConfiguration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSMTPConfiguration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView324()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSMTPConfiguration", @"
    SELECT VALUE -- Constructing tblSMTPConfiguration
        [CentralDBModel.tblSMTPConfiguration](T1.tblSMTPConfiguration_ID, T1.tblSMTPConfiguration_SMTPServer, T1.tblSMTPConfiguration_SMTPPort, T1.tblSMTPConfiguration_SMTPUser, T1.tblSMTPConfiguration_SMTPPassword, T1.tblSMTPConfiguration_UseAuthentication, T1.tblSMTPConfiguration_UseSSL, T1.tblSMTPConfiguration_FromAddress, T1.tblSMTPConfiguration_EmailDisplayName, T1.tblSMTPConfiguration_Name)
    FROM (
        SELECT 
            T.ID AS tblSMTPConfiguration_ID, 
            T.SMTPServer AS tblSMTPConfiguration_SMTPServer, 
            T.SMTPPort AS tblSMTPConfiguration_SMTPPort, 
            T.SMTPUser AS tblSMTPConfiguration_SMTPUser, 
            T.SMTPPassword AS tblSMTPConfiguration_SMTPPassword, 
            T.UseAuthentication AS tblSMTPConfiguration_UseAuthentication, 
            T.UseSSL AS tblSMTPConfiguration_UseSSL, 
            T.FromAddress AS tblSMTPConfiguration_FromAddress, 
            T.EmailDisplayName AS tblSMTPConfiguration_EmailDisplayName, 
            T.Name AS tblSMTPConfiguration_Name, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSMTPConfiguration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblHolidayMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView325()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblHolidayMaster", @"
    SELECT VALUE -- Constructing tblHolidayMaster
        [CentralDBModel.Store.tblHolidayMaster](T1.tblHolidayMaster_ID, T1.tblHolidayMaster_StateID, T1.tblHolidayMaster_HolidayDate, T1.tblHolidayMaster_HolidayDescription)
    FROM (
        SELECT 
            T.ID AS tblHolidayMaster_ID, 
            T.StateID AS tblHolidayMaster_StateID, 
            T.HolidayDate AS tblHolidayMaster_HolidayDate, 
            T.HolidayDescription AS tblHolidayMaster_HolidayDescription, 
            True AS _from0
        FROM Entities.tblHolidayMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblHolidayMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView326()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblHolidayMaster", @"
    SELECT VALUE -- Constructing tblHolidayMaster
        [CentralDBModel.tblHolidayMaster](T1.tblHolidayMaster_ID, T1.tblHolidayMaster_StateID, T1.tblHolidayMaster_HolidayDate, T1.tblHolidayMaster_HolidayDescription)
    FROM (
        SELECT 
            T.ID AS tblHolidayMaster_ID, 
            T.StateID AS tblHolidayMaster_StateID, 
            T.HolidayDate AS tblHolidayMaster_HolidayDate, 
            T.HolidayDescription AS tblHolidayMaster_HolidayDescription, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblHolidayMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblSiteHolidayList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView327()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblSiteHolidayList", @"
    SELECT VALUE -- Constructing tblSiteHolidayList
        [CentralDBModel.Store.tblSiteHolidayList](T1.tblSiteHolidayList_ID, T1.tblSiteHolidayList_SiteID, T1.tblSiteHolidayList_HolidayMasterID)
    FROM (
        SELECT 
            T.ID AS tblSiteHolidayList_ID, 
            T.SiteID AS tblSiteHolidayList_SiteID, 
            T.HolidayMasterID AS tblSiteHolidayList_HolidayMasterID, 
            True AS _from0
        FROM Entities.tblSiteHolidayList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblSiteHolidayList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView328()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblSiteHolidayList", @"
    SELECT VALUE -- Constructing tblSiteHolidayList
        [CentralDBModel.tblSiteHolidayList](T1.tblSiteHolidayList_ID, T1.tblSiteHolidayList_SiteID, T1.tblSiteHolidayList_HolidayMasterID)
    FROM (
        SELECT 
            T.ID AS tblSiteHolidayList_ID, 
            T.SiteID AS tblSiteHolidayList_SiteID, 
            T.HolidayMasterID AS tblSiteHolidayList_HolidayMasterID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblSiteHolidayList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblStateMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView329()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblStateMaster", @"
    SELECT VALUE -- Constructing tblStateMaster
        [CentralDBModel.Store.tblStateMaster](T1.tblStateMaster_ID, T1.tblStateMaster_StateName)
    FROM (
        SELECT 
            T.ID AS tblStateMaster_ID, 
            T.StateName AS tblStateMaster_StateName, 
            True AS _from0
        FROM Entities.tblStateMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblStateMaster
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView330()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblStateMaster", @"
    SELECT VALUE -- Constructing tblStateMaster
        [CentralDBModel.tblStateMaster](T1.tblStateMaster_ID, T1.tblStateMaster_StateName)
    FROM (
        SELECT 
            T.ID AS tblStateMaster_ID, 
            T.StateName AS tblStateMaster_StateName, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblStateMaster AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblHpcoeParking
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView331()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblHpcoeParking", @"
    SELECT VALUE -- Constructing tblHpcoeParking
        [CentralDBModel.Store.tblHpcoeParking](T1.tblHpcoeParking_ID, T1.[tblHpcoeParking.Lot_id], T1.[tblHpcoeParking.Sensor_id], T1.[tblHpcoeParking.Spot_name], T1.[tblHpcoeParking.Spot_online], T1.tblHpcoeParking_Free, T1.tblHpcoeParking_Lastintime, T1.tblHpcoeParking_Lastouttime, T1.tblHpcoeParking_Lat, T1.tblHpcoeParking_Lng)
    FROM (
        SELECT 
            T.ID AS tblHpcoeParking_ID, 
            T.Lot_id AS [tblHpcoeParking.Lot_id], 
            T.Sensor_id AS [tblHpcoeParking.Sensor_id], 
            T.Spot_name AS [tblHpcoeParking.Spot_name], 
            T.Spot_online AS [tblHpcoeParking.Spot_online], 
            T.Free AS tblHpcoeParking_Free, 
            T.Lastintime AS tblHpcoeParking_Lastintime, 
            T.Lastouttime AS tblHpcoeParking_Lastouttime, 
            T.Lat AS tblHpcoeParking_Lat, 
            T.Lng AS tblHpcoeParking_Lng, 
            True AS _from0
        FROM Entities.tblHpcoeParking AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblHpcoeParking
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView332()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblHpcoeParking", @"
    SELECT VALUE -- Constructing tblHpcoeParking
        [CentralDBModel.tblHpcoeParking](T1.tblHpcoeParking_ID, T1.[tblHpcoeParking.Lot_id], T1.[tblHpcoeParking.Sensor_id], T1.[tblHpcoeParking.Spot_name], T1.[tblHpcoeParking.Spot_online], T1.tblHpcoeParking_Free, T1.tblHpcoeParking_Lastintime, T1.tblHpcoeParking_Lastouttime, T1.tblHpcoeParking_Lat, T1.tblHpcoeParking_Lng)
    FROM (
        SELECT 
            T.ID AS tblHpcoeParking_ID, 
            T.Lot_id AS [tblHpcoeParking.Lot_id], 
            T.Sensor_id AS [tblHpcoeParking.Sensor_id], 
            T.Spot_name AS [tblHpcoeParking.Spot_name], 
            T.Spot_online AS [tblHpcoeParking.Spot_online], 
            T.Free AS tblHpcoeParking_Free, 
            T.Lastintime AS tblHpcoeParking_Lastintime, 
            T.Lastouttime AS tblHpcoeParking_Lastouttime, 
            T.Lat AS tblHpcoeParking_Lat, 
            T.Lng AS tblHpcoeParking_Lng, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblHpcoeParking AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblEvents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView333()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblEvents", @"
    SELECT VALUE -- Constructing tblEvents
        [CentralDBModel.Store.tblEvents](T1.tblEvents_ID, T1.tblEvents_TransactionID, T1.tblEvents_RawData, T1.[tblEvents.Branch_ID], T1.[tblEvents.Client_no], T1.[tblEvents.Type_No], T1.tblEvents_Zone, T1.tblEvents_EventDateTime, T1.tblEvents_ReceivedDateTime, T1.tblEvents_AlertID)
    FROM (
        SELECT 
            T.ID AS tblEvents_ID, 
            T.TransactionID AS tblEvents_TransactionID, 
            T.RawData AS tblEvents_RawData, 
            T.Branch_ID AS [tblEvents.Branch_ID], 
            T.Client_no AS [tblEvents.Client_no], 
            T.Type_No AS [tblEvents.Type_No], 
            T.Zone AS tblEvents_Zone, 
            T.EventDateTime AS tblEvents_EventDateTime, 
            T.ReceivedDateTime AS tblEvents_ReceivedDateTime, 
            T.AlertID AS tblEvents_AlertID, 
            True AS _from0
        FROM Entities.tblEvents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblEvents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView334()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblEvents", @"
    SELECT VALUE -- Constructing tblEvents
        [CentralDBModel.tblEvents](T1.tblEvents_ID, T1.tblEvents_TransactionID, T1.tblEvents_RawData, T1.[tblEvents.Branch_ID], T1.[tblEvents.Client_no], T1.[tblEvents.Type_No], T1.tblEvents_Zone, T1.tblEvents_EventDateTime, T1.tblEvents_ReceivedDateTime, T1.tblEvents_AlertID)
    FROM (
        SELECT 
            T.ID AS tblEvents_ID, 
            T.TransactionID AS tblEvents_TransactionID, 
            T.RawData AS tblEvents_RawData, 
            T.Branch_ID AS [tblEvents.Branch_ID], 
            T.Client_no AS [tblEvents.Client_no], 
            T.Type_No AS [tblEvents.Type_No], 
            T.Zone AS tblEvents_Zone, 
            T.EventDateTime AS tblEvents_EventDateTime, 
            T.ReceivedDateTime AS tblEvents_ReceivedDateTime, 
            T.AlertID AS tblEvents_AlertID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblEvents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblPrimarySecondaryServerMapping
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView335()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblPrimarySecondaryServerMapping", "\r\n    SELECT VALUE -- Constructing tblPrimarySecondaryServerMapping\r\n        [Cen" +
                    "tralDBModel.Store.tblPrimarySecondaryServerMapping](T1.tblPrimarySecondaryServer" +
                    "Mapping_ID, T1.tblPrimarySecondaryServerMapping_InterfaceID, T1.tblPrimarySecond" +
                    "aryServerMapping_PrimaryServerIP, T1.tblPrimarySecondaryServerMapping_PrimarySer" +
                    "verPort, T1.tblPrimarySecondaryServerMapping_PrimaryServerUserName, T1.tblPrimar" +
                    "ySecondaryServerMapping_PrimaryServerPassword, T1.tblPrimarySecondaryServerMappi" +
                    "ng_PrimaryServerURL, T1.tblPrimarySecondaryServerMapping_SecondaryServerIP, T1.t" +
                    "blPrimarySecondaryServerMapping_SecondaryServerPort, T1.tblPrimarySecondaryServe" +
                    "rMapping_SecondaryServerUserName, T1.tblPrimarySecondaryServerMapping_SecondaryS" +
                    "erverPassword, T1.tblPrimarySecondaryServerMapping_SecondaryServerURL)\r\n    FROM" +
                    " (\r\n        SELECT \r\n            T.ID AS tblPrimarySecondaryServerMapping_ID, \r\n" +
                    "            T.InterfaceID AS tblPrimarySecondaryServerMapping_InterfaceID, \r\n   " +
                    "         T.PrimaryServerIP AS tblPrimarySecondaryServerMapping_PrimaryServerIP, " +
                    "\r\n            T.PrimaryServerPort AS tblPrimarySecondaryServerMapping_PrimarySer" +
                    "verPort, \r\n            T.PrimaryServerUserName AS tblPrimarySecondaryServerMappi" +
                    "ng_PrimaryServerUserName, \r\n            T.PrimaryServerPassword AS tblPrimarySec" +
                    "ondaryServerMapping_PrimaryServerPassword, \r\n            T.PrimaryServerURL AS t" +
                    "blPrimarySecondaryServerMapping_PrimaryServerURL, \r\n            T.SecondaryServe" +
                    "rIP AS tblPrimarySecondaryServerMapping_SecondaryServerIP, \r\n            T.Secon" +
                    "daryServerPort AS tblPrimarySecondaryServerMapping_SecondaryServerPort, \r\n      " +
                    "      T.SecondaryServerUserName AS tblPrimarySecondaryServerMapping_SecondarySer" +
                    "verUserName, \r\n            T.SecondaryServerPassword AS tblPrimarySecondaryServe" +
                    "rMapping_SecondaryServerPassword, \r\n            T.SecondaryServerURL AS tblPrima" +
                    "rySecondaryServerMapping_SecondaryServerURL, \r\n            True AS _from0\r\n     " +
                    "   FROM Entities.tblPrimarySecondaryServerMapping AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblPrimarySecondaryServerMapping
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView336()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblPrimarySecondaryServerMapping", "\r\n    SELECT VALUE -- Constructing tblPrimarySecondaryServerMapping\r\n        [Cen" +
                    "tralDBModel.tblPrimarySecondaryServerMapping](T1.tblPrimarySecondaryServerMappin" +
                    "g_ID, T1.tblPrimarySecondaryServerMapping_InterfaceID, T1.tblPrimarySecondarySer" +
                    "verMapping_PrimaryServerIP, T1.tblPrimarySecondaryServerMapping_PrimaryServerPor" +
                    "t, T1.tblPrimarySecondaryServerMapping_PrimaryServerUserName, T1.tblPrimarySecon" +
                    "daryServerMapping_PrimaryServerPassword, T1.tblPrimarySecondaryServerMapping_Pri" +
                    "maryServerURL, T1.tblPrimarySecondaryServerMapping_SecondaryServerIP, T1.tblPrim" +
                    "arySecondaryServerMapping_SecondaryServerPort, T1.tblPrimarySecondaryServerMappi" +
                    "ng_SecondaryServerUserName, T1.tblPrimarySecondaryServerMapping_SecondaryServerP" +
                    "assword, T1.tblPrimarySecondaryServerMapping_SecondaryServerURL)\r\n    FROM (\r\n  " +
                    "      SELECT \r\n            T.ID AS tblPrimarySecondaryServerMapping_ID, \r\n      " +
                    "      T.InterfaceID AS tblPrimarySecondaryServerMapping_InterfaceID, \r\n         " +
                    "   T.PrimaryServerIP AS tblPrimarySecondaryServerMapping_PrimaryServerIP, \r\n    " +
                    "        T.PrimaryServerPort AS tblPrimarySecondaryServerMapping_PrimaryServerPor" +
                    "t, \r\n            T.PrimaryServerUserName AS tblPrimarySecondaryServerMapping_Pri" +
                    "maryServerUserName, \r\n            T.PrimaryServerPassword AS tblPrimarySecondary" +
                    "ServerMapping_PrimaryServerPassword, \r\n            T.PrimaryServerURL AS tblPrim" +
                    "arySecondaryServerMapping_PrimaryServerURL, \r\n            T.SecondaryServerIP AS" +
                    " tblPrimarySecondaryServerMapping_SecondaryServerIP, \r\n            T.SecondarySe" +
                    "rverPort AS tblPrimarySecondaryServerMapping_SecondaryServerPort, \r\n            " +
                    "T.SecondaryServerUserName AS tblPrimarySecondaryServerMapping_SecondaryServerUse" +
                    "rName, \r\n            T.SecondaryServerPassword AS tblPrimarySecondaryServerMappi" +
                    "ng_SecondaryServerPassword, \r\n            T.SecondaryServerURL AS tblPrimarySeco" +
                    "ndaryServerMapping_SecondaryServerURL, \r\n            True AS _from0\r\n        FRO" +
                    "M CentralDBModelStoreContainer.tblPrimarySecondaryServerMapping AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblBinThreshold
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView337()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblBinThreshold", @"
    SELECT VALUE -- Constructing tblBinThreshold
        [CentralDBModel.Store.tblBinThreshold](T1.tblBinThreshold_ID, T1.tblBinThreshold_BinIMEINumber, T1.tblBinThreshold_BinHeight, T1.tblBinThreshold_Binfillthreshold)
    FROM (
        SELECT 
            T.ID AS tblBinThreshold_ID, 
            T.BinIMEINumber AS tblBinThreshold_BinIMEINumber, 
            T.BinHeight AS tblBinThreshold_BinHeight, 
            T.Binfillthreshold AS tblBinThreshold_Binfillthreshold, 
            True AS _from0
        FROM Entities.tblBinThreshold AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblBinThreshold
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView338()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblBinThreshold", @"
    SELECT VALUE -- Constructing tblBinThreshold
        [CentralDBModel.tblBinThreshold](T1.tblBinThreshold_ID, T1.tblBinThreshold_BinIMEINumber, T1.tblBinThreshold_BinHeight, T1.tblBinThreshold_Binfillthreshold)
    FROM (
        SELECT 
            T.ID AS tblBinThreshold_ID, 
            T.BinIMEINumber AS tblBinThreshold_BinIMEINumber, 
            T.BinHeight AS tblBinThreshold_BinHeight, 
            T.Binfillthreshold AS tblBinThreshold_Binfillthreshold, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblBinThreshold AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblEnvironmentSensorData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView339()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3643);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblEnvironmentSensorData\r\n        [CentralDBM");
            viewString.Append("odel.Store.tblEnvironmentSensorData](T1.tblEnvironmentSensorData_ID, T1.[tblEnvi");
            viewString.Append("ronmentSensorData.PayLod_M2m_G3], T1.[tblEnvironmentSensorData.PayLod_M2m_G2], T");
            viewString.Append("1.[tblEnvironmentSensorData.PayLod_M2m_G5], T1.[tblEnvironmentSensorData.PayLod_");
            viewString.Append("M2m_G8], T1.[tblEnvironmentSensorData.PayLod_M2m_Hum], T1.[tblEnvironmentSensorD");
            viewString.Append("ata.PayLod_M2m_Lat], T1.[tblEnvironmentSensorData.PayLod_M2m_Lon], T1.[tblEnviro");
            viewString.Append("nmentSensorData.PayLod_M2m_P1], T1.[tblEnvironmentSensorData.PayLod_M2m_P2], T1.");
            viewString.Append("[tblEnvironmentSensorData.PayLod_M2m_T], T1.[tblEnvironmentSensorData.PayLod_M2m");
            viewString.Append("_Temp], T1.[tblEnvironmentSensorData.PayLod_M2m_wd], T1.[tblEnvironmentSensorDat");
            viewString.Append("a.PayLod_M2m_Ws], T1.tblEnvironmentSensorData_Topic, T1.tblEnvironmentSensorData");
            viewString.Append("_UniqueId, T1.tblEnvironmentSensorData_UniqueIdType, T1.tblEnvironmentSensorData");
            viewString.Append("_ReceiveDateTime, T1.tblEnvironmentSensorData_AlertID, T1.tblEnvironmentSensorDa");
            viewString.Append("ta_DeviceID, T1.[tblEnvironmentSensorData.PayLod_M2m_G7], T1.[tblEnvironmentSens");
            viewString.Append("orData.PayLod_M2m_bs], T1.[tblEnvironmentSensorData.PayLod_M2m_leq], T1.[tblEnvi");
            viewString.Append("ronmentSensorData.PayLod_M2m_lmin], T1.[tblEnvironmentSensorData.PayLod_M2m_lmax");
            viewString.Append("], T1.[tblEnvironmentSensorData.PayLod_M2m_rain], T1.[tblEnvironmentSensorData.P");
            viewString.Append("ayLod_M2m_light], T1.[tblEnvironmentSensorData.PayLod_M2m_flood], T1.[tblEnviron");
            viewString.Append("mentSensorData.PayLod_M2m_AQI])\r\n    FROM (\r\n        SELECT \r\n            T.ID A");
            viewString.Append("S tblEnvironmentSensorData_ID, \r\n            T.PayLod_M2m_G3 AS [tblEnvironmentS");
            viewString.Append("ensorData.PayLod_M2m_G3], \r\n            T.PayLod_M2m_G2 AS [tblEnvironmentSensor");
            viewString.Append("Data.PayLod_M2m_G2], \r\n            T.PayLod_M2m_G5 AS [tblEnvironmentSensorData.");
            viewString.Append("PayLod_M2m_G5], \r\n            T.PayLod_M2m_G8 AS [tblEnvironmentSensorData.PayLo");
            viewString.Append("d_M2m_G8], \r\n            T.PayLod_M2m_Hum AS [tblEnvironmentSensorData.PayLod_M2");
            viewString.Append("m_Hum], \r\n            T.PayLod_M2m_Lat AS [tblEnvironmentSensorData.PayLod_M2m_L");
            viewString.Append("at], \r\n            T.PayLod_M2m_Lon AS [tblEnvironmentSensorData.PayLod_M2m_Lon]");
            viewString.Append(", \r\n            T.PayLod_M2m_P1 AS [tblEnvironmentSensorData.PayLod_M2m_P1], \r\n ");
            viewString.Append("           T.PayLod_M2m_P2 AS [tblEnvironmentSensorData.PayLod_M2m_P2], \r\n      ");
            viewString.Append("      T.PayLod_M2m_T AS [tblEnvironmentSensorData.PayLod_M2m_T], \r\n            T");
            viewString.Append(".PayLod_M2m_Temp AS [tblEnvironmentSensorData.PayLod_M2m_Temp], \r\n            T.");
            viewString.Append("PayLod_M2m_wd AS [tblEnvironmentSensorData.PayLod_M2m_wd], \r\n            T.PayLo");
            viewString.Append("d_M2m_Ws AS [tblEnvironmentSensorData.PayLod_M2m_Ws], \r\n            T.Topic AS t");
            viewString.Append("blEnvironmentSensorData_Topic, \r\n            T.UniqueId AS tblEnvironmentSensorD");
            viewString.Append("ata_UniqueId, \r\n            T.UniqueIdType AS tblEnvironmentSensorData_UniqueIdT");
            viewString.Append("ype, \r\n            T.ReceiveDateTime AS tblEnvironmentSensorData_ReceiveDateTime");
            viewString.Append(", \r\n            T.AlertID AS tblEnvironmentSensorData_AlertID, \r\n            T.D");
            viewString.Append("eviceID AS tblEnvironmentSensorData_DeviceID, \r\n            T.PayLod_M2m_G7 AS [");
            viewString.Append("tblEnvironmentSensorData.PayLod_M2m_G7], \r\n            T.PayLod_M2m_bs AS [tblEn");
            viewString.Append("vironmentSensorData.PayLod_M2m_bs], \r\n            T.PayLod_M2m_leq AS [tblEnviro");
            viewString.Append("nmentSensorData.PayLod_M2m_leq], \r\n            T.PayLod_M2m_lmin AS [tblEnvironm");
            viewString.Append("entSensorData.PayLod_M2m_lmin], \r\n            T.PayLod_M2m_lmax AS [tblEnvironme");
            viewString.Append("ntSensorData.PayLod_M2m_lmax], \r\n            T.PayLod_M2m_rain AS [tblEnvironmen");
            viewString.Append("tSensorData.PayLod_M2m_rain], \r\n            T.PayLod_M2m_light AS [tblEnvironmen");
            viewString.Append("tSensorData.PayLod_M2m_light], \r\n            T.PayLod_M2m_flood AS [tblEnvironme");
            viewString.Append("ntSensorData.PayLod_M2m_flood], \r\n            T.PayLod_M2m_AQI AS [tblEnvironmen");
            viewString.Append("tSensorData.PayLod_M2m_AQI], \r\n            True AS _from0\r\n        FROM Entities");
            viewString.Append(".tblEnvironmentSensorData AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblEnvironmentSensorData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblEnvironmentSensorData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView340()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3657);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblEnvironmentSensorData\r\n        [CentralDBM");
            viewString.Append("odel.tblEnvironmentSensorData](T1.tblEnvironmentSensorData_ID, T1.[tblEnvironmen");
            viewString.Append("tSensorData.PayLod_M2m_G3], T1.[tblEnvironmentSensorData.PayLod_M2m_G2], T1.[tbl");
            viewString.Append("EnvironmentSensorData.PayLod_M2m_G5], T1.[tblEnvironmentSensorData.PayLod_M2m_G8");
            viewString.Append("], T1.[tblEnvironmentSensorData.PayLod_M2m_Hum], T1.[tblEnvironmentSensorData.Pa");
            viewString.Append("yLod_M2m_Lat], T1.[tblEnvironmentSensorData.PayLod_M2m_Lon], T1.[tblEnvironmentS");
            viewString.Append("ensorData.PayLod_M2m_P1], T1.[tblEnvironmentSensorData.PayLod_M2m_P2], T1.[tblEn");
            viewString.Append("vironmentSensorData.PayLod_M2m_T], T1.[tblEnvironmentSensorData.PayLod_M2m_Temp]");
            viewString.Append(", T1.[tblEnvironmentSensorData.PayLod_M2m_wd], T1.[tblEnvironmentSensorData.PayL");
            viewString.Append("od_M2m_Ws], T1.tblEnvironmentSensorData_Topic, T1.tblEnvironmentSensorData_Uniqu");
            viewString.Append("eId, T1.tblEnvironmentSensorData_UniqueIdType, T1.tblEnvironmentSensorData_Recei");
            viewString.Append("veDateTime, T1.tblEnvironmentSensorData_AlertID, T1.tblEnvironmentSensorData_Dev");
            viewString.Append("iceID, T1.[tblEnvironmentSensorData.PayLod_M2m_G7], T1.[tblEnvironmentSensorData");
            viewString.Append(".PayLod_M2m_bs], T1.[tblEnvironmentSensorData.PayLod_M2m_leq], T1.[tblEnvironmen");
            viewString.Append("tSensorData.PayLod_M2m_lmin], T1.[tblEnvironmentSensorData.PayLod_M2m_lmax], T1.");
            viewString.Append("[tblEnvironmentSensorData.PayLod_M2m_rain], T1.[tblEnvironmentSensorData.PayLod_");
            viewString.Append("M2m_light], T1.[tblEnvironmentSensorData.PayLod_M2m_flood], T1.[tblEnvironmentSe");
            viewString.Append("nsorData.PayLod_M2m_AQI])\r\n    FROM (\r\n        SELECT \r\n            T.ID AS tblE");
            viewString.Append("nvironmentSensorData_ID, \r\n            T.PayLod_M2m_G3 AS [tblEnvironmentSensorD");
            viewString.Append("ata.PayLod_M2m_G3], \r\n            T.PayLod_M2m_G2 AS [tblEnvironmentSensorData.P");
            viewString.Append("ayLod_M2m_G2], \r\n            T.PayLod_M2m_G5 AS [tblEnvironmentSensorData.PayLod");
            viewString.Append("_M2m_G5], \r\n            T.PayLod_M2m_G8 AS [tblEnvironmentSensorData.PayLod_M2m_");
            viewString.Append("G8], \r\n            T.PayLod_M2m_Hum AS [tblEnvironmentSensorData.PayLod_M2m_Hum]");
            viewString.Append(", \r\n            T.PayLod_M2m_Lat AS [tblEnvironmentSensorData.PayLod_M2m_Lat], \r");
            viewString.Append("\n            T.PayLod_M2m_Lon AS [tblEnvironmentSensorData.PayLod_M2m_Lon], \r\n  ");
            viewString.Append("          T.PayLod_M2m_P1 AS [tblEnvironmentSensorData.PayLod_M2m_P1], \r\n       ");
            viewString.Append("     T.PayLod_M2m_P2 AS [tblEnvironmentSensorData.PayLod_M2m_P2], \r\n            ");
            viewString.Append("T.PayLod_M2m_T AS [tblEnvironmentSensorData.PayLod_M2m_T], \r\n            T.PayLo");
            viewString.Append("d_M2m_Temp AS [tblEnvironmentSensorData.PayLod_M2m_Temp], \r\n            T.PayLod");
            viewString.Append("_M2m_wd AS [tblEnvironmentSensorData.PayLod_M2m_wd], \r\n            T.PayLod_M2m_");
            viewString.Append("Ws AS [tblEnvironmentSensorData.PayLod_M2m_Ws], \r\n            T.Topic AS tblEnvi");
            viewString.Append("ronmentSensorData_Topic, \r\n            T.UniqueId AS tblEnvironmentSensorData_Un");
            viewString.Append("iqueId, \r\n            T.UniqueIdType AS tblEnvironmentSensorData_UniqueIdType, \r");
            viewString.Append("\n            T.ReceiveDateTime AS tblEnvironmentSensorData_ReceiveDateTime, \r\n  ");
            viewString.Append("          T.AlertID AS tblEnvironmentSensorData_AlertID, \r\n            T.DeviceI");
            viewString.Append("D AS tblEnvironmentSensorData_DeviceID, \r\n            T.PayLod_M2m_G7 AS [tblEnv");
            viewString.Append("ironmentSensorData.PayLod_M2m_G7], \r\n            T.PayLod_M2m_bs AS [tblEnvironm");
            viewString.Append("entSensorData.PayLod_M2m_bs], \r\n            T.PayLod_M2m_leq AS [tblEnvironmentS");
            viewString.Append("ensorData.PayLod_M2m_leq], \r\n            T.PayLod_M2m_lmin AS [tblEnvironmentSen");
            viewString.Append("sorData.PayLod_M2m_lmin], \r\n            T.PayLod_M2m_lmax AS [tblEnvironmentSens");
            viewString.Append("orData.PayLod_M2m_lmax], \r\n            T.PayLod_M2m_rain AS [tblEnvironmentSenso");
            viewString.Append("rData.PayLod_M2m_rain], \r\n            T.PayLod_M2m_light AS [tblEnvironmentSenso");
            viewString.Append("rData.PayLod_M2m_light], \r\n            T.PayLod_M2m_flood AS [tblEnvironmentSens");
            viewString.Append("orData.PayLod_M2m_flood], \r\n            T.PayLod_M2m_AQI AS [tblEnvironmentSenso");
            viewString.Append("rData.PayLod_M2m_AQI], \r\n            True AS _from0\r\n        FROM CentralDBModel");
            viewString.Append("StoreContainer.tblEnvironmentSensorData AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblEnvironmentSensorData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblEnvironmentthreshold
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView341()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblEnvironmentthreshold", @"
    SELECT VALUE -- Constructing tblEnvironmentthreshold
        [CentralDBModel.Store.tblEnvironmentthreshold](T1.tblEnvironmentthreshold_ID, T1.tblEnvironmentthreshold_SensorID, T1.tblEnvironmentthreshold_SensorType, T1.tblEnvironmentthreshold_ThresholdValue)
    FROM (
        SELECT 
            T.ID AS tblEnvironmentthreshold_ID, 
            T.SensorID AS tblEnvironmentthreshold_SensorID, 
            T.SensorType AS tblEnvironmentthreshold_SensorType, 
            T.ThresholdValue AS tblEnvironmentthreshold_ThresholdValue, 
            True AS _from0
        FROM Entities.tblEnvironmentthreshold AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblEnvironmentthreshold
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView342()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblEnvironmentthreshold", @"
    SELECT VALUE -- Constructing tblEnvironmentthreshold
        [CentralDBModel.tblEnvironmentthreshold](T1.tblEnvironmentthreshold_ID, T1.tblEnvironmentthreshold_SensorType, T1.tblEnvironmentthreshold_ThresholdValue, T1.tblEnvironmentthreshold_SensorID)
    FROM (
        SELECT 
            T.ID AS tblEnvironmentthreshold_ID, 
            T.SensorType AS tblEnvironmentthreshold_SensorType, 
            T.ThresholdValue AS tblEnvironmentthreshold_ThresholdValue, 
            T.SensorID AS tblEnvironmentthreshold_SensorID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblEnvironmentthreshold AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblWasteBinSensorData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView343()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3650);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblWasteBinSensorData\r\n        [CentralDBMode");
            viewString.Append("l.Store.tblWasteBinSensorData](T1.tblWasteBinSensorData_ID, T1.tblWasteBinSensor");
            viewString.Append("Data_DeviceID, T1.tblWasteBinSensorData_Manufacturer, T1.tblWasteBinSensorData_M");
            viewString.Append("odelId, T1.tblWasteBinSensorData_MessageType, T1.tblWasteBinSensorData_Ac, T1.tb");
            viewString.Append("lWasteBinSensorData_AccOff, T1.tblWasteBinSensorData_AccountId, T1.tblWasteBinSe");
            viewString.Append("nsorData_Address, T1.[tblWasteBinSensorData.Mmi_DeviceID], T1.tblWasteBinSensorD");
            viewString.Append("ata_DigitalInput1, T1.tblWasteBinSensorData_DigitalInput3, T1.tblWasteBinSensorD");
            viewString.Append("ata_EntityId, T1.tblWasteBinSensorData_FuelLevel, T1.tblWasteBinSensorData_GpsFi");
            viewString.Append("x, T1.tblWasteBinSensorData_Gsmlevel, T1.tblWasteBinSensorData_Heading, T1.tblWa");
            viewString.Append("steBinSensorData_HeatSinkTemp, T1.[tblWasteBinSensorData.Mmi_ID], T1.tblWasteBin");
            viewString.Append("SensorData_IndianBox, T1.tblWasteBinSensorData_InsertTime, T1.tblWasteBinSensorD");
            viewString.Append("ata_Latitude, T1.tblWasteBinSensorData_LocationSource, T1.tblWasteBinSensorData_");
            viewString.Append("Longitude, T1.tblWasteBinSensorData_MovementStatus, T1.tblWasteBinSensorData_Num");
            viewString.Append("berOfSatellites, T1.tblWasteBinSensorData_History, T1.tblWasteBinSensorData_Spee");
            viewString.Append("d, T1.tblWasteBinSensorData_Timestamp, T1.tblWasteBinSensorData_UniqueId, T1.tbl");
            viewString.Append("WasteBinSensorData_Valid, T1.tblWasteBinSensorData_validGPS, T1.tblWasteBinSenso");
            viewString.Append("rData_ReceiveDateTime, T1.tblWasteBinSensorData_AlertID, T1.tblWasteBinSensorDat");
            viewString.Append("a_DevID)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS tblWasteBinSensorData");
            viewString.Append("_ID, \r\n            T.DeviceID AS tblWasteBinSensorData_DeviceID, \r\n            T");
            viewString.Append(".Manufacturer AS tblWasteBinSensorData_Manufacturer, \r\n            T.ModelId AS ");
            viewString.Append("tblWasteBinSensorData_ModelId, \r\n            T.MessageType AS tblWasteBinSensorD");
            viewString.Append("ata_MessageType, \r\n            T.Ac AS tblWasteBinSensorData_Ac, \r\n            T");
            viewString.Append(".AccOff AS tblWasteBinSensorData_AccOff, \r\n            T.AccountId AS tblWasteBi");
            viewString.Append("nSensorData_AccountId, \r\n            T.Address AS tblWasteBinSensorData_Address,");
            viewString.Append(" \r\n            T.Mmi_DeviceID AS [tblWasteBinSensorData.Mmi_DeviceID], \r\n       ");
            viewString.Append("     T.DigitalInput1 AS tblWasteBinSensorData_DigitalInput1, \r\n            T.Dig");
            viewString.Append("italInput3 AS tblWasteBinSensorData_DigitalInput3, \r\n            T.EntityId AS t");
            viewString.Append("blWasteBinSensorData_EntityId, \r\n            T.FuelLevel AS tblWasteBinSensorDat");
            viewString.Append("a_FuelLevel, \r\n            T.GpsFix AS tblWasteBinSensorData_GpsFix, \r\n         ");
            viewString.Append("   T.Gsmlevel AS tblWasteBinSensorData_Gsmlevel, \r\n            T.Heading AS tblW");
            viewString.Append("asteBinSensorData_Heading, \r\n            T.HeatSinkTemp AS tblWasteBinSensorData");
            viewString.Append("_HeatSinkTemp, \r\n            T.Mmi_ID AS [tblWasteBinSensorData.Mmi_ID], \r\n     ");
            viewString.Append("       T.IndianBox AS tblWasteBinSensorData_IndianBox, \r\n            T.InsertTim");
            viewString.Append("e AS tblWasteBinSensorData_InsertTime, \r\n            T.Latitude AS tblWasteBinSe");
            viewString.Append("nsorData_Latitude, \r\n            T.LocationSource AS tblWasteBinSensorData_Locat");
            viewString.Append("ionSource, \r\n            T.Longitude AS tblWasteBinSensorData_Longitude, \r\n     ");
            viewString.Append("       T.MovementStatus AS tblWasteBinSensorData_MovementStatus, \r\n            T");
            viewString.Append(".NumberOfSatellites AS tblWasteBinSensorData_NumberOfSatellites, \r\n            T");
            viewString.Append(".History AS tblWasteBinSensorData_History, \r\n            T.Speed AS tblWasteBinS");
            viewString.Append("ensorData_Speed, \r\n            T.Timestamp AS tblWasteBinSensorData_Timestamp, \r");
            viewString.Append("\n            T.UniqueId AS tblWasteBinSensorData_UniqueId, \r\n            T.Valid");
            viewString.Append(" AS tblWasteBinSensorData_Valid, \r\n            T.validGPS AS tblWasteBinSensorDa");
            viewString.Append("ta_validGPS, \r\n            T.ReceiveDateTime AS tblWasteBinSensorData_ReceiveDat");
            viewString.Append("eTime, \r\n            T.AlertID AS tblWasteBinSensorData_AlertID, \r\n            T");
            viewString.Append(".DevID AS tblWasteBinSensorData_DevID, \r\n            True AS _from0\r\n        FRO");
            viewString.Append("M Entities.tblWasteBinSensorData AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblWasteBinSensorData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Entities.tblWasteBinSensorData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView344()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3664);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tblWasteBinSensorData\r\n        [CentralDBMode");
            viewString.Append("l.tblWasteBinSensorData](T1.tblWasteBinSensorData_ID, T1.tblWasteBinSensorData_D");
            viewString.Append("eviceID, T1.tblWasteBinSensorData_Manufacturer, T1.tblWasteBinSensorData_ModelId");
            viewString.Append(", T1.tblWasteBinSensorData_MessageType, T1.tblWasteBinSensorData_Ac, T1.tblWaste");
            viewString.Append("BinSensorData_AccOff, T1.tblWasteBinSensorData_AccountId, T1.tblWasteBinSensorDa");
            viewString.Append("ta_Address, T1.[tblWasteBinSensorData.Mmi_DeviceID], T1.tblWasteBinSensorData_Di");
            viewString.Append("gitalInput1, T1.tblWasteBinSensorData_DigitalInput3, T1.tblWasteBinSensorData_En");
            viewString.Append("tityId, T1.tblWasteBinSensorData_FuelLevel, T1.tblWasteBinSensorData_GpsFix, T1.");
            viewString.Append("tblWasteBinSensorData_Gsmlevel, T1.tblWasteBinSensorData_Heading, T1.tblWasteBin");
            viewString.Append("SensorData_HeatSinkTemp, T1.[tblWasteBinSensorData.Mmi_ID], T1.tblWasteBinSensor");
            viewString.Append("Data_IndianBox, T1.tblWasteBinSensorData_InsertTime, T1.tblWasteBinSensorData_La");
            viewString.Append("titude, T1.tblWasteBinSensorData_LocationSource, T1.tblWasteBinSensorData_Longit");
            viewString.Append("ude, T1.tblWasteBinSensorData_MovementStatus, T1.tblWasteBinSensorData_NumberOfS");
            viewString.Append("atellites, T1.tblWasteBinSensorData_History, T1.tblWasteBinSensorData_Speed, T1.");
            viewString.Append("tblWasteBinSensorData_Timestamp, T1.tblWasteBinSensorData_UniqueId, T1.tblWasteB");
            viewString.Append("inSensorData_Valid, T1.tblWasteBinSensorData_validGPS, T1.tblWasteBinSensorData_");
            viewString.Append("ReceiveDateTime, T1.tblWasteBinSensorData_AlertID, T1.tblWasteBinSensorData_DevI");
            viewString.Append("D)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS tblWasteBinSensorData_ID, \r");
            viewString.Append("\n            T.DeviceID AS tblWasteBinSensorData_DeviceID, \r\n            T.Manuf");
            viewString.Append("acturer AS tblWasteBinSensorData_Manufacturer, \r\n            T.ModelId AS tblWas");
            viewString.Append("teBinSensorData_ModelId, \r\n            T.MessageType AS tblWasteBinSensorData_Me");
            viewString.Append("ssageType, \r\n            T.Ac AS tblWasteBinSensorData_Ac, \r\n            T.AccOf");
            viewString.Append("f AS tblWasteBinSensorData_AccOff, \r\n            T.AccountId AS tblWasteBinSenso");
            viewString.Append("rData_AccountId, \r\n            T.Address AS tblWasteBinSensorData_Address, \r\n   ");
            viewString.Append("         T.Mmi_DeviceID AS [tblWasteBinSensorData.Mmi_DeviceID], \r\n            T");
            viewString.Append(".DigitalInput1 AS tblWasteBinSensorData_DigitalInput1, \r\n            T.DigitalIn");
            viewString.Append("put3 AS tblWasteBinSensorData_DigitalInput3, \r\n            T.EntityId AS tblWast");
            viewString.Append("eBinSensorData_EntityId, \r\n            T.FuelLevel AS tblWasteBinSensorData_Fuel");
            viewString.Append("Level, \r\n            T.GpsFix AS tblWasteBinSensorData_GpsFix, \r\n            T.G");
            viewString.Append("smlevel AS tblWasteBinSensorData_Gsmlevel, \r\n            T.Heading AS tblWasteBi");
            viewString.Append("nSensorData_Heading, \r\n            T.HeatSinkTemp AS tblWasteBinSensorData_HeatS");
            viewString.Append("inkTemp, \r\n            T.Mmi_ID AS [tblWasteBinSensorData.Mmi_ID], \r\n           ");
            viewString.Append(" T.IndianBox AS tblWasteBinSensorData_IndianBox, \r\n            T.InsertTime AS t");
            viewString.Append("blWasteBinSensorData_InsertTime, \r\n            T.Latitude AS tblWasteBinSensorDa");
            viewString.Append("ta_Latitude, \r\n            T.LocationSource AS tblWasteBinSensorData_LocationSou");
            viewString.Append("rce, \r\n            T.Longitude AS tblWasteBinSensorData_Longitude, \r\n           ");
            viewString.Append(" T.MovementStatus AS tblWasteBinSensorData_MovementStatus, \r\n            T.Numbe");
            viewString.Append("rOfSatellites AS tblWasteBinSensorData_NumberOfSatellites, \r\n            T.Histo");
            viewString.Append("ry AS tblWasteBinSensorData_History, \r\n            T.Speed AS tblWasteBinSensorD");
            viewString.Append("ata_Speed, \r\n            T.Timestamp AS tblWasteBinSensorData_Timestamp, \r\n     ");
            viewString.Append("       T.UniqueId AS tblWasteBinSensorData_UniqueId, \r\n            T.Valid AS tb");
            viewString.Append("lWasteBinSensorData_Valid, \r\n            T.validGPS AS tblWasteBinSensorData_val");
            viewString.Append("idGPS, \r\n            T.ReceiveDateTime AS tblWasteBinSensorData_ReceiveDateTime,");
            viewString.Append(" \r\n            T.AlertID AS tblWasteBinSensorData_AlertID, \r\n            T.DevID");
            viewString.Append(" AS tblWasteBinSensorData_DevID, \r\n            True AS _from0\r\n        FROM Cent");
            viewString.Append("ralDBModelStoreContainer.tblWasteBinSensorData AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblWasteBinSensorData", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblVehicleTrackingData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView345()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblVehicleTrackingData", @"
    SELECT VALUE -- Constructing tblVehicleTrackingData
        [CentralDBModel.Store.tblVehicleTrackingData](T1.tblVehicleTrackingData_ID, T1.tblVehicleTrackingData_Latitude, T1.tblVehicleTrackingData_Location, T1.tblVehicleTrackingData_Longitude, T1.tblVehicleTrackingData_Speed, T1.tblVehicleTrackingData_Updated, T1.[tblVehicleTrackingData.Veh_reg], T1.tblVehicleTrackingData_ReceivedDateTime, T1.tblVehicleTrackingData_Resv1, T1.tblVehicleTrackingData_Resv2, T1.tblVehicleTrackingData_Resv3)
    FROM (
        SELECT 
            T.ID AS tblVehicleTrackingData_ID, 
            T.Latitude AS tblVehicleTrackingData_Latitude, 
            T.Location AS tblVehicleTrackingData_Location, 
            T.Longitude AS tblVehicleTrackingData_Longitude, 
            T.Speed AS tblVehicleTrackingData_Speed, 
            T.Updated AS tblVehicleTrackingData_Updated, 
            T.Veh_reg AS [tblVehicleTrackingData.Veh_reg], 
            T.ReceivedDateTime AS tblVehicleTrackingData_ReceivedDateTime, 
            T.Resv1 AS tblVehicleTrackingData_Resv1, 
            T.Resv2 AS tblVehicleTrackingData_Resv2, 
            T.Resv3 AS tblVehicleTrackingData_Resv3, 
            True AS _from0
        FROM Entities.tblVehicleTrackingData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblVehicleTrackingData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView346()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblVehicleTrackingData", @"
    SELECT VALUE -- Constructing tblVehicleTrackingData
        [CentralDBModel.tblVehicleTrackingData](T1.tblVehicleTrackingData_ID, T1.tblVehicleTrackingData_Latitude, T1.tblVehicleTrackingData_Location, T1.tblVehicleTrackingData_Longitude, T1.tblVehicleTrackingData_Speed, T1.tblVehicleTrackingData_Updated, T1.[tblVehicleTrackingData.Veh_reg], T1.tblVehicleTrackingData_ReceivedDateTime, T1.tblVehicleTrackingData_Resv1, T1.tblVehicleTrackingData_Resv2, T1.tblVehicleTrackingData_Resv3)
    FROM (
        SELECT 
            T.ID AS tblVehicleTrackingData_ID, 
            T.Latitude AS tblVehicleTrackingData_Latitude, 
            T.Location AS tblVehicleTrackingData_Location, 
            T.Longitude AS tblVehicleTrackingData_Longitude, 
            T.Speed AS tblVehicleTrackingData_Speed, 
            T.Updated AS tblVehicleTrackingData_Updated, 
            T.Veh_reg AS [tblVehicleTrackingData.Veh_reg], 
            T.ReceivedDateTime AS tblVehicleTrackingData_ReceivedDateTime, 
            T.Resv1 AS tblVehicleTrackingData_Resv1, 
            T.Resv2 AS tblVehicleTrackingData_Resv2, 
            T.Resv3 AS tblVehicleTrackingData_Resv3, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblVehicleTrackingData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblTimeSyncinfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView347()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblTimeSyncinfo", @"
    SELECT VALUE -- Constructing tblTimeSyncinfo
        [CentralDBModel.Store.tblTimeSyncinfo](T1.tblTimeSyncinfo_ID, T1.tblTimeSyncinfo_DeviceID, T1.tblTimeSyncinfo_DVRNVRTypeID, T1.tblTimeSyncinfo_DateTimeSyncStatus, T1.tblTimeSyncinfo_Remarks)
    FROM (
        SELECT 
            T.ID AS tblTimeSyncinfo_ID, 
            T.DeviceID AS tblTimeSyncinfo_DeviceID, 
            T.DVRNVRTypeID AS tblTimeSyncinfo_DVRNVRTypeID, 
            T.DateTimeSyncStatus AS tblTimeSyncinfo_DateTimeSyncStatus, 
            T.Remarks AS tblTimeSyncinfo_Remarks, 
            True AS _from0
        FROM Entities.tblTimeSyncinfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblTimeSyncinfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView348()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblTimeSyncinfo", @"
    SELECT VALUE -- Constructing tblTimeSyncinfo
        [CentralDBModel.tblTimeSyncinfo](T1.tblTimeSyncinfo_ID, T1.tblTimeSyncinfo_DeviceID, T1.tblTimeSyncinfo_DVRNVRTypeID, T1.tblTimeSyncinfo_DateTimeSyncStatus, T1.tblTimeSyncinfo_Remarks)
    FROM (
        SELECT 
            T.ID AS tblTimeSyncinfo_ID, 
            T.DeviceID AS tblTimeSyncinfo_DeviceID, 
            T.DVRNVRTypeID AS tblTimeSyncinfo_DVRNVRTypeID, 
            T.DateTimeSyncStatus AS tblTimeSyncinfo_DateTimeSyncStatus, 
            T.Remarks AS tblTimeSyncinfo_Remarks, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblTimeSyncinfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblEscalationNotificationInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView349()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblEscalationNotificationInfo", @"
    SELECT VALUE -- Constructing tblEscalationNotificationInfo
        [CentralDBModel.Store.tblEscalationNotificationInfo](T1.tblEscalationNotificationInfo_ID, T1.tblEscalationNotificationInfo_AlertID)
    FROM (
        SELECT 
            T.ID AS tblEscalationNotificationInfo_ID, 
            T.AlertID AS tblEscalationNotificationInfo_AlertID, 
            True AS _from0
        FROM Entities.tblEscalationNotificationInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblEscalationNotificationInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView350()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblEscalationNotificationInfo", @"
    SELECT VALUE -- Constructing tblEscalationNotificationInfo
        [CentralDBModel.tblEscalationNotificationInfo](T1.tblEscalationNotificationInfo_ID, T1.tblEscalationNotificationInfo_AlertID)
    FROM (
        SELECT 
            T.ID AS tblEscalationNotificationInfo_ID, 
            T.AlertID AS tblEscalationNotificationInfo_AlertID, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblEscalationNotificationInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblAlertEscalationLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView351()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblAlertEscalationLog", @"
    SELECT VALUE -- Constructing tblAlertEscalationLog
        [CentralDBModel.Store.tblAlertEscalationLog](T1.tblAlertEscalationLog_ID, T1.tblAlertEscalationLog_AlertID, T1.tblAlertEscalationLog_IdentifierIP, T1.tblAlertEscalationLog_EscalationStatus, T1.tblAlertEscalationLog_EscalationDatetime)
    FROM (
        SELECT 
            T.ID AS tblAlertEscalationLog_ID, 
            T.AlertID AS tblAlertEscalationLog_AlertID, 
            T.IdentifierIP AS tblAlertEscalationLog_IdentifierIP, 
            T.EscalationStatus AS tblAlertEscalationLog_EscalationStatus, 
            T.EscalationDatetime AS tblAlertEscalationLog_EscalationDatetime, 
            True AS _from0
        FROM Entities.tblAlertEscalationLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblAlertEscalationLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView352()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblAlertEscalationLog", @"
    SELECT VALUE -- Constructing tblAlertEscalationLog
        [CentralDBModel.tblAlertEscalationLog](T1.tblAlertEscalationLog_ID, T1.tblAlertEscalationLog_AlertID, T1.tblAlertEscalationLog_IdentifierIP, T1.tblAlertEscalationLog_EscalationStatus, T1.tblAlertEscalationLog_EscalationDatetime)
    FROM (
        SELECT 
            T.ID AS tblAlertEscalationLog_ID, 
            T.AlertID AS tblAlertEscalationLog_AlertID, 
            T.IdentifierIP AS tblAlertEscalationLog_IdentifierIP, 
            T.EscalationStatus AS tblAlertEscalationLog_EscalationStatus, 
            T.EscalationDatetime AS tblAlertEscalationLog_EscalationDatetime, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblAlertEscalationLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblANPRLPDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView353()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblANPRLPDetails", @"
    SELECT VALUE -- Constructing tblANPRLPDetails
        [CentralDBModel.Store.tblANPRLPDetails](T1.tblANPRLPDetails_ID, T1.tblANPRLPDetails_UID, T1.tblANPRLPDetails_DeviceIPaddress, T1.tblANPRLPDetails_DeviceName, T1.tblANPRLPDetails_LPUPassword, T1.tblANPRLPDetails_Location, T1.[tblANPRLPDetails.Https_Port], T1.[tblANPRLPDetails.SSH_Port], T1.tblANPRLPDetails_RegisteredStatus, T1.tblANPRLPDetails_InterfaceID, T1.tblANPRLPDetails_Status)
    FROM (
        SELECT 
            T.ID AS tblANPRLPDetails_ID, 
            T.UID AS tblANPRLPDetails_UID, 
            T.DeviceIPaddress AS tblANPRLPDetails_DeviceIPaddress, 
            T.DeviceName AS tblANPRLPDetails_DeviceName, 
            T.LPUPassword AS tblANPRLPDetails_LPUPassword, 
            T.Location AS tblANPRLPDetails_Location, 
            T.Https_Port AS [tblANPRLPDetails.Https_Port], 
            T.SSH_Port AS [tblANPRLPDetails.SSH_Port], 
            T.RegisteredStatus AS tblANPRLPDetails_RegisteredStatus, 
            T.InterfaceID AS tblANPRLPDetails_InterfaceID, 
            T.Status AS tblANPRLPDetails_Status, 
            True AS _from0
        FROM Entities.tblANPRLPDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblANPRLPDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView354()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblANPRLPDetails", @"
    SELECT VALUE -- Constructing tblANPRLPDetails
        [CentralDBModel.tblANPRLPDetails](T1.tblANPRLPDetails_ID, T1.tblANPRLPDetails_UID, T1.tblANPRLPDetails_DeviceIPaddress, T1.tblANPRLPDetails_DeviceName, T1.tblANPRLPDetails_LPUPassword, T1.tblANPRLPDetails_Location, T1.[tblANPRLPDetails.Https_Port], T1.[tblANPRLPDetails.SSH_Port], T1.tblANPRLPDetails_RegisteredStatus, T1.tblANPRLPDetails_InterfaceID, T1.tblANPRLPDetails_Status)
    FROM (
        SELECT 
            T.ID AS tblANPRLPDetails_ID, 
            T.UID AS tblANPRLPDetails_UID, 
            T.DeviceIPaddress AS tblANPRLPDetails_DeviceIPaddress, 
            T.DeviceName AS tblANPRLPDetails_DeviceName, 
            T.LPUPassword AS tblANPRLPDetails_LPUPassword, 
            T.Location AS tblANPRLPDetails_Location, 
            T.Https_Port AS [tblANPRLPDetails.Https_Port], 
            T.SSH_Port AS [tblANPRLPDetails.SSH_Port], 
            T.RegisteredStatus AS tblANPRLPDetails_RegisteredStatus, 
            T.InterfaceID AS tblANPRLPDetails_InterfaceID, 
            T.Status AS tblANPRLPDetails_Status, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblANPRLPDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CentralDBModelStoreContainer.tblMachineStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView355()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CentralDBModelStoreContainer.tblMachineStatus", @"
    SELECT VALUE -- Constructing tblMachineStatus
        [CentralDBModel.Store.tblMachineStatus](T1.tblMachineStatus_ID, T1.tblMachineStatus_MachineName, T1.tblMachineStatus_IPAddress, T1.tblMachineStatus_Port, T1.tblMachineStatus_ServiceName, T1.tblMachineStatus_UpdateFlag, T1.tblMachineStatus_ServiceStatus)
    FROM (
        SELECT 
            T.ID AS tblMachineStatus_ID, 
            T.MachineName AS tblMachineStatus_MachineName, 
            T.IPAddress AS tblMachineStatus_IPAddress, 
            T.Port AS tblMachineStatus_Port, 
            T.ServiceName AS tblMachineStatus_ServiceName, 
            T.UpdateFlag AS tblMachineStatus_UpdateFlag, 
            T.ServiceStatus AS tblMachineStatus_ServiceStatus, 
            True AS _from0
        FROM Entities.tblMachineStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.tblMachineStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView356()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.tblMachineStatus", @"
    SELECT VALUE -- Constructing tblMachineStatus
        [CentralDBModel.tblMachineStatus](T1.tblMachineStatus_ID, T1.tblMachineStatus_MachineName, T1.tblMachineStatus_IPAddress, T1.tblMachineStatus_Port, T1.tblMachineStatus_ServiceName, T1.tblMachineStatus_UpdateFlag, T1.tblMachineStatus_ServiceStatus)
    FROM (
        SELECT 
            T.ID AS tblMachineStatus_ID, 
            T.MachineName AS tblMachineStatus_MachineName, 
            T.IPAddress AS tblMachineStatus_IPAddress, 
            T.Port AS tblMachineStatus_Port, 
            T.ServiceName AS tblMachineStatus_ServiceName, 
            T.UpdateFlag AS tblMachineStatus_UpdateFlag, 
            T.ServiceStatus AS tblMachineStatus_ServiceStatus, 
            True AS _from0
        FROM CentralDBModelStoreContainer.tblMachineStatus AS T
    ) AS T1");
        }
    }
}
